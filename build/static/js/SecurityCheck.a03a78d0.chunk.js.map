{"version":3,"sources":["components/Pages/Auth/LoginPage/SecurityCheck/index.jsx","components/Base/FormControls/index.jsx","styles/img/cred-info1.svg","styles/img/cred-info2.svg","styles/img/cred-info3.svg","components/HOC/Auth.jsx"],"names":["SecurityCheck","history","useHistory","dispatch","useDispatch","locationData","useLocation","state","useState","Date","getTime","time","setTime","timer","setTimer","useEffect","intervelId","result","seconds","minutes","clearInterval","setInterval","num","currentTime","String","slice","leftTime","duration","moment","length","handleResendCode","type","types","POST_RESEND_SMS_CODE_START","payload","phone","initialValues","sms","onSubmit","values","resetForm","LOGIN_BY_SMS_START","remember","setFieldValue","className","L","translate","placeholder","name","component","Input","style","padding","fontSize","disabled","onClick","to","routes","Auth","ResetPassword","path","FormControl","form","field","isCheckMark","isShowPass","isShowOldPass","setIsShowOldPass","setIsShowPass","isShowConfirmPass","setIsShowConfirmPass","isSendBtn","isShowMaxButton","setMaxCallback","sendBtnCallback","textCurrency","textCurrency2","props","title","errors","touched","children","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","inputMode","pattern","maxLength","ref","inputRef","InputWithOnChange","onChange","TextArea","rows","cols","InputSwitch","labelFor","id","checked","htmlFor","DebounceFormControl","DebounceFormikInput","value","replace","debounceTimeout","e","target","toString","handleAmountChange","debounceRef","src","buy","alt","trade","store"],"mappings":"qTA8JeA,UAlJO,WACpB,IAAMC,EAAUC,cACVC,EAAWC,cAEXC,EADWC,cACaC,MAC9B,EAAwBC,oBAAS,IAAIC,MAAOC,UAAY,KAAxD,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAMAC,qBAAU,WACR,IAAIC,EACJ,GAAIL,EAAM,CACR,IAEMM,EAAS,CACbC,QAAS,EACTC,QAAS,GAGPH,GACFI,cAAcJ,GAGZL,IACFK,EAAaK,aAAY,WACvB,IAbWC,EAaLC,EAAcC,QAAO,IAAIf,MAAOC,WAAWe,MAAM,EAAG,IAEpDC,GADUF,OAAOb,GAAMc,MAAM,EAAG,KACTF,EACvBI,EAAWC,IAAOD,SAASD,EAAU,WAI3C,GAFAT,EAAOC,SAlBII,EAkBaK,EAAST,UAlBS,IAAvBM,OAAOF,GAAKO,OAAZ,WAA+BP,GAAQA,IAoBlC,IAApBL,EAAOC,QAIT,OAHAE,cAAcJ,GACdJ,EAAQ,QACRE,EAAS,GAIXA,EAASG,EAAOC,WACf,MAGP,OAAO,WACLE,cAAcJ,MAEf,CAACL,IAEJ,IASMmB,EAAmB,WACvB3B,EAAS,CACP4B,KAAMC,IAAMC,2BACZC,QAAS,CACPC,MAAK,OAAE9B,QAAF,IAAEA,OAAF,EAAEA,EAAc8B,SAGzBvB,GAAQ,IAAIH,MAAOC,UAAY,MAGjC,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAQ0B,cAAa,eAhEH,CACpBC,IAAK,KA+D0CC,SArBhC,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC1BrC,EAAS,CACP4B,KAAMC,IAAMS,mBACZP,QAAQ,2BAAMK,GAAP,IAAeJ,MAAK,OAAE9B,QAAF,IAAEA,OAAF,EAAEA,EAAc8B,MAAOO,SAAU,IAC5DzC,YAEFuC,KAeE,SACG,sBAAGG,cAAH,EAAkBH,UAAlB,wBACC,cAAC,IAAD,CAAMI,UAAU,wBAAhB,SACE,sBAAKA,UAAU,4BAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,mBAAGA,UAAU,aAAb,SACGC,IAAEC,UAAU,gDAGjB,sBAAKF,UAAU,kBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,4BACGC,IAAEC,UAAU,gDAIjB,sBAAKF,UAAU,mCAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,IAAD,CACEb,KAAK,OACLgB,YAAaF,IAAEC,UACb,4CAEFF,UAAU,QACVI,KAAK,MACLC,UAAWC,QAGf,qBAAKN,UAAU,kBAAf,SACE,yBACEA,UAAS,kCACP/B,EAAQ,mBAAqB,IAE/BsC,MAAO,CAAEC,QAAS,MAAOC,SAAU,QACnCC,WAAYzC,EACZkB,KAAK,SACLwB,QAASzB,EAPX,UASGjB,EAAQ,iCAAOA,EAAP,OAAwB,KAChC,kBAIP,oBAAG+B,UAAU,qDAAb,UACGC,IAAEC,UAAU,4CAA6C,IAD5D,iBAEMzC,QAFN,IAEMA,GAFN,UAEMA,EAAc8B,aAFpB,aAEM,EAAqBV,MACvB,EACA,GAJJ,uBAKWpB,QALX,IAKWA,GALX,UAKWA,EAAc8B,aALzB,aAKW,EAAqBV,OAAO,aAI3C,qBAAKmB,UAAU,eAAf,SACE,wBAAQA,UAAU,sBAAlB,SACGC,IAAEC,UAAU,gDAGjB,qBAAKF,UAAU,aAAf,SACE,cAAC,IAAD,CACEA,UAAU,cACVY,GAAIC,IAAOC,KAAKC,cAAcC,KAFhC,SAIGf,IAAEC,UAAU,4D,gkBC7IzBe,EAAc,SAAC,GAkBd,IAjBLC,EAiBI,EAjBJA,KACAC,EAgBI,EAhBJA,MACAC,EAeI,EAfJA,YACAC,EAcI,EAdJA,WACAC,EAaI,EAbJA,cACAC,EAYI,EAZJA,iBACAC,EAWI,EAXJA,cACAC,EAUI,EAVJA,kBACAC,EASI,EATJA,qBACAC,EAQI,EARJA,UACAC,EAOI,EAPJA,gBACAC,EAMI,EANJA,eACAC,EAKI,EALJA,gBACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,cAEGC,GACC,EAFJC,MAEI,kBACEC,EAASjB,EAAKiB,OAAOhB,EAAMf,OAAS,KACpCgC,EAAUlB,EAAKkB,QAAQjB,EAAMf,OAAS,KAE5C,OACE,qCACE,sBAAKJ,UAAS,qBAAgBmC,GAAUC,EAAU,QAAU,IAA5D,UACGH,EAAMI,SACNjB,IAAgBe,GACf,sBAAMnC,UAAU,+BAAhB,SACE,qBACEA,UAAU,OACVsC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,SAQE,sBACEC,SAAS,UACTC,SAAS,UACTC,EAAE,4jBACFJ,KAAK,iBAKXjB,GAAiBE,GAAwBH,IACzC,yBACEpC,KAAK,SACLa,UAAU,YACVW,QACEa,EACI,kBAAMA,GAAeH,IACrBK,EACA,kBAAMA,GAAsBD,IAC5B,kBAAMF,GAAkBD,IARhC,UAWE,sBACEtB,UAAU,iBACVsC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,UAQE,sBACEC,SAAS,UACTC,SAAS,UACTC,EAAE,8wBACFJ,KAAK,YAEP,sBACEE,SAAS,UACTC,SAAS,UACTC,EAAE,icACFJ,KAAK,eAGT,qBACEzC,UAAU,qBACVsC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,SAQE,sBACEC,SAAS,UACTC,SAAS,UACTC,EAAE,k3DACFJ,KAAK,iBAMZd,GACC,wBAAQ3B,UAAU,YAAYb,KAAK,SAASwB,QAASmB,EAArD,SACG7B,IAAEC,UAAU,6BAIhB0B,GACC,wBACEzC,KAAK,SACLa,UAAU,2BACVW,QAASkB,EAHX,SAKG5B,IAAEC,UAAU,6BAIhB6B,GACC,sBACE/B,UAAS,yBACP4B,EAAkB,iCAAmC,IAFzD,SAKGG,IAIJC,GACC,sBAAMhC,UAAU,uCAAhB,SACGgC,OAING,GAAUC,GACT,oBAAGpC,UAAU,aAAb,UACE,sBAAMA,UAAU,mBAAhB,SACE,qBACEA,UAAU,OACVsC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,SAQE,sBACEG,EAAE,wNACFC,OAAO,UACPC,YAAY,IACZC,cAAc,QACdC,eAAe,cAIrB,+BAAOd,GAAUC,GAAWD,WAOzB7B,EAAQ,SAAA2B,GACnB,OACE,cAAChB,EAAD,2BAAiBgB,GAAjB,aACE,iDACMA,EAAMd,OADZ,IAEEhC,KAAM8C,EAAM9C,KACZa,UAAWiC,EAAMjC,UACjBG,YAAa8B,EAAM9B,YACnB+C,UAAWjB,EAAMiB,WAAa,KAC9BxC,SAAUuB,EAAMvB,UAAY,KAC5ByC,QAASlB,EAAMkB,SAAW,KAC1BC,UAAWnB,EAAMmB,WAAa,KAC9BC,IAAKpB,EAAMqB,UAAY,YAMlBC,EAAoB,SAAAtB,GAC/B,OACE,cAAChB,EAAD,2BAAiBgB,GAAjB,aACE,iDACMA,EAAMd,OADZ,IAEEhC,KAAM8C,EAAM9C,KACZa,UAAWiC,EAAMjC,UACjBG,YAAa8B,EAAM9B,YACnB+C,UAAWjB,EAAMiB,WAAa,KAC9BxC,SAAUuB,EAAMvB,UAAY,KAC5ByC,QAASlB,EAAMkB,SAAW,KAC1BC,UAAWnB,EAAMmB,WAAa,KAC9BC,IAAKpB,EAAMqB,UAAY,KACvBE,SAAUvB,EAAMuB,UAAY,YAMvBC,EAAW,SAAAxB,GACtB,OACE,cAAChB,EAAD,2BAAiBgB,GAAjB,aACE,oDACMA,EAAMd,OADZ,IAEEnB,UAAWiC,EAAMjC,UACjBG,YAAa8B,EAAM9B,YACnBuD,KAAMzB,EAAMyB,KACZC,KAAM1B,EAAM0B,KACZpD,MAAO0B,EAAM1B,aA6CRqD,EAAc,SAAC,GAOrB,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,GACA1D,EAII,EAJJA,KACA2D,EAGI,EAHJA,QACAP,EAEI,EAFJA,SAEI,IADJ9C,gBACI,SACJ,OACE,qBAAKV,UAAU,eAAf,SACE,wBAAOA,UAAU,oBAAoBgE,QAASH,EAA9C,UACE,uBACE1E,KAAK,WACLa,UAAU,yBACV8D,GAAIA,EACJ1D,KAAMA,EACN2D,QAASA,GAAW,EACpBP,SAAUA,EACV9C,SAAUA,IAEZ,sBAAMV,UAAU,8EAChB,sBAAMA,UAAU,6BAMlBiE,EAAsB,SAAC,GAOtB,IANL/C,EAMI,EANJA,KACAC,EAKI,EALJA,MACAY,EAII,EAJJA,aACAH,EAGI,EAHJA,gBAEGK,GACC,EAFJJ,eAEI,kBACEM,EAASjB,EAAKiB,OAAOhB,EAAMf,OAAS,KAE1C,OACE,qCACE,sBAAKJ,UAAS,qBAAgBmC,GAAU,SAAxC,UACGF,EAAMI,SAENN,GACC,sBACE/B,UAAS,yBACP4B,EAAkB,iCAAmC,IAFzD,SAKGG,OAINI,GACC,oBAAGnC,UAAU,aAAb,UACE,sBAAMA,UAAU,mBAAhB,SACE,qBACEA,UAAU,OACVsC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BANR,SAQE,sBACEG,EAAE,wNACFC,OAAO,UACPC,YAAY,IACZC,cAAc,QACdC,eAAe,cAIrB,+BAAOd,WAOJ+B,EAAsB,SAAAjC,GAMjC,OACE,eAACgC,EAAD,2BAAyBhC,GAAzB,cACE,cAAC,gBAAD,CACE9C,KAAK,SACLiB,KAAK,SACL+D,MAAOlC,EAAMkC,MAAMC,QAAQ,KAAM,KACjCpE,UAAU,qDACVG,YAAaF,IAAEC,UAAU,mCACzBmE,gBAAiB,IACjBb,SAde,SAAAc,GACnB,IAAMH,EAAQG,EAAEC,OAAOJ,MAAMC,QAAQ,KAAM,KAAKI,WAChDvC,EAAMwC,mBAAmBH,EAAGH,EAAOlC,EAAMlC,gBAarCuD,SAAUrB,EAAMyC,cAGjBzC,EAAML,iBACL,wBACEzC,KAAK,SACLa,UAAU,2BACVW,QAASsB,EAAMJ,eAHjB,SAKG5B,IAAEC,UAAU,mC,2DCpWR,G,KAAA,IAA0B,wCCA1B,MAA0B,uCCA1B,MAA0B,uC,OC2E1BY,IAnEF,SAAC,GAAkB,IAAhBuB,EAAe,EAAfA,SACd,OACE,0BAASrC,UAAU,mCAAnB,UACE,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,uBACf,qBAAKA,UAAU,6BACf,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,mBAAGA,UAAU,gBAAb,SAA8BC,IAAEC,UAAU,mBAG9C,sBAAKF,UAAU,iBAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAK2E,IAAKC,EAAKC,IAAI,OAErB,sBAAK7E,UAAU,kBAAf,UACE,mBAAGA,UAAU,wBAAb,SACGC,IAAEC,UAAU,eAEf,mBAAGF,UAAU,uBAAb,SACGC,IAAEC,UAAU,qBAInB,sBAAKF,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAK2E,IAAKG,EAAOD,IAAI,OAEvB,sBAAK7E,UAAU,kBAAf,UACE,mBAAGA,UAAU,wBAAb,SACGC,IAAEC,UAAU,eAEf,mBAAGF,UAAU,uBAAb,SACGC,IAAEC,UAAU,qBAInB,sBAAKF,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAK2E,IAAKI,EAAOF,IAAI,OAEvB,sBAAK7E,UAAU,kBAAf,UACE,mBAAGA,UAAU,wBAAb,SACGC,IAAEC,UAAU,eAEf,oBAAGF,UAAU,uBAAb,UACGC,IAAEC,UAAU,aAAc,oBAOtCmC","file":"static/js/SecurityCheck.a03a78d0.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport L from 'i18n-react';\nimport { Formik, Form, Field } from 'formik';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment';\nimport routes from '../../../../../routes';\nimport types from '../../../../../redux/types';\nimport Auth from '../../../../HOC/Auth';\nimport { Input } from '../../../../Base/FormControls';\nimport { closeModal, openModal } from '../../../../Base/Modal';\n\nconst SecurityCheck = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const locationData = location.state;\n  const [time, setTime] = useState(new Date().getTime() + 60 * 1000);\n  const [timer, setTimer] = useState(0);\n\n  const initialValues = {\n    sms: '',\n  };\n\n  useEffect(() => {\n    let intervelId;\n    if (time) {\n      const dooble = num => (String(num).length === 1 ? `0${num}` : num);\n\n      const result = {\n        seconds: 0,\n        minutes: 0,\n      };\n\n      if (intervelId) {\n        clearInterval(intervelId);\n      }\n\n      if (time) {\n        intervelId = setInterval(() => {\n          const currentTime = String(new Date().getTime()).slice(0, 10);\n          const endTime = String(time).slice(0, 10);\n          const leftTime = +endTime - +currentTime;\n          const duration = moment.duration(leftTime, 'seconds');\n\n          result.seconds = dooble(duration.seconds());\n\n          if (result.seconds === -1) {\n            clearInterval(intervelId);\n            setTime(0);\n            setTimer(0);\n            return;\n          }\n\n          setTimer(result.seconds);\n        }, 1000);\n      }\n    }\n    return () => {\n      clearInterval(intervelId);\n    };\n  }, [time]);\n\n  const onSubmit = (values, { resetForm }) => {\n    dispatch({\n      type: types.LOGIN_BY_SMS_START,\n      payload: { ...values, phone: locationData?.phone, remember: 0 },\n      history,\n    });\n    resetForm();\n  };\n\n  const handleResendCode = () => {\n    dispatch({\n      type: types.POST_RESEND_SMS_CODE_START,\n      payload: {\n        phone: locationData?.phone,\n      },\n    });\n    setTime(new Date().getTime() + 60 * 1000);\n  };\n\n  return (\n    <Auth>\n      <Formik initialValues={{ ...initialValues }} onSubmit={onSubmit}>\n        {({ setFieldValue, resetForm, ...formik }) => (\n          <Form className=\"cred-container__right\">\n            <div className=\"cred-form cred-form--main\">\n              <div className=\"cred-form__header\">\n                <p className=\"form-title\">\n                  {L.translate('Pages.Auth.LoginPage.SecurityCheck.item1')}\n                </p>\n              </div>\n              <div className=\"cred-form__body\">\n                <div className=\"cred-text cred-text--type2\">\n                  <p>\n                    {L.translate('Pages.Auth.LoginPage.SecurityCheck.item2')}\n                  </p>\n                </div>\n\n                <div className=\"cred-field cred-field--bigger-mt\">\n                  <div className=\"field-form\">\n                    <div className=\"field-form__input\">\n                      <Field\n                        type=\"text\"\n                        placeholder={L.translate(\n                          'Pages.Auth.LoginPage.SecurityCheck.item3',\n                        )}\n                        className=\"input\"\n                        name=\"sms\"\n                        component={Input}\n                      />\n                    </div>\n                    <div className=\"field-form__btn\">\n                      <button\n                        className={`page-btn page-btn--full ${\n                          timer ? 'page-btn--resend' : ''\n                        }`}\n                        style={{ padding: '5px', fontSize: '12px' }}\n                        disabled={!!timer}\n                        type=\"button\"\n                        onClick={handleResendCode}\n                      >\n                        {timer ? <span>{timer}s</span> : null}\n                        {' resend'}\n                      </button>\n                    </div>\n                  </div>\n                  <p className=\"field-hint field-hint--bigger-mt field-hint--type2\">\n                    {L.translate('Pages.Auth.LoginPage.SecurityCheck.item4')}{' '}\n                    {`${locationData?.phone?.slice(\n                      0,\n                      6,\n                    )} *** ${locationData?.phone?.slice(-4)}`}\n                  </p>\n                </div>\n              </div>\n              <div className=\"form-submit \">\n                <button className=\"button button--full\">\n                  {L.translate('Pages.Auth.LoginPage.SecurityCheck.item5')}\n                </button>\n              </div>\n              <div className=\"cred-panel\">\n                <Link\n                  className=\"forgot-pass\"\n                  to={routes.Auth.ResetPassword.path}\n                >\n                  {L.translate('Pages.Auth.LoginPage.SecurityCheck.item6')}\n                </Link>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </Auth>\n  );\n};\n\nexport default SecurityCheck;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react';\nimport L from 'i18n-react';\nimport { DebounceInput } from 'react-debounce-input';\n\nconst FormControl = ({\n  form,\n  field,\n  isCheckMark,\n  isShowPass,\n  isShowOldPass,\n  setIsShowOldPass,\n  setIsShowPass,\n  isShowConfirmPass,\n  setIsShowConfirmPass,\n  isSendBtn,\n  isShowMaxButton,\n  setMaxCallback,\n  sendBtnCallback,\n  textCurrency,\n  textCurrency2,\n  title,\n  ...props\n}) => {\n  const errors = form.errors[field.name] || null;\n  const touched = form.touched[field.name] || null;\n\n  return (\n    <>\n      <div className={`field-wrap ${errors && touched ? 'error' : ''}`}>\n        {props.children}\n        {isCheckMark && !errors && (\n          <span className=\"field-icon field-icon--check\">\n            <svg\n              className=\"fill\"\n              width=\"14\"\n              height=\"10\"\n              viewBox=\"0 0 14 10\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M13.6947 0.292787C13.8822 0.480314 13.9875 0.734622 13.9875 0.999786C13.9875 1.26495 13.8822 1.51926 13.6947 1.70679L5.69471 9.70679C5.50718 9.89426 5.25288 9.99957 4.98771 9.99957C4.72255 9.99957 4.46824 9.89426 4.28071 9.70679L0.280712 5.70679C0.0985537 5.51818 -0.00224062 5.26558 3.78026e-05 5.00339C0.00231622 4.74119 0.107485 4.49038 0.292893 4.30497C0.478301 4.11956 0.729114 4.01439 0.99131 4.01211C1.25351 4.00983 1.50611 4.11063 1.69471 4.29279L4.98771 7.58579L12.2807 0.292787C12.4682 0.105316 12.7225 0 12.9877 0C13.2529 0 13.5072 0.105316 13.6947 0.292787Z\"\n                fill=\"#3DD598\"\n              />\n            </svg>\n          </span>\n        )}\n        {(setIsShowPass || setIsShowConfirmPass || setIsShowOldPass) && (\n          <button\n            type=\"button\"\n            className=\"show-pass\"\n            onClick={\n              setIsShowPass\n                ? () => setIsShowPass(!isShowPass)\n                : setIsShowConfirmPass\n                ? () => setIsShowConfirmPass(!isShowConfirmPass)\n                : () => setIsShowOldPass(!isShowOldPass)\n            }\n          >\n            <svg\n              className=\"text-type fill\"\n              width=\"15\"\n              height=\"11\"\n              viewBox=\"0 0 15 11\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M7.5001 4.018C7.1449 4.018 6.80425 4.1591 6.55309 4.41026C6.30192 4.66143 6.16082 5.00208 6.16082 5.35728C6.16082 5.71248 6.30192 6.05314 6.55309 6.3043C6.80425 6.55547 7.1449 6.69657 7.5001 6.69657C7.85531 6.69657 8.19596 6.55547 8.44712 6.3043C8.69829 6.05314 8.83939 5.71248 8.83939 5.35728C8.83939 5.00208 8.69829 4.66143 8.44712 4.41026C8.19596 4.1591 7.85531 4.018 7.5001 4.018ZM5.60607 3.46325C6.1084 2.96092 6.7897 2.67871 7.5001 2.67871C8.21051 2.67871 8.89181 2.96092 9.39414 3.46325C9.89647 3.96558 10.1787 4.64688 10.1787 5.35728C10.1787 6.06768 9.89647 6.74899 9.39414 7.25132C8.89181 7.75365 8.21051 8.03585 7.5001 8.03585C6.7897 8.03585 6.1084 7.75365 5.60607 7.25132C5.10374 6.74899 4.82153 6.06768 4.82153 5.35728C4.82153 4.64688 5.10374 3.96558 5.60607 3.46325Z\"\n                fill=\"#969696\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0 5.35714V5.55777C0.999008 8.54564 3.97125 10.7143 7.48362 10.7143C10.9967 10.7143 13.9683 8.5456 14.9672 5.55777C15.0109 5.42716 15.0109 5.28712 14.9672 5.15652C13.9683 2.16868 10.9967 0 7.48362 0C3.97125 0 0.999008 2.16864 0 5.15652V5.35714ZM1.43174 5.35714C2.31265 7.69849 4.69099 9.375 7.48362 9.375C10.2769 9.375 12.6546 7.69852 13.5355 5.35714C12.6546 3.01576 10.2769 1.33929 7.48362 1.33929C4.69099 1.33929 2.31265 3.0158 1.43174 5.35714Z\"\n                fill=\"#969696\"\n              />\n            </svg>\n            <svg\n              className=\"password-type fill\"\n              width=\"15\"\n              height=\"14\"\n              viewBox=\"0 0 15 14\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0.594631 0.205025C0.87244 -0.0683417 1.32286 -0.0683417 1.60066 0.205025L3.76394 2.33372C4.90758 1.72086 6.1921 1.39834 7.50048 1.4C11.0054 1.40021 13.9699 3.66715 14.9673 6.79013C15.011 6.92703 15.0109 7.07384 14.967 7.21068C14.5043 8.65341 13.623 9.92422 12.4407 10.8718L14.4054 12.805C14.6832 13.0784 14.6832 13.5216 14.4054 13.795C14.1276 14.0683 13.6771 14.0683 13.3993 13.795L10.8469 11.2834C10.8467 11.2831 10.8465 11.2829 10.8462 11.2827L8.52525 8.99881C8.51868 8.99281 8.5122 8.98666 8.50581 8.98037L5.48745 6.01027C5.48106 6.00399 5.47482 5.99761 5.46872 5.99114L0.594631 1.19497C0.316823 0.921608 0.316823 0.478392 0.594631 0.205025ZM8.50581 8.98037C8.50569 8.98026 8.50592 8.98049 8.50581 8.98037V8.98037ZM9.95124 8.4221C10.2071 7.99491 10.3453 7.50464 10.3453 7.00035C10.3453 6.2577 10.0455 5.54546 9.51184 5.02033C8.97817 4.49519 8.25436 4.20017 7.49964 4.20017C6.98716 4.20017 6.48892 4.33621 6.0548 4.58795L4.82319 3.37604C5.6589 2.99679 6.57164 2.79876 7.49904 2.8L7.5 2.8C10.2867 2.8 12.659 4.55222 13.5386 6.99961C13.128 8.139 12.3945 9.13639 11.4283 9.87551L9.95124 8.4221ZM8.87421 7.36229C8.90605 7.24523 8.92257 7.12363 8.92257 7.00035C8.92257 6.629 8.77266 6.27286 8.50581 6.01027C8.23896 5.74769 7.87703 5.60017 7.49964 5.60017C7.37436 5.60017 7.25078 5.61643 7.13182 5.64776L8.87421 7.36229ZM1.77445 4.18135C1.97961 4.16747 2.18082 4.24162 2.32624 4.3847L9.33681 11.2825C9.52329 11.466 9.59132 11.7359 9.51359 11.9838C9.43585 12.2318 9.22511 12.4171 8.966 12.4653C8.48251 12.5553 7.99151 12.6004 7.49946 12.6C7.49928 12.6 7.49964 12.6 7.49946 12.6C3.99453 12.5998 1.03013 10.3328 0.0327249 7.20987C-0.0109153 7.07323 -0.0109081 6.9267 0.0327453 6.79007C0.30143 5.94907 0.715275 5.15989 1.25614 4.4571C1.38029 4.29578 1.5693 4.19523 1.77445 4.18135ZM1.93563 5.98017L7.23543 11.1947C4.56378 11.0878 2.31281 9.36977 1.46122 7.00001C1.58826 6.64645 1.74709 6.30517 1.93563 5.98017Z\"\n                fill=\"#969696\"\n              />\n            </svg>\n          </button>\n        )}\n\n        {isSendBtn && (\n          <button className=\"field-btn\" type=\"button\" onClick={sendBtnCallback}>\n            {L.translate('Base.FormControls.item1')}\n          </button>\n        )}\n\n        {isShowMaxButton && (\n          <button\n            type=\"button\"\n            className=\"field-btn field-btn--max\"\n            onClick={setMaxCallback}\n          >\n            {L.translate('Base.FormControls.item5')}\n          </button>\n        )}\n\n        {textCurrency && (\n          <span\n            className={`input-currency ${\n              isShowMaxButton ? 'input-currency--before-max-btn' : ''\n            }`}\n          >\n            {textCurrency}\n          </span>\n        )}\n\n        {textCurrency2 && (\n          <span className=\"input-currency input-currency--type2\">\n            {textCurrency2}\n          </span>\n        )}\n      </div>\n      {errors && touched && (\n        <p className=\"error-text\">\n          <span className=\"error-text__icon\">\n            <svg\n              className=\"fill\"\n              width=\"20\"\n              height=\"16\"\n              viewBox=\"0 0 20 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M10 5.74986V8.5M10 11.4999H10.009M3.79425 15H16.2057C17.5852 15 18.4469 13.5414 17.7572 12.375L11.5514 1.87479C10.8617 0.708402 9.13829 0.708402 8.44856 1.87479L2.24282 12.375C1.55309 13.5414 2.4148 15 3.79425 15Z\"\n                stroke=\"#FD5353\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </span>\n          <span>{errors && touched && errors}</span>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport const Input = props => {\n  return (\n    <FormControl {...props}>\n      <input\n        {...props.field}\n        type={props.type}\n        className={props.className}\n        placeholder={props.placeholder}\n        inputMode={props.inputMode || null}\n        disabled={props.disabled || null}\n        pattern={props.pattern || null}\n        maxLength={props.maxLength || null}\n        ref={props.inputRef || null}\n      />\n    </FormControl>\n  );\n};\n\nexport const InputWithOnChange = props => {\n  return (\n    <FormControl {...props}>\n      <input\n        {...props.field}\n        type={props.type}\n        className={props.className}\n        placeholder={props.placeholder}\n        inputMode={props.inputMode || null}\n        disabled={props.disabled || null}\n        pattern={props.pattern || null}\n        maxLength={props.maxLength || null}\n        ref={props.inputRef || null}\n        onChange={props.onChange || null}\n      />\n    </FormControl>\n  );\n};\n\nexport const TextArea = props => {\n  return (\n    <FormControl {...props}>\n      <textarea\n        {...props.field}\n        className={props.className}\n        placeholder={props.placeholder}\n        rows={props.rows}\n        cols={props.cols}\n        style={props.style}\n      />\n    </FormControl>\n  );\n};\n\nexport const InputError = props => {\n  return <div className=\"input__notification\">{props.children}</div>;\n};\n\nexport const CheckboxError = props => {\n  return <div className=\"checkbox__notification\">{props.children}</div>;\n};\n\nexport const Checkbox = ({ form, field, title, ...props }) => {\n  const errors = form.errors[field.name];\n  const touched = form.touched[field.name];\n\n  return (\n    <div className=\"check-wrap\">\n      <input type=\"checkbox\" className=\"new-check\" id=\"terms\" name=\"agree\" />\n      <label htmlFor=\"terms\">\n        <span className=\"check-icon\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 26 26\"\n            width=\"26\"\n            height=\"26\"\n            fill=\"#fff\"\n          >\n            <path d=\"M 22.566406 4.730469 L 20.773438 3.511719 C 20.277344 3.175781 19.597656 3.304688 19.265625 3.796875 L 10.476563 16.757813 L 6.4375 12.71875 C 6.015625 12.296875 5.328125 12.296875 4.90625 12.71875 L 3.371094 14.253906 C 2.949219 14.675781 2.949219 15.363281 3.371094 15.789063 L 9.582031 22 C 9.929688 22.347656 10.476563 22.613281 10.96875 22.613281 C 11.460938 22.613281 11.957031 22.304688 12.277344 21.839844 L 22.855469 6.234375 C 23.191406 5.742188 23.0625 5.066406 22.566406 4.730469 Z\" />\n          </svg>\n        </span>\n        <span>\n          {L.translate('Base.FormControls.item2')}{' '}\n          <a href=\"https://html.merehead.xyz/new_dafri/sign-up.html#\">\n            {L.translate('Base.FormControls.item3')}\n          </a>\n          .\n        </span>\n      </label>\n    </div>\n  );\n};\n\nexport const InputSwitch = ({\n  labelFor,\n  id,\n  name,\n  checked,\n  onChange,\n  disabled = false,\n}) => {\n  return (\n    <div className=\"onoffswitch \">\n      <label className=\"onoffswitch-label\" htmlFor={labelFor}>\n        <input\n          type=\"checkbox\"\n          className=\"onoffswitch-checkbox  \"\n          id={id}\n          name={name}\n          checked={checked || 0}\n          onChange={onChange}\n          disabled={disabled}\n        />\n        <span className=\"onoffswitch-inner onoffswitch-inner--status-type onoffswitch-inner--type2\" />\n        <span className=\"onoffswitch-switch\" />\n      </label>\n    </div>\n  );\n};\n\nconst DebounceFormControl = ({\n  form,\n  field,\n  textCurrency,\n  isShowMaxButton,\n  setMaxCallback,\n  ...props\n}) => {\n  const errors = form.errors[field.name] || null;\n\n  return (\n    <>\n      <div className={`field-wrap ${errors && 'error'}`}>\n        {props.children}\n\n        {textCurrency && (\n          <span\n            className={`input-currency ${\n              isShowMaxButton ? 'input-currency--before-max-btn' : ''\n            }`}\n          >\n            {textCurrency}\n          </span>\n        )}\n      </div>\n      {errors && (\n        <p className=\"error-text\">\n          <span className=\"error-text__icon\">\n            <svg\n              className=\"fill\"\n              width=\"20\"\n              height=\"16\"\n              viewBox=\"0 0 20 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M10 5.74986V8.5M10 11.4999H10.009M3.79425 15H16.2057C17.5852 15 18.4469 13.5414 17.7572 12.375L11.5514 1.87479C10.8617 0.708402 9.13829 0.708402 8.44856 1.87479L2.24282 12.375C1.55309 13.5414 2.4148 15 3.79425 15Z\"\n                stroke=\"#FD5353\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </span>\n          <span>{errors}</span>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport const DebounceFormikInput = props => {\n  const handleChange = e => {\n    const value = e.target.value.replace(/,/g, '.').toString();\n    props.handleAmountChange(e, value, props.setFieldValue);\n  };\n\n  return (\n    <DebounceFormControl {...props}>\n      <DebounceInput\n        type=\"number\"\n        name=\"amount\"\n        value={props.value.replace(/,/g, '.')}\n        className=\"input input--big input--type2 input--with-currency\"\n        placeholder={L.translate('Pages.Users.Withdraw.Fiat.item4')}\n        debounceTimeout={500}\n        onChange={handleChange}\n        inputRef={props.debounceRef}\n      />\n\n      {props.isShowMaxButton && (\n        <button\n          type=\"button\"\n          className=\"field-btn field-btn--max\"\n          onClick={props.setMaxCallback}\n        >\n          {L.translate('Base.FormControls.item6')}\n        </button>\n      )}\n    </DebounceFormControl>\n  );\n};\n\n// export const File = props => {\n//   return (\n//     <FormControl {...props}>\n//       <label\n//         className={[\n//           'field__file',\n//           props.field.value && props.field.value.name && 'text',\n//         ].join(' ')}\n//       >\n//         <input\n//           ref={props.childref}\n//           type={'file'}\n//           className={'field__input'}\n//           {...props}\n//           onChange={event => {\n//             props.form.setFieldValue(\n//               props.field.name,\n//               event.currentTarget.files[0],\n//             );\n//           }}\n//         />\n\n//         <span\n//           value={\n//             props.field.value && props.field.value.name\n//               ? props.field.value.name\n//               : props.placeholder\n//           }\n//           className={'field__file_browser'}\n//         ></span>\n//       </label>\n//     </FormControl>\n//   );\n// };\n\n// export const Radio = props => {\n//   return (\n//     <FormControl {...props}>\n//       {props.radio_controls.map((c, index) => {\n//         return (\n//           <label className={'field__radio'} key={index}>\n//             <input\n//               checked={props.value == c.id}\n//               {...props.field}\n//               type={'radio'}\n//               name={props.field.name}\n//               value={c.id}\n//             />\n\n//             <p className={'p1'}>{c.name}</p>\n//           </label>\n//         );\n//       })}\n//     </FormControl>\n//   );\n// };\n","export default __webpack_public_path__ + \"static/media/cred-info1.8751ad3e.svg\";","export default __webpack_public_path__ + \"static/media/cred-info2.3b172191.svg\";","export default __webpack_public_path__ + \"static/media/cred-info3.ace0c341.svg\";","import React from 'react';\nimport L from 'i18n-react';\nimport { Link } from 'react-router-dom';\nimport routes from '../../routes';\nimport buy from '../../styles/img/cred-info1.svg';\nimport trade from '../../styles/img/cred-info2.svg';\nimport store from '../../styles/img/cred-info3.svg';\n\nconst Auth = ({ children }) => {\n  return (\n    <section className=\"cred-section cred-section--type2\">\n      <div className=\"cred-section__circle\" />\n      <div className=\"cred-section__wave\" />\n      <div className=\"cred-section__big-circle\" />\n      <div className=\"cred-section__inner\">\n        <div className=\"custom-container\">\n          <div className=\"cred-container\">\n            <div className=\"cred-container__left\">\n              <p className=\"section-title\">{L.translate('HOC.item1')}</p>\n            </div>\n          </div>\n          <div className=\"cred-container\">\n            <div className=\"cred-container__left\">\n              <div className=\"cred-info-block\">\n                <div className=\"cred-info-list\">\n                  <div className=\"cred-info\">\n                    <div className=\"cred-info__icon\">\n                      <img src={buy} alt=\"\" />\n                    </div>\n                    <div className=\"cred-info__main\">\n                      <p className=\"cred-info__main-title\">\n                        {L.translate('HOC.item2')}\n                      </p>\n                      <p className=\"cred-info__main-text\">\n                        {L.translate('HOC.item3')}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"cred-info\">\n                    <div className=\"cred-info__icon\">\n                      <img src={trade} alt=\"\" />\n                    </div>\n                    <div className=\"cred-info__main\">\n                      <p className=\"cred-info__main-title\">\n                        {L.translate('HOC.item4')}\n                      </p>\n                      <p className=\"cred-info__main-text\">\n                        {L.translate('HOC.item5')}\n                      </p>\n                    </div>\n                  </div>\n                  <div className=\"cred-info\">\n                    <div className=\"cred-info__icon\">\n                      <img src={store} alt=\"\" />\n                    </div>\n                    <div className=\"cred-info__main\">\n                      <p className=\"cred-info__main-title\">\n                        {L.translate('HOC.item6')}\n                      </p>\n                      <p className=\"cred-info__main-text\">\n                        {L.translate('HOC.item7')}{' '}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            {children}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Auth;\n"],"sourceRoot":""}