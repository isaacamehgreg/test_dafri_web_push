{"version":3,"sources":["components/Pages/Users/Withdraw/WalletWithdraw/index.jsx","components/Base/EmptyTable/index.jsx","components/Pages/Users/Withdraw/SupportedCurrency/SortButton/index.jsx","components/Pages/Users/Withdraw/SupportedCurrency/SupportedCurrencyItem/index.jsx","components/Pages/Users/Withdraw/SupportedCurrency/index.jsx"],"names":["WalletWithdraw","dispatch","useDispatch","location","useLocation","wallet","useSelector","walletSelector","isLoading","walletsList","totalUSD","useState","activeTab","setActiveTab","handleSetTab","num","isShowZeroBalances","setIsShowZeroBalances","cryptoWallets","setCryptoWallets","fiatWallets","setFiatWallets","toggleZeroBalancesItems","prev","useEffect","state","type","types","GET_PAYMENT_METHODS_START","length","filter","item","asset","total","className","L","translate","onClick","data","labels","onSelectItem","setFieldValue","showZeroBalances","EmptyTable","text","style","textAlign","padding","SortButton","sort","order","toggleSort","thisSort","setThisSort","e","target","dataset","id","width","height","viewBox","fill","xmlns","d","SupportedCurrencyItem","balance","frozen_balance","selected","network","networks","assetID","name","code","publicAdress","public_address","src","img_path","alt","textTransform","SupportedCurrency","title","activeEl","setSort","search","setSearch","setWallets","useMemo","sortingColumnTable","setState","Loader","filterWallets","currency","toLowerCase","includes","map","title1","title2","title3","title4","placeholder","value","onChange"],"mappings":"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","file":"static/js/WalletWithdrawPage.3a961c00.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport SupportedCurrency from '../SupportedCurrency';\nimport { walletSelector } from '../../../../../redux/wallets/selectors';\nimport types from '../../../../../redux/types';\n\nconst WalletWithdraw = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const wallet = useSelector(walletSelector);\n\n  const { isLoading, walletsList, totalUSD } = wallet;\n\n  const [activeTab, setActiveTab] = useState(0);\n  const handleSetTab = num => setActiveTab(num);\n\n  const [isShowZeroBalances, setIsShowZeroBalances] = useState(true);\n  const [cryptoWallets, setCryptoWallets] = useState([]);\n  const [fiatWallets, setFiatWallets] = useState([]);\n\n  const toggleZeroBalancesItems = () => {\n    setIsShowZeroBalances(prev => !prev);\n  };\n\n  useEffect(() => {\n    if (location?.state && location?.state?.type !== 'fiat') {\n      setActiveTab(1);\n    }\n  }, [location?.state]);\n\n  useEffect(() => {\n    dispatch({ type: types.GET_PAYMENT_METHODS_START });\n  }, []);\n\n  useEffect(() => {\n    if (walletsList && walletsList.length && isShowZeroBalances) {\n      setFiatWallets(walletsList.filter(item => item.asset.type === 'fiat'));\n      setCryptoWallets(walletsList.filter(item => item.asset.type !== 'fiat'));\n    } else {\n      setFiatWallets(\n        walletsList.filter(\n          item => item.asset.type === 'fiat' && item.total > 0,\n        ),\n      );\n\n      setCryptoWallets(\n        walletsList.filter(\n          item => item.asset.type !== 'fiat' && item.total > 0,\n        ),\n      );\n    }\n  }, [wallet, isShowZeroBalances]);\n\n  return (\n    <section className=\"transfer-section\">\n      <div className=\"custom-container\">\n        <p className=\"section-title section-title--center\">\n          {L.translate('Pages.Users.Withdraw.WalletWithdraw.item1')}\n        </p>\n\n        <div className=\"transfer-box\">\n          <div className=\"transfer-box__content\">\n            <div className=\"transfer-top\">\n              <div className=\"my-balance\">\n                <p className=\"item-title item-title--bigger my-balance__title\">\n                  {L.translate('Pages.Users.Withdraw.item2')}\n                </p>\n\n                <p className=\"my-balance__value\">${totalUSD}</p>\n              </div>\n            </div>\n\n            <div className=\"switcher\">\n              <button\n                className={`switcher__item ${!activeTab ? 'active' : ''}`}\n                onClick={() => handleSetTab(0)}\n              >\n                {L.translate('Pages.Users.Withdraw.item3')}\n              </button>\n\n              <button\n                className={`switcher__item ${activeTab ? 'active' : ''}`}\n                onClick={() => handleSetTab(1)}\n              >\n                {L.translate('Pages.Users.Withdraw.item4')}\n              </button>\n            </div>\n\n            {!activeTab ? (\n              <SupportedCurrency\n                isLoading={isLoading}\n                data={fiatWallets}\n                labels={['Fiat', 'Total', 'Available', 'Locked']}\n                onSelectItem={() => {}}\n                setFieldValue={() => {}}\n                isShowZeroBalances={isShowZeroBalances}\n                setIsShowZeroBalances={toggleZeroBalancesItems}\n                showZeroBalances\n              />\n            ) : (\n              <SupportedCurrency\n                isLoading={isLoading}\n                data={cryptoWallets}\n                labels={['Coin', 'Total', 'Available', 'Locked']}\n                onSelectItem={() => {}}\n                setFieldValue={() => {}}\n                isShowZeroBalances={isShowZeroBalances}\n                setIsShowZeroBalances={toggleZeroBalancesItems}\n                showZeroBalances\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default WalletWithdraw;\n","import React from 'react';\n\nconst EmptyTable = ({ text }) => {\n  return <p style={{ textAlign: 'center', padding: '15px 0' }}>{text}</p>;\n};\n\nexport default EmptyTable;\n","import React, { useState } from 'react';\n\nconst SortButton = ({ sort, order, toggleSort }) => {\n  const [thisSort, setThisSort] = useState(sort?.sort || 'asc');\n\n  const thisToggleSort = e => {\n    if (e?.target?.dataset?.id !== 'search') {\n      setThisSort(thisSort === 'asc' ? 'desc' : 'asc');\n      toggleSort({ sort: thisSort === 'asc' ? 'desc' : 'asc', order });\n    }\n  };\n\n  return (\n    <div\n      className=\"td-sort\"\n      onClick={thisToggleSort}\n      data-order={order}\n      data-sort={thisSort}\n    >\n      <button type=\"button\">\n        <svg\n          className=\"fill\"\n          width=\"10\"\n          height=\"7\"\n          viewBox=\"0 0 10 7\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M5 0.857422L0 6.21456H10L5 0.857422Z\" fill=\"#969696\" />\n        </svg>\n      </button>\n\n      <button type=\"button\">\n        <svg\n          className=\"fill\"\n          width=\"10\"\n          height=\"7\"\n          viewBox=\"0 0 10 7\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M5 6.14307L10 0.785924L2.37568e-06 0.785924L5 6.14307Z\"\n            fill=\"#969696\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default SortButton;\n","import React from 'react';\n\nconst SupportedCurrencyItem = ({\n  id,\n  asset,\n  balance,\n  frozen_balance,\n  total,\n  selected,\n  onSelectItem,\n  setFieldValue,\n  network,\n  networks,\n}) => {\n  const onSelect = () => {\n    onSelectItem({\n      id,\n      assetID: asset.id,\n      type: asset.type,\n      name: asset.name,\n      code: asset.code,\n      network,\n      networks,\n      balance,\n      publicAdress: asset?.public_address,\n    });\n\n    if (asset.type !== 'fiat') {\n      setFieldValue('address', '');\n    }\n  };\n\n  return (\n    <div className={`tr ${selected ? 'selected' : ''}`} onClick={onSelect}>\n      <div className=\"td\">\n        <div className=\"coin-card\">\n          <div className=\"coin-card__img\">\n            <img src={asset?.img_path} alt=\"\" />\n          </div>\n\n          <div className=\"coin-card__info\">\n            <p\n              className=\"coin-card__info-name\"\n              style={{ textTransform: 'uppercase' }}\n            >\n              {asset?.code}\n            </p>\n            <p className=\"coin-card__info-text\">{asset?.name}</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"td\">\n        <p className=\"table-value\">{total}</p>\n      </div>\n\n      <div className=\"td\">\n        <p className=\"table-value\">{balance}</p>\n      </div>\n\n      <div className=\"td\">\n        <p className=\"table-value\">{frozen_balance}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SupportedCurrencyItem;\n","import React, { useMemo, useState } from 'react';\nimport L from 'i18n-react';\nimport SupportedCurrencyItem from './SupportedCurrencyItem';\nimport SortButton from './SortButton';\nimport Loader from '../../../../Base/Loader';\nimport { sortingColumnTable } from '../../../../../services/helpers';\nimport EmptyTable from '../../../../Base/EmptyTable';\n\nconst SupportedCurrency = ({\n  isLoading,\n  title,\n  labels,\n  data,\n  activeEl,\n  onSelectItem,\n  setFieldValue,\n  showZeroBalances = false,\n  isShowZeroBalances,\n  setIsShowZeroBalances,\n}) => {\n  const [sort, setSort] = useState({ sort: 'desc', order: 'name' });\n  const [search, setSearch] = useState('');\n  const [wallets, setWallets] = useState([]);\n\n  useMemo(\n    () => sortingColumnTable({ sort, data, setState: setWallets }),\n    [sort, data],\n  );\n\n  // Check data\n  if (isLoading) return <Loader />;\n  if (!data || !data.length)\n    return <p>{L.translate('Pages.Users.Withdraw.SupportedCurrency.item1')}</p>;\n\n  const toggleSort = e => {\n    const { order, sort } = e;\n    setSort({ order, sort });\n  };\n\n  const filterWallets = data\n    .filter(currency => {\n      if (search !== '') {\n        return (\n          currency?.asset?.name\n            ?.toLowerCase()\n            .includes(search?.toLowerCase()) ||\n          currency?.asset?.code?.toLowerCase().includes(search?.toLowerCase())\n        );\n      }\n      return true;\n    })\n    .map(currency => (\n      <SupportedCurrencyItem\n        key={currency.asset.id}\n        onSelectItem={onSelectItem}\n        setFieldValue={setFieldValue}\n        selected={activeEl === currency.asset.id}\n        {...currency}\n      />\n    ));\n\n  const handleSearchValue = e => {\n    setSearch(e.target.value.toLowerCase());\n  };\n\n  const [title1, title2, title3, title4] = labels;\n\n  return (\n    <>\n      <div className=\"transfer-panel\">\n        <p className=\"item-title item-title--bigger\">{title}</p>\n\n        <div className=\"transfer-search\">\n          <div className=\"field-wrap\">\n            <input\n              type=\"text\"\n              className=\"input input--icon-right\"\n              placeholder={L.translate(\n                'Pages.Users.Withdraw.SupportedCurrency.item2',\n              )}\n              value={search}\n              onChange={handleSearchValue}\n            />\n\n            <span className=\"field-icon\">\n              <svg\n                className=\"fill\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 20 20\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M8.04938 16.0928C9.83702 16.0928 11.5735 15.4963 12.9838 14.3977L18.3045 19.7191C18.7019 20.103 19.3353 20.092 19.7192 19.6945C20.0936 19.3067 20.0936 18.6919 19.7192 18.3042L14.3985 12.9828C17.1243 9.47344 16.4895 4.41858 12.9807 1.69241C9.47196 -1.03376 4.41791 -0.398932 1.69215 3.11039C-1.03361 6.61971 -0.398872 11.6746 3.10992 14.4007C4.52252 15.4983 6.26058 16.0937 8.04938 16.0928ZM3.77429 3.77179C6.13538 1.4103 9.96347 1.41025 12.3246 3.7717C14.6857 6.13315 14.6858 9.96181 12.3247 12.3233C9.9636 14.6848 6.13551 14.6848 3.77438 12.3234C3.77434 12.3234 3.77434 12.3234 3.77429 12.3233C1.4132 9.97906 1.39929 6.16436 3.74318 3.80291C3.75354 3.79251 3.76389 3.78215 3.77429 3.77179Z\"\n                  fill=\"#969696\"\n                />\n              </svg>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {showZeroBalances && (\n        <div className=\"transfer-panel transfer-panel--small-mt transfer-panel--end\">\n          <button\n            className=\"button button--link-type\"\n            onClick={setIsShowZeroBalances}\n          >\n            {isShowZeroBalances\n              ? L.translate('Pages.Users.Withdraw.SupportedCurrency.item4')\n              : L.translate(\n                  'Pages.Users.Withdraw.SupportedCurrency.item5',\n                )}{' '}\n            {L.translate('Pages.Users.Withdraw.SupportedCurrency.item6')}\n          </button>\n        </div>\n      )}\n\n      <div className=\"coins-table-box\">\n        <div className=\"coin-table\">\n          <div className=\"table-header\">\n            <div className=\"tr\">\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">{title1}</div>\n\n                <SortButton toggleSort={toggleSort} sort={sort} order=\"name\" />\n              </div>\n\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">\n                  {title2}\n\n                  <SortButton toggleSort={toggleSort} sort={sort} order=\"id\" />\n                </div>\n              </div>\n\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">\n                  {title3}\n\n                  <SortButton\n                    toggleSort={toggleSort}\n                    sort={sort}\n                    order=\"balance\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">\n                  {title4}\n\n                  <SortButton\n                    toggleSort={toggleSort}\n                    sort={sort}\n                    order=\"frozen_balance\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"table-body\">\n            {filterWallets.length ? (\n              filterWallets\n            ) : (\n              <EmptyTable\n                text={L.translate(\n                  'Pages.Users.Withdraw.SupportedCurrency.item3',\n                )}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SupportedCurrency;\n"],"sourceRoot":""}