{"version":3,"sources":["components/Pages/Statics/Charts/PieChart/index.jsx","components/Pages/Users/BalanceDetails/Graphic/index.jsx","components/Base/Checkbox/Checkbox.jsx","components/Pages/Users/BalanceDetails/Switcher/index.jsx","components/Base/Modals/Users/BalanceDetails/GoogleModalEnabled/index.jsx","components/Base/Modals/Users/BalanceDetails/GoogleModalDisabled/index.jsx","components/Base/Modals/Users/BalanceDetails/SMSModalEnable/index.jsx","components/Base/Modals/Users/BalanceDetails/SMSModalDisable/index.jsx","components/Base/Modals/Users/BalanceDetails/AntiPhishingModalEnabled/index.jsx","components/Base/Modals/Users/BalanceDetails/AntiPhishingModalChange/index.jsx","components/Pages/Users/BalanceDetails/Switchers/index.jsx","styles/img/delete.svg","components/Pages/Users/BalanceDetails/Devices/DeviceRow/index.jsx","components/Pages/Users/BalanceDetails/Devices/index.jsx","components/Pages/Users/BalanceDetails/LoginRecord/TableRow/index.jsx","components/Pages/Users/BalanceDetails/LoginRecord/index.jsx","components/Pages/Users/BalanceDetails/index.jsx","components/Base/FormControls/index.jsx","services/validators.js","components/Base/EmptyTable/index.jsx","styles/img/closeIcon.svg","redux/users/settings/selectors.js"],"names":["CircleChart","data","colors","settings","width","heigth","cx","cy","innerRadius","outerRadius","fill","paddingAngle","dataKey","cornerRadius","startAngle","endAngle","PieChart","height","map","entry","index","id","offset","stopColor","length","start","end","uuidv4","Pie","isAnimationActive","Cell","radius","Graphic","wallets","useSelector","walletSelector","availableInBTC","frozenInBTC","name","value","Number","className","L","translate","to","routes","Profile","Verification","path","convertValueToDecimal","style","background","Checkbox","checked","onChange","type","Switcher","isCheked","title","text","withdrawalLinkStyle","display","paddingTop","visibility","WithdrawalWhiteListAddresses","htmlFor","GoogleModalEnabled","dispatch","useDispatch","googleData","settingsSelector","google2fa","useEffect","types","GENERATE_GOOGLE_SECRET_START","onClick","closeModal","src","closeIcon","alt","viewBox","xmlns","patternContentUnits","xlinkHref","transform","QR_Image","secret","href","target","rel","d","fillRule","clipRule","onSubmit","values","resetForm","ENABLE_GOOGLE_2FA_START","payload","totp","initialValues","alignItems","placeholder","validate","validate2FA","component","Input","GoogleModalDisabled","DISABLE_GOOGLE_2FA_START","SMSModalEnable","google2fa_enabled","email","hideEmail","getEmailCode","GET_EMAIL_CODE_START","operation","amount","wallet_id","ENABLE_2FA_PHONE_START","phone","sms_code","email_code","setFieldValue","validateField","errors","pattern","phoneRegex","validatePhone","isSendBtn","sendBtnCallback","then","res","errorText","notification","timeOut","message","GET_SMS_CODE_START","getSMSCode","SMSModalDisable","initValue","DISABLE_2FA_PHONE_START","AntiPhishingModalEnabled","phrase","SET_ANTIPHISHING_PHRASE_START","maxLength","validateAntiPhishing","AntiPhishingModalChange","settingsData","anti_fishing_phrase","oldValue","newValue","CHANGE_ANTIPHISHING_PHRASE_START","disabled","validateNewPhrase","Switchers","switchData","totalUSD","smsData","sms_enabled","antiPhishingData","withdrawalData","withdrawal_white_list_enabled","useState","google","setGoogle","sms","setSMS","antiPhishing","setAntiPhishing","withdrawal","setWithdrawal","isError","openModal","openGoogleModal","openSMSModal","openAntiFishingModal","TOGGLE_WITHDRAW_WHITELIST_ADDRESSES_START","is_active","DeviceRow","device","location","time","ip","onDelete","date","Date","formattedTime","moment","format","deleteIcon","Devices","deviceState","devices","handleDelete","DELETE_DEVICES_LIST_START","GET_DEVICES_LIST_START","item","last_login","country","created_at","EmptyTable","LoginTableRow","dates","split","day","LoginRecord","loginData","loginRecords","GET_LOGIN_RECORDS_START","BalanceDetails","FormControl","form","field","isCheckMark","isShowPass","isShowOldPass","setIsShowOldPass","setIsShowPass","isShowConfirmPass","setIsShowConfirmPass","isShowMaxButton","setMaxCallback","textCurrency","textCurrency2","props","touched","children","stroke","strokeWidth","strokeLinecap","strokeLinejoin","inputMode","ref","inputRef","InputWithOnChange","TextArea","rows","cols","InputSwitch","labelFor","DebounceFormControl","DebounceFormikInput","replace","debounceTimeout","e","toString","handleAmountChange","debounceRef","validateCardNumber","num","setErorr","setCardInfo","numberValidation","valid","number","trim","isPotentiallyValid","isValid","error","card","validateCardMonth","val","setError","yearInfo","curYear","getFullYear","slice","curMonth","getMonth","validateCardYear","validateCardCVV","setCVVError","customFieldLevelValidation","validations","result","validation","required","textError","undefined","minLength","String","match","password","validateConfirmPassword","pass","antiphishingRegular","validateViaRegex","regex","test","validateSingleAntiphishingPhrase","search","validateImage","file","validatePercentRate","min","max","isInteger","validatePositiveNumber","requiredValue","validateEmail","validatePassword","validateImageFile","requiredPositiveNumber","textAlign","padding","state","userSelector","user"],"mappings":"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","file":"static/js/BalanceDetailsPages.132d3f9e.chunk.js","sourcesContent":["import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { PieChart, Pie, Cell } from 'recharts';\n\nconst CircleChart = ({ data, colors, settings }) => {\n  const {\n    width,\n    heigth,\n    cx,\n    cy,\n    innerRadius,\n    outerRadius,\n    fill,\n    paddingAngle,\n    dataKey,\n    cornerRadius,\n    startAngle,\n    endAngle,\n  } = settings;\n\n  return (\n    <PieChart width={width} height={heigth}>\n      <defs>\n        {data.map((entry, index) => (\n          <linearGradient id={`linearGradient${index}`} key={uuidv4()}>\n            <stop offset=\"0%\" stopColor={colors[index % colors.length].start} />\n            <stop offset=\"100%\" stopColor={colors[index % colors.length].end} />\n          </linearGradient>\n        ))}\n      </defs>\n\n      <Pie\n        data={data}\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        fill={fill}\n        paddingAngle={paddingAngle}\n        dataKey={dataKey}\n        cornerRadius={cornerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        isAnimationActive\n      >\n        {data.map((entry, index) => (\n          <Cell\n            key={uuidv4()}\n            fill={`url(#linearGradient${index})`}\n            radius={[25, 25, 25, 25]}\n          />\n        ))}\n      </Pie>\n    </PieChart>\n  );\n};\n\nexport default CircleChart;\n","import React, { useEffect } from 'react';\nimport L from 'i18n-react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { walletSelector } from '../../../../../redux/wallets/selectors';\nimport CircleeChart from '../../../Statics/Charts/PieChart';\nimport routes from '../../../../../routes';\nimport { convertValueToDecimal } from '../../../../../services/helpers';\n\nconst Graphic = () => {\n  const wallets = useSelector(walletSelector);\n  const { availableInBTC, frozenInBTC } = wallets;\n\n  const data = [\n    {\n      name: 'Balance Details 1',\n      value: Number(frozenInBTC),\n    },\n\n    {\n      name: 'Balance Details 2',\n      value: Number(availableInBTC),\n    },\n  ];\n\n  const chartColors = [\n    { start: '#66DC91', end: '#53B9AB' },\n    { start: '#DADADA', end: '#DADADA' },\n  ];\n\n  const settings = {\n    width: 250,\n    heigth: 250,\n    cx: 120,\n    cy: 120,\n    innerRadius: 95,\n    outerRadius: 120,\n    fill: '#0088FE',\n    paddingAngle: 2,\n    dataKey: 'value',\n    cornerRadius: 50,\n    startAngle: 240,\n    endAngle: -120,\n  };\n\n  return (\n    <div className=\"dashboard-col dashboard-col--balance\">\n      <div className=\"profile-block\">\n        <div className=\"block-header\">\n          <p className=\"block-title\">\n            {L.translate('Pages.Users.BalanceDetails.Graphic.item1')}\n          </p>\n\n          <Link\n            to={routes.Profile.Verification.path}\n            className=\"block-header__link\"\n          >\n            {L.translate('Pages.Users.BalanceDetails.Graphic.item2')}\n          </Link>\n        </div>\n\n        <div className=\"profile-block__content\">\n          <div className=\"balance-list\">\n            <div className=\"balance-item\">\n              <p className=\"balance-item__name\">\n                {L.translate('Pages.Users.BalanceDetails.Graphic.item3')}\n              </p>\n\n              <p className=\"balance-item__value\">\n                {convertValueToDecimal(\n                  Number(availableInBTC) + Number(frozenInBTC),\n                  8,\n                )}{' '}\n                BTC\n              </p>\n            </div>\n          </div>\n\n          <div className=\"balance-chart-wrap\">\n            <div className=\"balance-chart\">\n              <div className=\"balance-chart__item\">\n                <CircleeChart\n                  data={data}\n                  colors={chartColors}\n                  settings={settings}\n                />\n\n                <p className=\"chart-value\">\n                  {convertValueToDecimal(\n                    Number(availableInBTC) + Number(frozenInBTC),\n                  )}\n\n                  <span>BTC</span>\n                </p>\n              </div>\n\n              <div className=\"balance-chart__legend\">\n                <div className=\"chart-legend chart-legend--type1\">\n                  <div\n                    className=\"chart-legend__color\"\n                    style={{\n                      background:\n                        'linear-gradient(121.96deg, #66DC91 4.89%, #53B9AB 100.17%)',\n                    }}\n                  />\n\n                  <div className=\"chart-legend__info\">\n                    <p className=\"chart-legend__info-name\">In order:</p>\n\n                    <p className=\"chart-legend__info-value\">\n                      {convertValueToDecimal(frozenInBTC, 8)} BTC\n                    </p>\n                  </div>\n                </div>\n\n                <div className=\"chart-legend chart-legend--type2\">\n                  <div\n                    className=\"chart-legend__color\"\n                    style={{ background: '#DADADA' }}\n                  />\n\n                  <div className=\"chart-legend__info\">\n                    <p className=\"chart-legend__info-name\">\n                      {L.translate('Pages.Users.BalanceDetails.Graphic.item4')}\n                    </p>\n\n                    <p className=\"chart-legend__info-value\">\n                      {convertValueToDecimal(availableInBTC, 8)} BTC\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Graphic;\n","import React from 'react';\n\nconst Checkbox = ({ checked, name, onChange, className }) => {\n  return (\n    <input\n      type=\"checkbox\"\n      id={name}\n      className={className}\n      name={name}\n      checked={checked}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport L from 'i18n-react';\nimport { Link } from 'react-router-dom';\nimport routes from '../../../../../routes';\nimport Checkbox from '../../../../Base/Checkbox/Checkbox';\n\nconst Switcher = ({ data, isCheked, onChange }) => {\n  const { title, text, name } = data;\n\n  const withdrawalLinkStyle = {\n    display: 'block',\n    paddingTop: '15px',\n    visibility: isCheked ? 'visible' : 'hidden',\n  };\n\n  return (\n    <div className=\"switchable-option\">\n      <div className=\"switchable-option__main\">\n        <p className=\"switchable-option__title\">{title}</p>\n        <div className=\"switchable-option__text\">\n          <p>\n            {text}{' '}\n            {name === 'withdrawal' && (\n              <Link\n                to={routes.Profile.WithdrawalWhiteListAddresses.path}\n                className=\"block-header__link\"\n                style={withdrawalLinkStyle}\n              >\n                {L.translate('Pages.Users.BalanceDetails.Switcher.item1')}\n              </Link>\n            )}\n          </p>\n        </div>\n      </div>\n      <div className=\"switchable-option__action\">\n        <div className=\"onoffswitch \">\n          <label className=\"onoffswitch-label\" htmlFor={name}>\n            <Checkbox\n              className=\"onoffswitch-checkbox\"\n              name={name}\n              checked={isCheked}\n              onChange={onChange}\n            />\n            <span className=\"onoffswitch-inner onoffswitch-inner--status-type\" />\n            <span className=\"onoffswitch-switch\" />\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Switcher;\n","import React, { useEffect } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { closeModal } from '../../../../Modal';\nimport { Input } from '../../../../FormControls';\nimport { validate2FA } from '../../../../../../services/validators';\nimport { settingsSelector } from '../../../../../../redux/users/settings/selectors';\nimport types from '../../../../../../redux/types';\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\n\nconst GoogleModalEnabled = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector(settingsSelector);\n  const googleData = settings.google2fa;\n\n  const initialValue = {\n    totp: '',\n  };\n\n  const submitHandler = (values, { resetForm }) => {\n    dispatch({\n      type: types.ENABLE_GOOGLE_2FA_START,\n      payload: values.totp,\n    });\n\n    resetForm();\n    closeModal();\n  };\n\n  useEffect(() => {\n    dispatch({ type: types.GENERATE_GOOGLE_SECRET_START });\n  }, [dispatch]);\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"Close\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <p className=\"modal-title\">\n          {L.translate(\n            'Base.Modals.Users.BalanceDetails.GoogleModalEnabled.item1',\n          )}\n        </p>\n      </div>\n\n      <div className=\"modal-body\">\n        <div className=\"modal-text\">\n          <p>\n            {L.translate(\n              'Base.Modals.Users.BalanceDetails.GoogleModalEnabled.item2',\n            )}\n          </p>\n        </div>\n\n        <div className=\"tfa-qr\">\n          <div className=\"tfa-qr__item\">\n            <svg\n              width=\"113\"\n              height=\"112\"\n              viewBox=\"0 0 113 112\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <rect width=\"113\" height=\"112\" fill=\"url(#pattern0)\" />\n              <defs>\n                <pattern\n                  id=\"pattern0\"\n                  patternContentUnits=\"objectBoundingBox\"\n                  width=\"1\"\n                  height=\"1\"\n                >\n                  <use\n                    xlinkHref=\"#image0\"\n                    transform=\"translate(-0.000185223) scale(0.00461)\"\n                  />\n                </pattern>\n                <image\n                  id=\"image0\"\n                  width=\"217\"\n                  height=\"215\"\n                  xlinkHref={googleData?.QR_Image}\n                />\n              </defs>\n            </svg>\n          </div>\n\n          <p className=\"tfa-qr__code\">{googleData?.secret}</p>\n        </div>\n\n        <div className=\"tfa-info\">\n          <p className=\"tfa-info__text\">\n            {L.translate(\n              'Base.Modals.Users.BalanceDetails.GoogleModalEnabled.item3',\n            )}\n          </p>\n          <div className=\"system-link\">\n            <a\n              href=\"https://apps.apple.com/app/google-authenticator/id388497605\"\n              className=\"system-link__item\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                className=\"store-icon \"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"58\"\n                height=\"70\"\n                viewBox=\"0 0 58 70\"\n                fill=\"none\"\n              >\n                <path\n                  d=\"M47.7304 37.02C47.6513 28.2255 54.9314 23.9469 55.2643 23.7477C51.1413 17.7365 44.7507 16.9151 42.505 16.8496C37.1377 16.2848 31.9314 20.0613 29.1972 20.0613C26.4085 20.0613 22.1982 16.9042 17.6604 16.997C11.821 17.087 6.35819 20.4679 3.3621 25.7178C-2.82108 36.4224 1.79038 52.1533 7.71434 60.8059C10.6777 65.0435 14.1404 69.7751 18.6727 69.6086C23.1068 69.4258 24.7631 66.7817 30.1141 66.7817C35.4159 66.7817 36.9712 69.6086 41.5936 69.5022C46.3524 69.4258 49.3485 65.2455 52.2082 60.9696C55.6327 56.1126 57.0079 51.3292 57.0625 51.0836C56.9506 51.0454 47.8205 47.5609 47.7304 37.02Z\"\n                  fill=\"black\"\n                />\n                <path\n                  d=\"M38.9986 11.1576C41.3834 8.17512 43.0152 4.11757 42.5622 0C39.1105 0.152806 34.7937 2.38759 32.3079 5.30455C30.1085 7.87496 28.1439 12.088 28.6514 16.0501C32.5289 16.3393 36.51 14.0936 38.9986 11.1576Z\"\n                  fill=\"black\"\n                />\n              </svg>\n            </a>\n            <a\n              href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2\"\n              className=\"system-link__item\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <svg\n                className=\"store-icon \"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"65\"\n                height=\"74\"\n                viewBox=\"0 0 65 74\"\n                fill=\"none\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M12.7519 0.0658724C12.9917 -0.0711326 13.2971 0.0121658 13.4341 0.251925L17.9301 8.11994C21.0673 4.92668 25.615 2.49999 32 2.49999C39.1637 2.49999 43.8976 4.92976 47.0249 8.0058L52.0808 0.2275C52.2313 -0.00402995 52.541 -0.0697222 52.7725 0.0807722C53.004 0.231267 53.0697 0.540958 52.9192 0.772488L47.7364 8.74607C51.6624 13.0655 52.7208 18.3251 53 20H12C12.4234 17.0362 13.9654 12.5665 17.2163 8.88632L12.5659 0.748063C12.4289 0.508305 12.5122 0.202877 12.7519 0.0658724ZM12 51.5V22H53V51.5C53 52.5 52.7 54.8 51.5 56C50.3 57.2 48.3333 57.5 47.5 57.5H47V69.5C47 71.9853 44.9853 74 42.5 74C40.0147 74 38 71.9853 38 69.5V57.5H32.5H27V69.5C27 71.9853 24.9853 74 22.5 74C20.0147 74 18 71.9853 18 69.5V57.5C17 57.5 14.7 57.2 13.5 56C12.3 54.8 12 52.5 12 51.5ZM4.5 25C2.01472 25 0 27.0147 0 29.5V48.5C0 50.9853 2.01472 53 4.5 53C6.98528 53 9 50.9853 9 48.5V29.5C9 27.0147 6.98528 25 4.5 25ZM56 29.5C56 27.0147 58.0147 25 60.5 25C62.9853 25 65 27.0147 65 29.5V48.5C65 50.9853 62.9853 53 60.5 53C58.0147 53 56 50.9853 56 48.5V29.5ZM26 12C26 13.1046 25.1046 14 24 14C22.8954 14 22 13.1046 22 12C22 10.8954 22.8954 9.99999 24 9.99999C25.1046 9.99999 26 10.8954 26 12ZM42 14C43.1046 14 44 13.1046 44 12C44 10.8954 43.1046 9.99999 42 9.99999C40.8954 9.99999 40 10.8954 40 12C40 13.1046 40.8954 14 42 14Z\"\n                  fill=\"black\"\n                />\n              </svg>\n            </a>\n          </div>\n        </div>\n\n        <div className=\"tfa-field\">\n          <p className=\"field-label\">\n            {L.translate(\n              'Base.Modals.Users.BalanceDetails.GoogleModalEnabled.item4',\n            )}\n          </p>\n\n          <Formik onSubmit={submitHandler} initialValues={initialValue}>\n            <Form className=\"field-form\" style={{ alignItems: 'flex-start' }}>\n              <div className=\"field-form__input\">\n                <div className=\"field-wrap\">\n                  <Field\n                    type=\"text\"\n                    name=\"totp\"\n                    className=\"input\"\n                    placeholder={L.translate(\n                      'Base.Modals.Users.BalanceDetails.GoogleModalEnabled.item5',\n                    )}\n                    validate={validate2FA}\n                    component={Input}\n                  />\n                </div>\n              </div>\n\n              <div className=\"field-form__btn\">\n                <button className=\"button button--full\" type=\"submit\">\n                  {L.translate(\n                    'Base.Modals.Users.BalanceDetails.GoogleModalEnabled.item6',\n                  )}\n                </button>\n              </div>\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GoogleModalEnabled;\n","import React from 'react';\nimport L from 'i18n-react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { Input } from '../../../../FormControls';\nimport { validate2FA } from '../../../../../../services/validators';\nimport { closeModal } from '../../../../Modal';\nimport types from '../../../../../../redux/types';\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\n\nconst GoogleModalDisabled = () => {\n  const dispatch = useDispatch();\n\n  const initialValue = {\n    totp: '',\n  };\n\n  const submitHandler = (values, { resetForm }) => {\n    dispatch({\n      type: types.DISABLE_GOOGLE_2FA_START,\n      payload: values.totp,\n    });\n\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"Close\" />\n      </button>\n      <div className=\"modal-header\">\n        <p className=\"modal-title\">\n          {L.translate(\n            'Base.Modals.Users.BalanceDetails.GoogleModalDisabled.item1',\n          )}\n        </p>\n      </div>\n      <div className=\"modal-body\">\n        <div className=\"modal-text\">\n          <p>\n            {L.translate(\n              'Base.Modals.Users.BalanceDetails.GoogleModalDisabled.item2',\n            )}\n          </p>\n        </div>\n\n        <div className=\"tfa-info tfa-info--type2\">\n          <p className=\"tfa-info__text\">\n            {L.translate(\n              'Base.Modals.Users.BalanceDetails.GoogleModalDisabled.item3',\n            )}\n          </p>\n        </div>\n        <Formik onSubmit={submitHandler} initialValues={initialValue}>\n          <Form className=\"tfa-field tfa-field--type2\">\n            <p className=\"field-label\">\n              {L.translate(\n                'Base.Modals.Users.BalanceDetails.GoogleModalDisabled.item4',\n              )}\n            </p>\n            <div className=\"field-form\">\n              <div className=\"field-form__input\">\n                <div className=\"field-wrap\">\n                  <Field\n                    type=\"text\"\n                    name=\"totp\"\n                    className=\"input\"\n                    placeholder={L.translate(\n                      'Base.Modals.Users.BalanceDetails.GoogleModalDisabled.item5',\n                    )}\n                    validate={validate2FA}\n                    component={Input}\n                  />\n                </div>\n              </div>\n              <div className=\"field-form__btn\">\n                <button className=\"button button--full\" type=\"submit\">\n                  {L.translate(\n                    'Base.Modals.Users.BalanceDetails.GoogleModalDisabled.item6',\n                  )}\n                </button>\n              </div>\n            </div>\n          </Form>\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default GoogleModalDisabled;\n","import React from 'react';\nimport L from 'i18n-react';\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from '../../../../Modal';\nimport { Input } from '../../../../FormControls';\nimport {\n  phoneRegex,\n  validate2FA,\n  validatePhone,\n} from '../../../../../../services/validators';\nimport { settingsSelector } from '../../../../../../redux/users/settings/selectors';\nimport { hideEmail } from '../../../../../../services/helpers';\nimport types from '../../../../../../redux/types';\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\nimport notification from '../../../../../../services/notification';\n\nconst SMSModalEnable = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector(settingsSelector);\n  const google2fa = settings?.google2fa_enabled;\n  const email = hideEmail(settings?.email);\n\n  const initValue = {\n    phone: '',\n    sms_code: '',\n    email_code: '',\n    totp: '',\n  };\n\n  const getSMSCode = (errorText, phone) => {\n    if (!errorText) {\n      const payload = {\n        type: 'sms',\n        operation: '',\n        amount: '',\n        wallet_id: '',\n        phone: `+${phone}`,\n      };\n\n      dispatch({ type: types.GET_SMS_CODE_START, payload });\n    } else {\n      notification({\n        type: 'error',\n        timeOut: 5000,\n        message: 'Please, enter correct phone',\n      });\n    }\n  };\n\n  const getEmailCode = () =>\n    dispatch({\n      type: types.GET_EMAIL_CODE_START,\n      payload: {\n        operation: '',\n        amount: '',\n        wallet_id: '',\n        type: 'email',\n      },\n    });\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch({\n      type: types.ENABLE_2FA_PHONE_START,\n      payload: { ...values, phone: `+${values.phone}` },\n    });\n\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"Close\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <p className=\"modal-title\">\n          {L.translate('Base.Modals.Users.BalanceDetails.SMSModalEnable.item1')}\n        </p>\n      </div>\n\n      <Formik onSubmit={handleSubmit} initialValues={initValue}>\n        {({ setFieldValue, values, errors, validateField, ...formik }) => (\n          <Form className=\"modal-body\">\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalEnable.item2',\n                )}\n              </p>\n              <div className=\"field-wrap\">\n                <Field\n                  type=\"number\"\n                  name=\"phone\"\n                  className=\"input\"\n                  placeholder=\"+\"\n                  component={Input}\n                  pattern={phoneRegex}\n                  validate={validatePhone}\n                />\n              </div>\n            </div>\n\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalEnable.item3',\n                )}\n              </p>\n\n              <Field\n                type=\"text\"\n                name=\"sms_code\"\n                className=\"input input--with-btn\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalEnable.item4',\n                )}\n                isSendBtn=\"true\"\n                sendBtnCallback={() =>\n                  validateField('phone').then(res =>\n                    getSMSCode(res, values.phone),\n                  )\n                }\n                component={Input}\n                validate={validate2FA}\n              />\n\n              <p className=\"field-hint field-hint--type2\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalEnable.item5',\n                )}\n              </p>\n            </div>\n\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalEnable.item6',\n                )}\n              </p>\n\n              <Field\n                type=\"text\"\n                name=\"email_code\"\n                className=\"input input--with-btn\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalEnable.item7',\n                )}\n                component={Input}\n                isSendBtn=\"true\"\n                sendBtnCallback={getEmailCode}\n                validate={validate2FA}\n              />\n\n              <p className=\"field-hint \">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalEnable.item8',\n                )}\n                {email}.\n              </p>\n            </div>\n\n            {!!google2fa && (\n              <div className=\"modal-field\">\n                <p className=\"field-label\">\n                  {L.translate(\n                    'Base.Modals.Users.BalanceDetails.SMSModalEnable.item9',\n                  )}\n                </p>\n\n                <Field\n                  type=\"text\"\n                  name=\"totp\"\n                  className=\"input\"\n                  placeholder={L.translate(\n                    'Base.Modals.Users.BalanceDetails.SMSModalEnable.item10',\n                  )}\n                  component={Input}\n                  validate={validate2FA}\n                />\n\n                <p className=\"field-hint\">\n                  {L.translate(\n                    'Base.Modals.Users.BalanceDetails.SMSModalEnable.item11',\n                  )}\n                </p>\n              </div>\n            )}\n\n            <div className=\"form-submit \">\n              <button className=\"button button--wider\" type=\"submit\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalEnable.item12',\n                )}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SMSModalEnable;\n","import React from 'react';\nimport L from 'i18n-react';\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from '../../../../Modal';\nimport { Input } from '../../../../FormControls';\nimport { validate2FA } from '../../../../../../services/validators';\nimport { settingsSelector } from '../../../../../../redux/users/settings/selectors';\nimport { hideEmail } from '../../../../../../services/helpers';\nimport notification from '../../../../../../services/notification';\nimport types from '../../../../../../redux/types';\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\n\nconst SMSModalDisable = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector(settingsSelector);\n  const google2fa = settings?.google2fa_enabled;\n  const email = hideEmail(settings?.email);\n  const phone = settings?.data?.phone;\n\n  const initValue = {\n    sms_code: '',\n    email_code: '',\n    totp: '',\n    phone,\n  };\n\n  const getSMSCode = () => {\n    const payload = {\n      phone,\n      type: 'sms',\n      operation: '',\n    };\n\n    dispatch({ type: types.GET_SMS_CODE_START, payload });\n  };\n\n  const getEmailCode = () =>\n    dispatch({\n      type: types.GET_EMAIL_CODE_START,\n      payload: {\n        operation: '',\n        amount: '',\n        wallet_id: '',\n        type: 'email',\n      },\n    });\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch({ type: types.DISABLE_2FA_PHONE_START, payload: { ...values } });\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"Close\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <p className=\"modal-title\">\n          {L.translate(\n            'Base.Modals.Users.BalanceDetails.SMSModalDisable.item1',\n          )}\n        </p>\n      </div>\n\n      <Formik onSubmit={handleSubmit} initialValues={initValue}>\n        {({ setFieldValue, values, ...formik }) => (\n          <Form className=\"modal-body\">\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalDisable.item2',\n                )}\n              </p>\n\n              <Field\n                type=\"text\"\n                name=\"sms_code\"\n                className=\"input input--with-btn\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalDisable.item3',\n                )}\n                component={Input}\n                isSendBtn=\"true\"\n                sendBtnCallback={getSMSCode}\n                validate={validate2FA}\n              />\n\n              <p className=\"field-hint field-hint--type2\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalDisable.item4',\n                )}\n              </p>\n            </div>\n\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalDisable.item5',\n                )}\n              </p>\n\n              <Field\n                type=\"text\"\n                name=\"email_code\"\n                className=\"input input--with-btn\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalDisable.item6',\n                )}\n                component={Input}\n                isSendBtn=\"true\"\n                sendBtnCallback={getEmailCode}\n                validate={validate2FA}\n              />\n\n              <p className=\"field-hint \">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalDisable.item7',\n                )}\n                {email}.\n              </p>\n            </div>\n\n            {!!google2fa && (\n              <div className=\"modal-field\">\n                <p className=\"field-label\">\n                  {L.translate(\n                    'Base.Modals.Users.BalanceDetails.SMSModalDisable.item8',\n                  )}\n                </p>\n\n                <Field\n                  type=\"text\"\n                  name=\"totp\"\n                  className=\"input\"\n                  placeholder={L.translate(\n                    'Base.Modals.Users.BalanceDetails.SMSModalDisable.item9',\n                  )}\n                  component={Input}\n                  validate={validate2FA}\n                />\n\n                <p className=\"field-hint \">\n                  {L.translate(\n                    'Base.Modals.Users.BalanceDetails.SMSModalDisable.item10',\n                  )}\n                </p>\n              </div>\n            )}\n\n            <div className=\"form-submit \">\n              <button className=\"button button--wider\" type=\"submit\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.SMSModalDisable.item11',\n                )}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SMSModalDisable;\n","import React from 'react';\nimport L from 'i18n-react';\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Input } from '../../../../FormControls';\nimport { closeModal } from '../../../../Modal';\nimport { validateAntiPhishing } from '../../../../../../services/validators';\nimport types from '../../../../../../redux/types';\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\n\nconst AntiPhishingModalEnabled = () => {\n  const dispatch = useDispatch();\n\n  const initialFormValue = {\n    phrase: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch({\n      type: types.SET_ANTIPHISHING_PHRASE_START,\n      payload: values.phrase,\n    });\n\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"Close\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <p className=\"modal-title\">\n          {L.translate(\n            'Base.Modals.Users.BalanceDetails.AntiPhishingModalEnabled.item1',\n          )}\n        </p>\n      </div>\n\n      <Formik initialValues={initialFormValue} onSubmit={handleSubmit}>\n        {({ setFieldValue, ...formik }) => (\n          <Form className=\"modal-body\">\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.AntiPhishingModalEnabled.item2',\n                )}\n              </p>\n\n              <div className=\"field-wrap\">\n                <Field\n                  type=\"text\"\n                  className=\"input\"\n                  name=\"phrase\"\n                  placeholder={L.translate(\n                    'Base.Modals.Users.BalanceDetails.AntiPhishingModalEnabled.item3',\n                  )}\n                  maxLength={100}\n                  component={Input}\n                  validate={value => validateAntiPhishing(value)}\n                />\n              </div>\n            </div>\n\n            <div className=\"form-submit\">\n              <button className=\"button button--wider\" type=\"submit\">\n                {L.translate(\n                  'Base.Modals.Users.BalanceDetails.AntiPhishingModalEnabled.item4',\n                )}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default AntiPhishingModalEnabled;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { closeModal } from '../../../../Modal';\nimport { Input } from '../../../../FormControls';\nimport { validateNewPhrase } from '../../../../../../services/validators';\nimport { settingsSelector } from '../../../../../../redux/users/settings/selectors';\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\nimport types from '../../../../../../redux/types';\n\nconst AntiPhishingModalChange = () => {\n  const dispatch = useDispatch();\n  const settingsData = useSelector(settingsSelector);\n  let phrase = settingsData.data?.anti_fishing_phrase;\n\n  if (!settingsData.data?.anti_fishing_phrase) phrase = '';\n\n  const initialValues = {\n    oldValue: phrase,\n    newValue: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch({\n      type: types.CHANGE_ANTIPHISHING_PHRASE_START,\n      payload: values.newValue,\n    });\n\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"Close\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <p className=\"modal-title\">\n          {L.translate(\n            'Base.Modals.Users.BalanceDetails.AntiPhishingModalChange.item1',\n          )}\n        </p>\n      </div>\n\n      <Formik initialValues={{ ...initialValues }} onSubmit={handleSubmit}>\n        {({ setFieldValue, resetForm, ...formik }) => {\n          const { oldValue } = formik.values;\n\n          return (\n            <Form className=\"modal-body\">\n              <div className=\"modal-field\">\n                <p className=\"field-label\">\n                  {L.translate(\n                    'Base.Modals.Users.BalanceDetails.AntiPhishingModalChange.item2',\n                  )}\n                </p>\n\n                <Field\n                  type=\"text\"\n                  name=\"oldValue\"\n                  className=\"input\"\n                  placeholder={L.translate(\n                    'Base.Modals.Users.BalanceDetails.AntiPhishingModalChange.item3',\n                  )}\n                  disabled=\"disabled\"\n                  component={Input}\n                />\n              </div>\n              <div className=\"modal-field\">\n                <p className=\"field-label\">\n                  {L.translate(\n                    'Base.Modals.Users.BalanceDetails.AntiPhishingModalChange.item4',\n                  )}\n                </p>\n\n                <Field\n                  type=\"text\"\n                  className=\"input\"\n                  name=\"newValue\"\n                  placeholder={L.translate(\n                    'Base.Modals.Users.BalanceDetails.AntiPhishingModalChange.item5',\n                  )}\n                  component={Input}\n                  validate={value => validateNewPhrase(value, oldValue)}\n                />\n              </div>\n              <div className=\"form-submit \">\n                <button className=\"button button--wider\" type=\"submit\">\n                  {L.translate(\n                    'Base.Modals.Users.BalanceDetails.AntiPhishingModalChange.item6',\n                  )}\n                </button>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default AntiPhishingModalChange;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Switcher from '../Switcher';\nimport { openModal } from '../../../../Base/Modal';\nimport GoogleModalEnabled from '../../../../Base/Modals/Users/BalanceDetails/GoogleModalEnabled';\nimport GoogleModalDisabled from '../../../../Base/Modals/Users/BalanceDetails/GoogleModalDisabled';\nimport SMSModalEnable from '../../../../Base/Modals/Users/BalanceDetails/SMSModalEnable';\nimport SMSModalDisable from '../../../../Base/Modals/Users/BalanceDetails/SMSModalDisable';\nimport AntiPhishingModalEnabled from '../../../../Base/Modals/Users/BalanceDetails/AntiPhishingModalEnabled';\nimport AntiPhishingModalChange from '../../../../Base/Modals/Users/BalanceDetails/AntiPhishingModalChange';\nimport {\n  settingsSelector,\n  userSelector,\n} from '../../../../../redux/users/settings/selectors';\nimport types from '../../../../../redux/types';\nimport { walletSelector } from '../../../../../redux/wallets/selectors';\nimport notification from '../../../../../services/notification';\n\nconst Switchers = () => {\n  const dispatch = useDispatch();\n\n  const switchData = [\n    {\n      title: L.translate('Pages.Users.BalanceDetails.Switchers.item1'),\n      text: L.translate('Pages.Users.BalanceDetails.Switchers.item2'),\n      name: L.translate('Pages.Users.BalanceDetails.Switchers.item3'),\n    },\n\n    {\n      title: L.translate('Pages.Users.BalanceDetails.Switchers.item4'),\n      text: L.translate('Pages.Users.BalanceDetails.Switchers.item5'),\n      name: L.translate('Pages.Users.BalanceDetails.Switchers.item6'),\n    },\n\n    {\n      title: L.translate('Pages.Users.BalanceDetails.Switchers.item7'),\n      text: L.translate('Pages.Users.BalanceDetails.Switchers.item8'),\n      name: L.translate('Pages.Users.BalanceDetails.Switchers.item9'),\n    },\n\n    {\n      title: L.translate('Pages.Users.BalanceDetails.Switchers.item10'),\n      text: L.translate('Pages.Users.BalanceDetails.Switchers.item11'),\n      name: L.translate('Pages.Users.BalanceDetails.Switchers.item12'),\n    },\n  ];\n\n  const settingsData = useSelector(settingsSelector);\n  const { totalUSD } = useSelector(walletSelector);\n\n  const googleData = !!settingsData.google2fa_enabled;\n  const smsData = !!settingsData.sms_enabled;\n  const antiPhishingData = !!settingsData.data?.anti_fishing_phrase;\n  const withdrawalData = !!settingsData.data?.withdrawal_white_list_enabled;\n\n  const [google, setGoogle] = useState(googleData);\n  const [sms, setSMS] = useState(smsData);\n  const [antiPhishing, setAntiPhishing] = useState(antiPhishingData);\n  const [withdrawal, setWithdrawal] = useState(withdrawalData);\n\n  const openGoogleModal = checked => {\n    if (checked) {\n      if (!googleData.isError) {\n        openModal(() => <GoogleModalEnabled />);\n      }\n    } else {\n      openModal(() => <GoogleModalDisabled />);\n    }\n  };\n\n  const openSMSModal = checked => {\n    if (checked) {\n      openModal(() => <SMSModalEnable />);\n    } else {\n      openModal(() => <SMSModalDisable />);\n    }\n  };\n\n  const openAntiFishingModal = checked => {\n    if (checked) {\n      openModal(() => <AntiPhishingModalEnabled />);\n    } else {\n      openModal(() => <AntiPhishingModalChange />);\n    }\n  };\n\n  const handleGoogleChange = ({ target: { checked } }) => {\n    openGoogleModal(checked);\n  };\n\n  const handleSMSChange = ({ target: { checked } }) => {\n    if (totalUSD > 50000) {\n      openSMSModal(checked);\n    } else {\n      notification({\n        type: 'info',\n        timeOut: 6000,\n        message:\n          'This function can be enabled when the total balance is $50,000',\n      });\n    }\n  };\n\n  const handleAntiFishingChange = ({ target: { checked } }) => {\n    openAntiFishingModal(checked);\n  };\n\n  useEffect(() => {\n    setGoogle(googleData);\n    setSMS(smsData);\n    setAntiPhishing(antiPhishingData);\n    setWithdrawal(withdrawalData);\n  }, [googleData, smsData, antiPhishingData, withdrawalData]);\n\n  const handleSwitchWithdrawal = () => {\n    setWithdrawal(!withdrawal);\n\n    dispatch({\n      type: types.TOGGLE_WITHDRAW_WHITELIST_ADDRESSES_START,\n      payload: {\n        is_active: !withdrawal,\n      },\n    });\n  };\n\n  return (\n    <div className=\"dashboard-col dashboard-col--setting\">\n      <div className=\"profile-block\">\n        <div className=\"block-header\">\n          <p className=\"block-title\">\n            {L.translate('Pages.Users.BalanceDetails.Switchers.item13')}\n          </p>\n        </div>\n\n        <div className=\"profile-block__content\">\n          <div className=\"profile-settings-list\">\n            <Switcher\n              key={uuidv4()}\n              data={switchData[0]}\n              isCheked={google}\n              onChange={handleGoogleChange}\n            />\n\n            <Switcher\n              key={uuidv4()}\n              data={switchData[1]}\n              isCheked={sms}\n              onChange={handleSMSChange}\n            />\n\n            <Switcher\n              key={uuidv4()}\n              data={switchData[2]}\n              isCheked={antiPhishing}\n              onChange={handleAntiFishingChange}\n            />\n\n            <Switcher\n              key={uuidv4()}\n              data={switchData[3]}\n              isCheked={withdrawal}\n              onChange={handleSwitchWithdrawal}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Switchers;\n","export default __webpack_public_path__ + \"static/media/delete.dcbb48e0.svg\";","import React from 'react';\nimport L from 'i18n-react';\nimport moment from 'moment';\nimport deleteIcon from '../../../../../../styles/img/delete.svg';\n\nconst DeviceRow = ({ id, device, location, time, ip, onDelete }) => {\n  const date = new Date(time * 1000);\n  const formattedTime = moment(date).format('YYYY/MM/DD/HH:mm:ss');\n\n  return (\n    <div className=\"tr\">\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.BalanceDetails.Devices.DeviceRow.item1')}\n        </div>\n        <p className=\"table-value\">{device}</p>\n      </div>\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.BalanceDetails.Devices.DeviceRow.item2')}\n        </div>\n        <p className=\"table-value\">{location || 'N/A'}</p>\n      </div>\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.BalanceDetails.Devices.DeviceRow.item3')}\n        </div>\n        <p>{formattedTime}</p>\n      </div>\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.BalanceDetails.Devices.DeviceRow.item4')}\n        </div>\n        <p>{ip || 'N/A'}</p>\n      </div>\n\n      <div className=\"td td--center\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.BalanceDetails.Devices.DeviceRow.item5')}\n        </div>\n        <div className=\"table-action\">\n          <button\n            className=\"action-btn\"\n            type=\"button\"\n            onClick={() => onDelete(id)}\n          >\n            <img src={deleteIcon} alt=\"\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DeviceRow;\n","import React, { useEffect } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { settingsSelector } from '../../../../../redux/users/settings/selectors';\nimport types from '../../../../../redux/types';\nimport DeviceRow from './DeviceRow';\nimport EmptyTable from '../../../../Base/EmptyTable';\n\nconst Devices = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector(settingsSelector);\n  const deviceState = settings?.devices;\n\n  const handleDelete = id =>\n    dispatch({ type: types.DELETE_DEVICES_LIST_START, payload: id });\n\n  useEffect(() => {\n    dispatch({ type: types.GET_DEVICES_LIST_START });\n  }, [dispatch]);\n\n  return (\n    <div className=\"dashboard-col dashboard-col--devices\">\n      <div className=\"profile-block\">\n        <div className=\"block-header\">\n          <p className=\"block-title\">\n            {L.translate('Pages.Users.BalanceDetails.Devices.item1')}\n          </p>\n          <div className=\"block-header__warning\">\n            <p className=\"highlight-label\">\n              {L.translate('Pages.Users.BalanceDetails.Devices.item2')}\n            </p>\n          </div>\n        </div>\n        <div className=\"profile-block__content\">\n          <div className=\"table-box\">\n            <div className=\"table table--devices\">\n              <div className=\"table-header\">\n                <div className=\"tr\">\n                  <div className=\"td\">\n                    <div className=\"td-name\">\n                      {L.translate('Pages.Users.BalanceDetails.Devices.item3')}\n                    </div>\n                  </div>\n                  <div className=\"td\">\n                    <div className=\"td-name\">\n                      {L.translate('Pages.Users.BalanceDetails.Devices.item4')}\n                    </div>\n                  </div>\n                  <div className=\"td\">\n                    <div className=\"td-name\">\n                      {L.translate('Pages.Users.BalanceDetails.Devices.item5')}\n                    </div>\n                  </div>\n                  <div className=\"td\">\n                    <div className=\"td-name\">\n                      {L.translate('Pages.Users.BalanceDetails.Devices.item6')}\n                    </div>\n                  </div>\n                  <div className=\"td td--center\">\n                    <div className=\"td-name\">\n                      {L.translate('Pages.Users.BalanceDetails.Devices.item7')}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"table-body\">\n                {deviceState && deviceState.length ? (\n                  deviceState.map(item => (\n                    <DeviceRow\n                      key={uuidv4()}\n                      id={item.id}\n                      device={item.last_login?.device}\n                      location={item.last_login?.country}\n                      time={item.last_login?.created_at}\n                      ip={item.last_login?.ip}\n                      onDelete={handleDelete}\n                    />\n                  ))\n                ) : (\n                  <EmptyTable\n                    text={L.translate(\n                      'Pages.Users.BalanceDetails.Devices.item8',\n                    )}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Devices;\n","import React from 'react';\nimport L from 'i18n-react';\nimport moment from 'moment';\n\nconst LoginTableRow = ({ date, ip, location }) => {\n  const dates = new Date(date * 1000);\n  const [day, time] = moment(dates).format('YYYY/MM/DD HH:mm:ss').split(' ');\n\n  return (\n    <div className=\"tr\">\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.BalanceDetails.LoginRecord.TableRow.item1')}\n        </div>\n        <p className=\"table-value\">\n          {day} <br /> {time}\n        </p>\n      </div>\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.BalanceDetails.LoginRecord.TableRow.item2')}\n        </div>\n        <p>{ip}</p>\n      </div>\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.BalanceDetails.LoginRecord.TableRow.item3')}\n        </div>\n        <p className=\"table-value\">{location}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginTableRow;\n","import React, { useEffect } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { settingsSelector } from '../../../../../redux/users/settings/selectors';\nimport types from '../../../../../redux/types';\nimport LoginTableRow from './TableRow';\nimport EmptyTable from '../../../../Base/EmptyTable';\n\nconst LoginRecord = () => {\n  const dispatch = useDispatch();\n  const settings = useSelector(settingsSelector);\n  const loginData = settings.loginRecords?.data;\n\n  useEffect(() => {\n    dispatch({ type: types.GET_LOGIN_RECORDS_START });\n  }, [dispatch]);\n\n  return (\n    <div className=\"dashboard-col dashboard-col--login-record\">\n      <div className=\"profile-block\">\n        <div className=\"block-header\">\n          <p className=\"block-title\">\n            {L.translate('Pages.Users.BalanceDetails.LoginRecord.item1')}\n          </p>\n        </div>\n\n        <div className=\"profile-block__content\">\n          <div className=\"table-box\">\n            <div className=\"table table--login-record\">\n              <div className=\"table-header\">\n                <div className=\"tr\">\n                  <div className=\"td\">\n                    <div className=\"td-name\">\n                      {L.translate(\n                        'Pages.Users.BalanceDetails.LoginRecord.item2',\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"td\">\n                    <div className=\"td-name\">\n                      {L.translate(\n                        'Pages.Users.BalanceDetails.LoginRecord.item3',\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"td\">\n                    <div className=\"td-name\">\n                      {L.translate(\n                        'Pages.Users.BalanceDetails.LoginRecord.item4',\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"table-body\">\n                {loginData && loginData.length ? (\n                  loginData.map(item => (\n                    <LoginTableRow\n                      key={uuidv4()}\n                      date={item.created_at}\n                      ip={item.ip}\n                      location={item.country}\n                    />\n                  ))\n                ) : (\n                  <EmptyTable\n                    text={L.translate(\n                      'Pages.Users.BalanceDetails.LoginRecord.item5',\n                    )}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginRecord;\n","import React from 'react';\nimport L from 'i18n-react';\nimport Graphic from './Graphic';\nimport Switchers from './Switchers';\nimport Devices from './Devices';\nimport LoginRecord from './LoginRecord';\n\nconst BalanceDetails = () => {\n  return (\n    <section className=\"profile-section\">\n      <div className=\"custom-container\">\n        <h1 className=\"section-title\">\n          {L.translate('Pages.Users.BalanceDetails.item1')}\n        </h1>\n        <div className=\"dashboard-wrap\">\n          <div className=\"row\">\n            <Graphic />\n            <Switchers />\n          </div>\n\n          <div className=\"row\">\n            <Devices />\n            <LoginRecord />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default BalanceDetails;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react';\nimport L from 'i18n-react';\nimport { DebounceInput } from 'react-debounce-input';\n\nconst FormControl = ({\n  form,\n  field,\n  isCheckMark,\n  isShowPass,\n  isShowOldPass,\n  setIsShowOldPass,\n  setIsShowPass,\n  isShowConfirmPass,\n  setIsShowConfirmPass,\n  isSendBtn,\n  isShowMaxButton,\n  setMaxCallback,\n  sendBtnCallback,\n  textCurrency,\n  textCurrency2,\n  title,\n  ...props\n}) => {\n  const errors = form.errors[field.name] || null;\n  const touched = form.touched[field.name] || null;\n\n  return (\n    <>\n      <div className={`field-wrap ${errors && touched ? 'error' : ''}`}>\n        {props.children}\n        {isCheckMark && !errors && (\n          <span className=\"field-icon field-icon--check\">\n            <svg\n              className=\"fill\"\n              width=\"14\"\n              height=\"10\"\n              viewBox=\"0 0 14 10\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M13.6947 0.292787C13.8822 0.480314 13.9875 0.734622 13.9875 0.999786C13.9875 1.26495 13.8822 1.51926 13.6947 1.70679L5.69471 9.70679C5.50718 9.89426 5.25288 9.99957 4.98771 9.99957C4.72255 9.99957 4.46824 9.89426 4.28071 9.70679L0.280712 5.70679C0.0985537 5.51818 -0.00224062 5.26558 3.78026e-05 5.00339C0.00231622 4.74119 0.107485 4.49038 0.292893 4.30497C0.478301 4.11956 0.729114 4.01439 0.99131 4.01211C1.25351 4.00983 1.50611 4.11063 1.69471 4.29279L4.98771 7.58579L12.2807 0.292787C12.4682 0.105316 12.7225 0 12.9877 0C13.2529 0 13.5072 0.105316 13.6947 0.292787Z\"\n                fill=\"#3DD598\"\n              />\n            </svg>\n          </span>\n        )}\n        {(setIsShowPass || setIsShowConfirmPass || setIsShowOldPass) && (\n          <button\n            type=\"button\"\n            className=\"show-pass\"\n            onClick={\n              setIsShowPass\n                ? () => setIsShowPass(!isShowPass)\n                : setIsShowConfirmPass\n                ? () => setIsShowConfirmPass(!isShowConfirmPass)\n                : () => setIsShowOldPass(!isShowOldPass)\n            }\n          >\n            <svg\n              className=\"text-type fill\"\n              width=\"15\"\n              height=\"11\"\n              viewBox=\"0 0 15 11\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M7.5001 4.018C7.1449 4.018 6.80425 4.1591 6.55309 4.41026C6.30192 4.66143 6.16082 5.00208 6.16082 5.35728C6.16082 5.71248 6.30192 6.05314 6.55309 6.3043C6.80425 6.55547 7.1449 6.69657 7.5001 6.69657C7.85531 6.69657 8.19596 6.55547 8.44712 6.3043C8.69829 6.05314 8.83939 5.71248 8.83939 5.35728C8.83939 5.00208 8.69829 4.66143 8.44712 4.41026C8.19596 4.1591 7.85531 4.018 7.5001 4.018ZM5.60607 3.46325C6.1084 2.96092 6.7897 2.67871 7.5001 2.67871C8.21051 2.67871 8.89181 2.96092 9.39414 3.46325C9.89647 3.96558 10.1787 4.64688 10.1787 5.35728C10.1787 6.06768 9.89647 6.74899 9.39414 7.25132C8.89181 7.75365 8.21051 8.03585 7.5001 8.03585C6.7897 8.03585 6.1084 7.75365 5.60607 7.25132C5.10374 6.74899 4.82153 6.06768 4.82153 5.35728C4.82153 4.64688 5.10374 3.96558 5.60607 3.46325Z\"\n                fill=\"#969696\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0 5.35714V5.55777C0.999008 8.54564 3.97125 10.7143 7.48362 10.7143C10.9967 10.7143 13.9683 8.5456 14.9672 5.55777C15.0109 5.42716 15.0109 5.28712 14.9672 5.15652C13.9683 2.16868 10.9967 0 7.48362 0C3.97125 0 0.999008 2.16864 0 5.15652V5.35714ZM1.43174 5.35714C2.31265 7.69849 4.69099 9.375 7.48362 9.375C10.2769 9.375 12.6546 7.69852 13.5355 5.35714C12.6546 3.01576 10.2769 1.33929 7.48362 1.33929C4.69099 1.33929 2.31265 3.0158 1.43174 5.35714Z\"\n                fill=\"#969696\"\n              />\n            </svg>\n            <svg\n              className=\"password-type fill\"\n              width=\"15\"\n              height=\"14\"\n              viewBox=\"0 0 15 14\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0.594631 0.205025C0.87244 -0.0683417 1.32286 -0.0683417 1.60066 0.205025L3.76394 2.33372C4.90758 1.72086 6.1921 1.39834 7.50048 1.4C11.0054 1.40021 13.9699 3.66715 14.9673 6.79013C15.011 6.92703 15.0109 7.07384 14.967 7.21068C14.5043 8.65341 13.623 9.92422 12.4407 10.8718L14.4054 12.805C14.6832 13.0784 14.6832 13.5216 14.4054 13.795C14.1276 14.0683 13.6771 14.0683 13.3993 13.795L10.8469 11.2834C10.8467 11.2831 10.8465 11.2829 10.8462 11.2827L8.52525 8.99881C8.51868 8.99281 8.5122 8.98666 8.50581 8.98037L5.48745 6.01027C5.48106 6.00399 5.47482 5.99761 5.46872 5.99114L0.594631 1.19497C0.316823 0.921608 0.316823 0.478392 0.594631 0.205025ZM8.50581 8.98037C8.50569 8.98026 8.50592 8.98049 8.50581 8.98037V8.98037ZM9.95124 8.4221C10.2071 7.99491 10.3453 7.50464 10.3453 7.00035C10.3453 6.2577 10.0455 5.54546 9.51184 5.02033C8.97817 4.49519 8.25436 4.20017 7.49964 4.20017C6.98716 4.20017 6.48892 4.33621 6.0548 4.58795L4.82319 3.37604C5.6589 2.99679 6.57164 2.79876 7.49904 2.8L7.5 2.8C10.2867 2.8 12.659 4.55222 13.5386 6.99961C13.128 8.139 12.3945 9.13639 11.4283 9.87551L9.95124 8.4221ZM8.87421 7.36229C8.90605 7.24523 8.92257 7.12363 8.92257 7.00035C8.92257 6.629 8.77266 6.27286 8.50581 6.01027C8.23896 5.74769 7.87703 5.60017 7.49964 5.60017C7.37436 5.60017 7.25078 5.61643 7.13182 5.64776L8.87421 7.36229ZM1.77445 4.18135C1.97961 4.16747 2.18082 4.24162 2.32624 4.3847L9.33681 11.2825C9.52329 11.466 9.59132 11.7359 9.51359 11.9838C9.43585 12.2318 9.22511 12.4171 8.966 12.4653C8.48251 12.5553 7.99151 12.6004 7.49946 12.6C7.49928 12.6 7.49964 12.6 7.49946 12.6C3.99453 12.5998 1.03013 10.3328 0.0327249 7.20987C-0.0109153 7.07323 -0.0109081 6.9267 0.0327453 6.79007C0.30143 5.94907 0.715275 5.15989 1.25614 4.4571C1.38029 4.29578 1.5693 4.19523 1.77445 4.18135ZM1.93563 5.98017L7.23543 11.1947C4.56378 11.0878 2.31281 9.36977 1.46122 7.00001C1.58826 6.64645 1.74709 6.30517 1.93563 5.98017Z\"\n                fill=\"#969696\"\n              />\n            </svg>\n          </button>\n        )}\n\n        {isSendBtn && (\n          <button className=\"field-btn\" type=\"button\" onClick={sendBtnCallback}>\n            {L.translate('Base.FormControls.item1')}\n          </button>\n        )}\n\n        {isShowMaxButton && (\n          <button\n            type=\"button\"\n            className=\"field-btn field-btn--max\"\n            onClick={setMaxCallback}\n          >\n            {L.translate('Base.FormControls.item5')}\n          </button>\n        )}\n\n        {textCurrency && (\n          <span\n            className={`input-currency ${\n              isShowMaxButton ? 'input-currency--before-max-btn' : ''\n            }`}\n          >\n            {textCurrency}\n          </span>\n        )}\n\n        {textCurrency2 && (\n          <span className=\"input-currency input-currency--type2\">\n            {textCurrency2}\n          </span>\n        )}\n      </div>\n      {errors && touched && (\n        <p className=\"error-text\">\n          <span className=\"error-text__icon\">\n            <svg\n              className=\"fill\"\n              width=\"20\"\n              height=\"16\"\n              viewBox=\"0 0 20 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M10 5.74986V8.5M10 11.4999H10.009M3.79425 15H16.2057C17.5852 15 18.4469 13.5414 17.7572 12.375L11.5514 1.87479C10.8617 0.708402 9.13829 0.708402 8.44856 1.87479L2.24282 12.375C1.55309 13.5414 2.4148 15 3.79425 15Z\"\n                stroke=\"#FD5353\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </span>\n          <span>{errors && touched && errors}</span>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport const Input = props => {\n  return (\n    <FormControl {...props}>\n      <input\n        {...props.field}\n        type={props.type}\n        className={props.className}\n        placeholder={props.placeholder}\n        inputMode={props.inputMode || null}\n        disabled={props.disabled || null}\n        pattern={props.pattern || null}\n        maxLength={props.maxLength || null}\n        ref={props.inputRef || null}\n      />\n    </FormControl>\n  );\n};\n\nexport const InputWithOnChange = props => {\n  return (\n    <FormControl {...props}>\n      <input\n        {...props.field}\n        type={props.type}\n        className={props.className}\n        placeholder={props.placeholder}\n        inputMode={props.inputMode || null}\n        disabled={props.disabled || null}\n        pattern={props.pattern || null}\n        maxLength={props.maxLength || null}\n        ref={props.inputRef || null}\n        onChange={props.onChange || null}\n      />\n    </FormControl>\n  );\n};\n\nexport const TextArea = props => {\n  return (\n    <FormControl {...props}>\n      <textarea\n        {...props.field}\n        className={props.className}\n        placeholder={props.placeholder}\n        rows={props.rows}\n        cols={props.cols}\n        style={props.style}\n      />\n    </FormControl>\n  );\n};\n\nexport const InputError = props => {\n  return <div className=\"input__notification\">{props.children}</div>;\n};\n\nexport const CheckboxError = props => {\n  return <div className=\"checkbox__notification\">{props.children}</div>;\n};\n\nexport const Checkbox = ({ form, field, title, ...props }) => {\n  const errors = form.errors[field.name];\n  const touched = form.touched[field.name];\n\n  return (\n    <div className=\"check-wrap\">\n      <input type=\"checkbox\" className=\"new-check\" id=\"terms\" name=\"agree\" />\n      <label htmlFor=\"terms\">\n        <span className=\"check-icon\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 26 26\"\n            width=\"26\"\n            height=\"26\"\n            fill=\"#fff\"\n          >\n            <path d=\"M 22.566406 4.730469 L 20.773438 3.511719 C 20.277344 3.175781 19.597656 3.304688 19.265625 3.796875 L 10.476563 16.757813 L 6.4375 12.71875 C 6.015625 12.296875 5.328125 12.296875 4.90625 12.71875 L 3.371094 14.253906 C 2.949219 14.675781 2.949219 15.363281 3.371094 15.789063 L 9.582031 22 C 9.929688 22.347656 10.476563 22.613281 10.96875 22.613281 C 11.460938 22.613281 11.957031 22.304688 12.277344 21.839844 L 22.855469 6.234375 C 23.191406 5.742188 23.0625 5.066406 22.566406 4.730469 Z\" />\n          </svg>\n        </span>\n        <span>\n          {L.translate('Base.FormControls.item2')}{' '}\n          <a href=\"https://html.merehead.xyz/new_dafri/sign-up.html#\">\n            {L.translate('Base.FormControls.item3')}\n          </a>\n          .\n        </span>\n      </label>\n    </div>\n  );\n};\n\nexport const InputSwitch = ({\n  labelFor,\n  id,\n  name,\n  checked,\n  onChange,\n  disabled = false,\n}) => {\n  return (\n    <div className=\"onoffswitch \">\n      <label className=\"onoffswitch-label\" htmlFor={labelFor}>\n        <input\n          type=\"checkbox\"\n          className=\"onoffswitch-checkbox  \"\n          id={id}\n          name={name}\n          checked={checked || 0}\n          onChange={onChange}\n          disabled={disabled}\n        />\n        <span className=\"onoffswitch-inner onoffswitch-inner--status-type onoffswitch-inner--type2\" />\n        <span className=\"onoffswitch-switch\" />\n      </label>\n    </div>\n  );\n};\n\nconst DebounceFormControl = ({\n  form,\n  field,\n  textCurrency,\n  isShowMaxButton,\n  setMaxCallback,\n  ...props\n}) => {\n  const errors = form.errors[field.name] || null;\n\n  return (\n    <>\n      <div className={`field-wrap ${errors && 'error'}`}>\n        {props.children}\n\n        {textCurrency && (\n          <span\n            className={`input-currency ${\n              isShowMaxButton ? 'input-currency--before-max-btn' : ''\n            }`}\n          >\n            {textCurrency}\n          </span>\n        )}\n      </div>\n      {errors && (\n        <p className=\"error-text\">\n          <span className=\"error-text__icon\">\n            <svg\n              className=\"fill\"\n              width=\"20\"\n              height=\"16\"\n              viewBox=\"0 0 20 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M10 5.74986V8.5M10 11.4999H10.009M3.79425 15H16.2057C17.5852 15 18.4469 13.5414 17.7572 12.375L11.5514 1.87479C10.8617 0.708402 9.13829 0.708402 8.44856 1.87479L2.24282 12.375C1.55309 13.5414 2.4148 15 3.79425 15Z\"\n                stroke=\"#FD5353\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </span>\n          <span>{errors}</span>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport const DebounceFormikInput = props => {\n  const handleChange = e => {\n    const value = e.target.value.replace(/,/g, '.').toString();\n    props.handleAmountChange(e, value, props.setFieldValue);\n  };\n\n  return (\n    <DebounceFormControl {...props}>\n      <DebounceInput\n        type=\"number\"\n        name=\"amount\"\n        value={props.value.replace(/,/g, '.')}\n        className=\"input input--big input--type2 input--with-currency\"\n        placeholder={L.translate('Pages.Users.Withdraw.Fiat.item4')}\n        debounceTimeout={500}\n        onChange={handleChange}\n        inputRef={props.debounceRef}\n      />\n\n      {props.isShowMaxButton && (\n        <button\n          type=\"button\"\n          className=\"field-btn field-btn--max\"\n          onClick={props.setMaxCallback}\n        >\n          {L.translate('Base.FormControls.item6')}\n        </button>\n      )}\n    </DebounceFormControl>\n  );\n};\n\n// export const File = props => {\n//   return (\n//     <FormControl {...props}>\n//       <label\n//         className={[\n//           'field__file',\n//           props.field.value && props.field.value.name && 'text',\n//         ].join(' ')}\n//       >\n//         <input\n//           ref={props.childref}\n//           type={'file'}\n//           className={'field__input'}\n//           {...props}\n//           onChange={event => {\n//             props.form.setFieldValue(\n//               props.field.name,\n//               event.currentTarget.files[0],\n//             );\n//           }}\n//         />\n\n//         <span\n//           value={\n//             props.field.value && props.field.value.name\n//               ? props.field.value.name\n//               : props.placeholder\n//           }\n//           className={'field__file_browser'}\n//         ></span>\n//       </label>\n//     </FormControl>\n//   );\n// };\n\n// export const Radio = props => {\n//   return (\n//     <FormControl {...props}>\n//       {props.radio_controls.map((c, index) => {\n//         return (\n//           <label className={'field__radio'} key={index}>\n//             <input\n//               checked={props.value == c.id}\n//               {...props.field}\n//               type={'radio'}\n//               name={props.field.name}\n//               value={c.id}\n//             />\n\n//             <p className={'p1'}>{c.name}</p>\n//           </label>\n//         );\n//       })}\n//     </FormControl>\n//   );\n// };\n","/* eslint-disable no-debugger */\n/* eslint-disable no-restricted-syntax */\nimport valid from 'card-validator';\n\nexport const validateCardNumber = (num, setErorr, setCardInfo) => {\n  const numberValidation = valid.number(num);\n\n  if (num.trim() === '') {\n    if (!numberValidation.isPotentiallyValid || !numberValidation.isValid) {\n      setErorr({ error: true, errorText: 'Field is required' });\n      setCardInfo(null);\n    }\n  } else {\n    if (!numberValidation.isPotentiallyValid || !numberValidation.isValid) {\n      setErorr({ error: true, errorText: 'Card number is invalid' });\n      setCardInfo(null);\n    }\n\n    if (numberValidation.isValid) {\n      setErorr({ error: false, errorText: '' });\n      setCardInfo(numberValidation.card.type);\n    }\n  }\n};\n\nexport const validateCardMonth = (val, setError, yearInfo) => {\n  const curYear = `${new Date().getFullYear()}`.slice(2);\n  const curMonth = new Date().getMonth() + 1;\n\n  if (!val) {\n    setError('Field is required');\n  } else if (val > 12) {\n    setError('Incorrect month');\n  } else if (curYear === yearInfo?.value && val < curMonth) {\n    setError('Card expiration month is invalid');\n  } else {\n    setError(null);\n  }\n};\n\nexport const validateCardYear = (val, setError) => {\n  const curYear = `${new Date().getFullYear()}`.slice(2);\n\n  if (!val) {\n    setError('Field is required');\n  } else if (val < curYear) {\n    setError('Card expiration year is invalid');\n  } else {\n    setError(null);\n  }\n};\n\nexport const validateCardCVV = (val, setCVVError, type) => {\n  if (!val) {\n    setCVVError('Field is required');\n  } else if (\n    (type === 'mastercard' || type === 'visa' || type === 'unionpay') &&\n    val.length < 3\n  ) {\n    setCVVError('Invalid CVV number');\n  } else if (type === 'american-express' && val.length < 4) {\n    setCVVError('Invalid CVV number');\n  } else if (val.length < 3) {\n    setCVVError('Invalid CVV number');\n  } else {\n    setCVVError(null);\n  }\n};\n\nconst customFieldLevelValidation = (value, validations) => {\n  for (const validation of validations) {\n    const result = validation(value);\n\n    if (result) return result;\n  }\n\n  return undefined;\n};\n\nconst required = (value, textError = 'Field is required') => {\n  return !value ? textError : undefined;\n};\n\nconst maxLength = length => {\n  return value => {\n    return value.length > length ? `Max length is ${length}` : undefined;\n  };\n};\n\nconst minLength = length => {\n  return value => {\n    return value.length < length ? `Min length is ${length}` : undefined;\n  };\n};\n\nconst checkbox = value => {\n  return !value ? '' : undefined;\n};\n\nconst phone = value => {\n  const search = String(value).match(\n    /^\\s*(?:\\+?(\\d{1,3}))?([-. (]*(\\d{3})[-. )]*)?((\\d{3})[-. ]*(\\d{2,4})(?:[-.x ]*(\\d+))?)\\s*$/gm,\n  );\n  return !search ? 'Wrong phone number' : undefined;\n};\n\nconst email = value => {\n  const search = value.match(\n    /^(([^<>()[\\]\\\\.#$%^&*(),;!`[а-яА-ЯёЁ\\]{}?+~=:\\s@\"'|\\/]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-z\\-0-9]+\\.)+[a-z]{2,4}))$/,\n  );\n  return !search ? 'Please enter a correct email address' : undefined;\n};\n\nconst password = value => {\n  const search = value.match(\n    /(?=^.{8,25}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z])(?=.*[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]).*$/,\n  );\n  return !search\n    ? 'Password must be at least 8 characters long and include 1 uppercase letter, 1 number, 1 special symbol'\n    : undefined;\n};\n\nexport const validateConfirmPassword = (value, pass) => {\n  let error = required(value);\n\n  if (pass && value) {\n    if (pass !== value) {\n      error = 'Password does not match';\n    }\n  }\n\n  return error;\n};\n\nconst antiphishingRegular = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/;\nconst validateViaRegex = (value, regex) => regex.test(value);\n\nexport const validateNewPhrase = (value, oldValue) => {\n  let error;\n\n  if (!value.trim()) {\n    error = required(value, 'Please enter your antiphishing phrase');\n  } else if (oldValue && value) {\n    if (oldValue === value) {\n      error = 'Phrases must not match';\n    } else if (value.length <= 8) {\n      error = 'Phrase length must be more than 8 characters';\n    } else if (!validateViaRegex(value, antiphishingRegular)) {\n      error =\n        'Phrase must contain at least 8 characters with numbers and capital letters';\n    }\n  }\n\n  return error;\n};\n\nconst validateSingleAntiphishingPhrase = value => {\n  let error;\n\n  if (!value) {\n    error = required(value, 'Please enter your antiphishing phrase');\n  } else if (value.length <= 8) {\n    error = 'Phrase length must be more than 8 characters';\n  } else if (!validateViaRegex(value, antiphishingRegular)) {\n    error =\n      'Phrase must contain at least 8 characters with numbers and capital letters';\n  }\n\n  return error;\n};\n\nconst totp = (\n  value,\n  errorText = 'Please enter a correct 2FA-Authorization code',\n) => {\n  const search = value.match(/^[0-9]*$/); // add totp\n  return !search ? errorText : undefined;\n};\n\nconst isEmpty = value => {\n  return !value.trim() ? 'Please enter your antiphishing phrase' : undefined;\n};\n\nexport const phoneRegex =\n  /^\\s*(?:\\+?(\\d{1,3}))?([-. (]*(\\d{3})[-. )]*)?((\\d{3})[-. ]*(\\d{2,4})(?:[-.x ]*(\\d+))?)\\s*$/gm;\n\nconst validateImage = file => {\n  let error = null;\n\n  if (!file) {\n    error = 'Choose your selfie';\n  } else if (typeof file === 'string') {\n    error = null;\n  } else {\n    const [type] = file.type.split('/');\n\n    if (type !== 'image') {\n      error = 'The file format should be \".jpg\" or \".png\"';\n    }\n  }\n\n  return error;\n};\n\nconst validateYearFunc = value => {\n  let error = null;\n\n  if (value) {\n    const date = new Date();\n    const month = date.getMonth() + 1;\n    const year = parseInt(date.getFullYear().toString().substr(2, 2), 10);\n\n    if (year > value) error = 'Incorect ';\n  }\n\n  return error;\n};\n\nexport const validatePercentRate = (value, min, max) => {\n  let error = null;\n\n  if (!`${value}`.trim()) {\n    error = required(value, 'Field is required');\n  } else if (!Number.isInteger(value)) {\n    error = 'Rate value must be integer number';\n  } else if (value > max) {\n    error = 'Rate value cannot be more than 100';\n  } else if (min > value) {\n    error = 'Rate value cannot be less than 1';\n  }\n\n  return error;\n};\n\n// CUSTOM FORMIK VALIDATORS\nexport const validate2FA = value =>\n  customFieldLevelValidation(value, [\n    required,\n    minLength(6),\n    maxLength(6),\n    totp,\n  ]);\n\nconst validatePositiveNumber = value => {\n  let error;\n\n  if (value.trim() && typeof +value === 'number' && value < 1) {\n    error = 'Value must be greater than 0';\n  }\n\n  return error;\n};\n\nexport const requiredValue = value =>\n  customFieldLevelValidation(value, [required]);\n\nexport const validateCheckbox = value =>\n  customFieldLevelValidation(value, [checkbox]);\n\nexport const validateUserName = value =>\n  customFieldLevelValidation(value, [required, minLength(1), maxLength(20)]);\n\nexport const validateEmail = value =>\n  customFieldLevelValidation(value, [required, email]);\n\nexport const validatePassword = value =>\n  customFieldLevelValidation(value, [required, password]);\n\nexport const validatePhone = value =>\n  customFieldLevelValidation(value, [required, phone]);\n\nexport const validateEmptyField = value =>\n  customFieldLevelValidation(value, [isEmpty]);\n\nexport const validateAntiPhishing = value =>\n  customFieldLevelValidation(value, [validateSingleAntiphishingPhrase]);\n\nexport const validateImageFile = file =>\n  customFieldLevelValidation(file, [validateImage]);\n\nexport const validateYear = value =>\n  customFieldLevelValidation(value, [required, validateYearFunc]);\n\nexport const requiredPositiveNumber = value =>\n  customFieldLevelValidation(value, [required, validatePositiveNumber]);\n","import React from 'react';\n\nconst EmptyTable = ({ text }) => {\n  return <p style={{ textAlign: 'center', padding: '15px 0' }}>{text}</p>;\n};\n\nexport default EmptyTable;\n","export default __webpack_public_path__ + \"static/media/closeIcon.07a86e17.svg\";","export const settingsSelector = state => state.settings;\nexport const userSelector = state => state.user;\n"],"sourceRoot":""}