{"version":3,"sources":["components/Pages/Users/PaymentAgent/EditPaymentAgent/FormSelect/index.jsx","components/Pages/Users/PaymentAgent/EditPaymentAgent/PaymentAgentForm/index.jsx","components/Pages/Users/PaymentAgent/EditPaymentAgent/index.jsx","components/Base/FormControls/index.jsx","services/validators.js","redux/paymentAgent/selectors.js","components/Base/InputError/index.jsx","components/Base/EmptyImage/index.jsx","components/Pages/Users/PaymentAgent/EditPaymentAgent/SuccessUploadImg/index.jsx","components/Pages/Users/PaymentAgent/EditPaymentAgent/UploadBtn/index.jsx"],"names":["customStyles","container","provided","background","borderRadius","padding","control","border","borderColor","boxShadow","valueContainer","input","margin","indicatorsContainer","width","placeholder","color","fontSize","FormSelect","props","data","onChange","error","classValue","options","className","classNamePrefix","styles","isClearable","PaymentAgentForm","countries","dispatch","useDispatch","initValue","address","email","min_deposit_withdrawal","payment_methods","name","surname","phone","description","useState","isSuccess","standartFile","photo_path","base64","file","setFile","image","setImage","fileError","setFileError","setBlob","e","targetFile","target","files","fileReader","FileReader","readAsDataURL","onloadend","base64Code","result","validateImageFile","value","commission_rate","label","commision","setCommision","commisionError","setCommisionError","commisionData","Array","fill","map","_","i","handleCommision","option","country","setCountry","countriesData","item","countryError","setCountryError","handleCountry","validateCustomFields","validateFile","enableReinitialize","initialValues","onSubmit","values","payload","replace","photo","obj","Object","entries","sort","toString","validateChanges","notification","type","timeOut","message","L","translate","types","EDIT_PAYMENT_AGENT_START","resetForm","src","alt","EmptyImage","height","SuccessUploadImg","UploadBtn","InputError","errorText","position","component","Input","validate","requiredValue","defaultValue","validateEmail","validatePhone","TextArea","rows","style","onClick","EditPaymentAgent","user","useSelector","userSelector","paymentAgent","paymentAgentSelector","useEffect","GET_COUNTRIES_DATA_START","id","GET_SINGLE_PAYMENT_AGENT_START","isLoading","Loader","singlePaymentAgent","FormControl","form","field","isCheckMark","isShowPass","isShowOldPass","setIsShowOldPass","setIsShowPass","isShowConfirmPass","setIsShowConfirmPass","isSendBtn","isShowMaxButton","setMaxCallback","sendBtnCallback","textCurrency","textCurrency2","title","errors","touched","children","viewBox","xmlns","fillRule","clipRule","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","inputMode","disabled","pattern","maxLength","ref","inputRef","InputWithOnChange","cols","InputSwitch","labelFor","checked","htmlFor","DebounceFormControl","DebounceFormikInput","debounceTimeout","handleAmountChange","setFieldValue","debounceRef","validateCardNumber","num","setErorr","setCardInfo","numberValidation","valid","number","trim","isPotentiallyValid","isValid","card","validateCardMonth","val","setError","yearInfo","curYear","Date","getFullYear","slice","curMonth","getMonth","validateCardYear","validateCardCVV","setCVVError","length","customFieldLevelValidation","validations","validation","required","textError","undefined","minLength","String","match","password","validateConfirmPassword","pass","antiphishingRegular","validateViaRegex","regex","test","validateNewPhrase","oldValue","validateSingleAntiphishingPhrase","totp","search","phoneRegex","validateImage","split","validatePercentRate","min","max","Number","isInteger","validate2FA","validatePositiveNumber","validatePassword","validateAntiPhishing","requiredPositiveNumber","state","paymentAgentCommissionSelector","paymentAgentCommission","paymentAgentSingleSelector","paymentAgentWithdrawalListSelector","paymentAgentWithdrawal","withdrawalList","paymentAgentTransferListSelector","paymentAgentTransfer","transferList","paymentAgentsListSelector","publicAgentsList","display","justifyContent","radius","imageText","textSize","alignItems","accept"],"mappings":"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","file":"static/js/EditPaymentAgent.6b644c17.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\n\nconst customStyles = {\n  container: provided => ({\n    ...provided,\n    background: '#FFF',\n    borderRadius: '10px',\n    padding: '0 15px',\n  }),\n  control: provided => ({\n    ...provided,\n    border: 'none',\n    borderColor: 'transparent',\n    boxShadow: 'none',\n  }),\n  valueContainer: provided => ({\n    ...provided,\n    padding: '12px 0',\n  }),\n  input: provided => ({\n    ...provided,\n    padding: '0',\n    margin: '0',\n  }),\n  indicatorsContainer: () => ({\n    width: '12px',\n  }),\n  placeholder: provided => ({\n    ...provided,\n    color: '#969696',\n    fontSize: '16px',\n  }),\n};\n\nconst FormSelect = props => {\n  const { data, onChange, error, placeholder } = props;\n\n  const handleChange = data => onChange(data);\n  const classValue = error ? 'select-agent error' : 'select-agent';\n\n  return (\n    <Select\n      placeholder={placeholder}\n      options={data}\n      onChange={handleChange}\n      className={classValue}\n      classNamePrefix=\"select-agent\"\n      styles={customStyles}\n      isClearable\n      {...props}\n    />\n  );\n};\n\nexport default FormSelect;\n","import React, { useState } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport SuccessUploadImg from '../SuccessUploadImg';\nimport UploadBtn from '../UploadBtn';\nimport InputError from '../../../../../Base/InputError';\nimport FormSelect from '../FormSelect';\nimport { Input, TextArea } from '../../../../../Base/FormControls';\nimport EmptyImage from '../../../../../Base/EmptyImage';\nimport {\n  requiredValue,\n  validateEmail,\n  validateImageFile,\n  validatePhone,\n} from '../../../../../../services/validators';\nimport types from '../../../../../../redux/types';\nimport notification from '../../../../../../services/notification';\n\nconst PaymentAgentForm = ({ data, countries }) => {\n  const dispatch = useDispatch();\n\n  const initValue = {\n    address: data?.address || '',\n    email: data?.email || '',\n    min_deposit_withdrawal: data?.min_deposit_withdrawal || '',\n    payment_methods: data?.payment_methods || '',\n    name: data?.name || '',\n    surname: data?.surname || '',\n    phone: data?.phone || '',\n    description: data?.description || '',\n  };\n\n  // File field logic\n  const [file, setFile] = useState({\n    isSuccess: false,\n    standartFile: data?.photo_path || null,\n    base64: data?.photo_path || null,\n  });\n\n  const [image, setImage] = useState(data?.photo_path);\n\n  const [fileError, setFileError] = useState(null);\n\n  const validateFile = () => {\n    const error = validateImageFile(file.standartFile);\n    setFileError(error);\n  };\n\n  const setBlob = e => {\n    const targetFile = e.target.files[0];\n    const fileReader = new FileReader();\n\n    fileReader.readAsDataURL(targetFile);\n\n    fileReader.onloadend = function onLoadEnd() {\n      const base64Code = fileReader.result;\n\n      setImage(base64Code);\n\n      setFile({\n        standartFile: targetFile,\n        base64: base64Code,\n        isSuccess: true,\n      });\n    };\n\n    setFileError(validateImageFile(targetFile));\n  };\n\n  // Commision field logic\n  const [commision, setCommision] = useState({\n    value: `${data?.commission_rate}%` || '',\n    label: `${data?.commission_rate}%` || '',\n  });\n  const [commisionError, setCommisionError] = useState(false);\n\n  const commisionData = Array(100)\n    .fill('')\n    .map((_, i) => ({ label: `${i + 1}%`, value: `${i + 1}%` }));\n\n  const validateCommision = () => setCommisionError(!commision.value);\n\n  const handleCommision = option => {\n    setCommision(option);\n    setCommisionError(!option?.value);\n  };\n\n  // Countries field logic\n  const [country, setCountry] = useState({\n    value: data?.country || '',\n    label: data?.country || '',\n  });\n\n  const countriesData = countries?.map(item => ({\n    label: item.country,\n    value: item.country,\n  }));\n\n  const [countryError, setCountryError] = useState(false);\n\n  const validateCountry = () => setCountryError(!country.value);\n\n  const handleCountry = option => {\n    setCountry(option);\n    setCountryError(!option?.value);\n  };\n\n  // All validation\n  const validateCustomFields = () => {\n    validateFile();\n    validateCommision();\n    validateCountry();\n  };\n\n  const validateChanges = obj => {\n    if (data) {\n      const {\n        address,\n        email,\n        min_deposit_withdrawal,\n        payment_methods,\n        name,\n        surname,\n        phone,\n        description,\n        commission_rate,\n        country,\n        photo_path,\n      } = data;\n\n      return (\n        Object.entries({\n          address,\n          email,\n          min_deposit_withdrawal,\n          payment_methods,\n          name,\n          surname,\n          phone,\n          description,\n          commission_rate,\n          country,\n          photo: photo_path,\n        })\n          .sort()\n          .toString() === Object.entries(obj).sort().toString()\n      );\n    }\n  };\n\n  // Submit validation\n  const handleSubmit = values => {\n    if (!fileError && !commisionError && !countryError) {\n      const payload = {\n        ...values,\n        commission_rate: +commision.value.replace(/\\D+/g, ''),\n        country: country.value,\n        photo:\n          data?.photo_path && !file.base64 ? data?.photo_path : file.base64,\n      };\n\n      const hasChanges = validateChanges(payload);\n\n      if (!hasChanges) {\n        dispatch({\n          type: types.EDIT_PAYMENT_AGENT_START,\n          payload,\n        });\n      } else {\n        notification({\n          type: 'info',\n          timeOut: 4000,\n          message: L.translate(\n            'Pages.Users.PaymentAgent.EditPaymentAgent.item1',\n          ),\n        });\n      }\n    }\n  };\n\n  return (\n    <section className=\"inner-section inner-section--agent\">\n      <div className=\"custom-container\">\n        <div className=\"profile-container profile-container--full\">\n          <p className=\"section-title section-title--center\">Edit Profile</p>\n\n          <Formik\n            enableReinitialize\n            initialValues={initValue}\n            onSubmit={handleSubmit}\n          >\n            {({ resetForm, values, ...formik }) => (\n              <Form className=\"main-form-box main-form-box--agent\">\n                <div className=\"main-form\">\n                  <div className=\"profile-photo\">\n                    <div className=\"d-flex profile-photo__item\">\n                      {image ? (\n                        <img src={image} alt=\"\" />\n                      ) : (\n                        <EmptyImage width=\"100%\" height=\"100%\" />\n                      )}\n                    </div>\n\n                    {file.isSuccess && <SuccessUploadImg />}\n\n                    <div className=\"profile-photo__upload\">\n                      <UploadBtn setBlob={setBlob} />\n\n                      {fileError && (\n                        <InputError errorText={fileError} position=\"center\" />\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"main-form__group\">\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <div className=\"field\">\n                          <Field\n                            type=\"text\"\n                            name=\"name\"\n                            className=\"input input--type2\"\n                            placeholder={L.translate(\n                              'Pages.Users.PaymentAgent.EditPaymentAgent.item3',\n                            )}\n                            component={Input}\n                            validate={requiredValue}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-lg-6\">\n                        <div className=\"field\">\n                          <Field\n                            name=\"surname\"\n                            type=\"text\"\n                            className=\"input input--type2\"\n                            placeholder={L.translate(\n                              'Pages.Users.PaymentAgent.EditPaymentAgent.item4',\n                            )}\n                            component={Input}\n                            validate={requiredValue}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <div className=\"field\">\n                          <FormSelect\n                            data={countriesData}\n                            error={countryError}\n                            onChange={handleCountry}\n                            placeholder={L.translate(\n                              'Pages.Users.PaymentAgent.EditPaymentAgent.item7',\n                            )}\n                            defaultValue={country}\n                          />\n\n                          {countryError && (\n                            <InputError\n                              errorText={L.translate(\n                                'Pages.Users.PaymentAgent.EditPaymentAgent.item5',\n                              )}\n                            />\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"col-lg-6\">\n                        <div className=\"field\">\n                          <FormSelect\n                            data={commisionData}\n                            error={commisionError}\n                            onChange={handleCommision}\n                            placeholder={L.translate(\n                              'Pages.Users.PaymentAgent.EditPaymentAgent.item8',\n                            )}\n                            defaultValue={commision}\n                          />\n\n                          {commisionError && (\n                            <InputError\n                              errorText={L.translate(\n                                'Pages.Users.PaymentAgent.EditPaymentAgent.item6',\n                              )}\n                            />\n                          )}\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <div className=\"field\">\n                          <Field\n                            name=\"min_deposit_withdrawal\"\n                            type=\"number\"\n                            className=\"input input--type2\"\n                            placeholder={L.translate(\n                              'Pages.Users.PaymentAgent.EditPaymentAgent.item9',\n                            )}\n                            component={Input}\n                            validate={requiredValue}\n                          />\n                        </div>\n                      </div>\n\n                      <div className=\"col-lg-6\">\n                        <div className=\"field\">\n                          <Field\n                            name=\"address\"\n                            type=\"text\"\n                            className=\"input input--type2\"\n                            placeholder={L.translate(\n                              'Pages.Users.PaymentAgent.EditPaymentAgent.item10',\n                            )}\n                            component={Input}\n                            validate={requiredValue}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"row\">\n                      <div className=\"col-lg-6\">\n                        <div className=\"field\">\n                          <Field\n                            name=\"payment_methods\"\n                            type=\"text\"\n                            className=\"input input--type2\"\n                            placeholder={L.translate(\n                              'Pages.Users.PaymentAgent.EditPaymentAgent.item11',\n                            )}\n                            component={Input}\n                            validate={requiredValue}\n                          />\n                        </div>\n\n                        <div className=\"field\">\n                          <Field\n                            name=\"email\"\n                            type=\"text\"\n                            className=\"input input--type2\"\n                            placeholder={L.translate(\n                              'Pages.Users.PaymentAgent.EditPaymentAgent.item12',\n                            )}\n                            component={Input}\n                            validate={validateEmail}\n                          />\n                        </div>\n                        <div className=\"field\">\n                          <div className=\"field-wrap\">\n                            <Field\n                              name=\"phone\"\n                              type=\"text\"\n                              className=\"input input--type2\"\n                              placeholder={L.translate(\n                                'Pages.Users.PaymentAgent.EditPaymentAgent.item13',\n                              )}\n                              component={Input}\n                              validate={validatePhone}\n                            />\n                          </div>\n                        </div>\n                      </div>\n\n                      <div className=\"col-lg-6\">\n                        <div className=\"field\">\n                          <div className=\"field-wrap\">\n                            <Field\n                              name=\"description\"\n                              className=\"area-field area-field--type2 area-field--bigger\"\n                              placeholder={L.translate(\n                                'Pages.Users.PaymentAgent.EditPaymentAgent.item14',\n                              )}\n                              component={TextArea}\n                              validate={requiredValue}\n                              rows=\"7\"\n                              style={{ width: '100%' }}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"d-flex main-form__submit main-form__submit--more-mt\">\n                    <button\n                      className=\"button button--big button--uppercase\"\n                      type=\"submit\"\n                      onClick={validateCustomFields}\n                    >\n                      {L.translate(\n                        'Pages.Users.PaymentAgent.EditPaymentAgent.item15',\n                      )}\n                    </button>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default PaymentAgentForm;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PaymentAgentForm from './PaymentAgentForm';\nimport Loader from '../../../../Base/Loader';\nimport { userSelector } from '../../../../../redux/auth/selectors';\nimport { paymentAgentSelector } from '../../../../../redux/paymentAgent/selectors';\nimport types from '../../../../../redux/types';\n\nconst EditPaymentAgent = () => {\n  const dispatch = useDispatch();\n  const user = useSelector(userSelector);\n  const paymentAgent = useSelector(paymentAgentSelector);\n\n  useEffect(() => {\n    if (!paymentAgent.countries)\n      dispatch({ type: types.GET_COUNTRIES_DATA_START });\n\n    if (user?.id)\n      dispatch({\n        type: types.GET_SINGLE_PAYMENT_AGENT_START,\n        payload: { id: user?.id },\n      });\n  }, []);\n\n  return paymentAgent.isLoading ? (\n    <Loader />\n  ) : (\n    <PaymentAgentForm\n      data={paymentAgent.singlePaymentAgent}\n      countries={paymentAgent.countries}\n    />\n  );\n};\n\nexport default EditPaymentAgent;\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState } from 'react';\nimport L from 'i18n-react';\nimport { DebounceInput } from 'react-debounce-input';\n\nconst FormControl = ({\n  form,\n  field,\n  isCheckMark,\n  isShowPass,\n  isShowOldPass,\n  setIsShowOldPass,\n  setIsShowPass,\n  isShowConfirmPass,\n  setIsShowConfirmPass,\n  isSendBtn,\n  isShowMaxButton,\n  setMaxCallback,\n  sendBtnCallback,\n  textCurrency,\n  textCurrency2,\n  title,\n  ...props\n}) => {\n  const errors = form.errors[field.name] || null;\n  const touched = form.touched[field.name] || null;\n\n  return (\n    <>\n      <div className={`field-wrap ${errors && touched ? 'error' : ''}`}>\n        {props.children}\n        {isCheckMark && !errors && (\n          <span className=\"field-icon field-icon--check\">\n            <svg\n              className=\"fill\"\n              width=\"14\"\n              height=\"10\"\n              viewBox=\"0 0 14 10\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M13.6947 0.292787C13.8822 0.480314 13.9875 0.734622 13.9875 0.999786C13.9875 1.26495 13.8822 1.51926 13.6947 1.70679L5.69471 9.70679C5.50718 9.89426 5.25288 9.99957 4.98771 9.99957C4.72255 9.99957 4.46824 9.89426 4.28071 9.70679L0.280712 5.70679C0.0985537 5.51818 -0.00224062 5.26558 3.78026e-05 5.00339C0.00231622 4.74119 0.107485 4.49038 0.292893 4.30497C0.478301 4.11956 0.729114 4.01439 0.99131 4.01211C1.25351 4.00983 1.50611 4.11063 1.69471 4.29279L4.98771 7.58579L12.2807 0.292787C12.4682 0.105316 12.7225 0 12.9877 0C13.2529 0 13.5072 0.105316 13.6947 0.292787Z\"\n                fill=\"#3DD598\"\n              />\n            </svg>\n          </span>\n        )}\n        {(setIsShowPass || setIsShowConfirmPass || setIsShowOldPass) && (\n          <button\n            type=\"button\"\n            className=\"show-pass\"\n            onClick={\n              setIsShowPass\n                ? () => setIsShowPass(!isShowPass)\n                : setIsShowConfirmPass\n                ? () => setIsShowConfirmPass(!isShowConfirmPass)\n                : () => setIsShowOldPass(!isShowOldPass)\n            }\n          >\n            <svg\n              className=\"text-type fill\"\n              width=\"15\"\n              height=\"11\"\n              viewBox=\"0 0 15 11\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M7.5001 4.018C7.1449 4.018 6.80425 4.1591 6.55309 4.41026C6.30192 4.66143 6.16082 5.00208 6.16082 5.35728C6.16082 5.71248 6.30192 6.05314 6.55309 6.3043C6.80425 6.55547 7.1449 6.69657 7.5001 6.69657C7.85531 6.69657 8.19596 6.55547 8.44712 6.3043C8.69829 6.05314 8.83939 5.71248 8.83939 5.35728C8.83939 5.00208 8.69829 4.66143 8.44712 4.41026C8.19596 4.1591 7.85531 4.018 7.5001 4.018ZM5.60607 3.46325C6.1084 2.96092 6.7897 2.67871 7.5001 2.67871C8.21051 2.67871 8.89181 2.96092 9.39414 3.46325C9.89647 3.96558 10.1787 4.64688 10.1787 5.35728C10.1787 6.06768 9.89647 6.74899 9.39414 7.25132C8.89181 7.75365 8.21051 8.03585 7.5001 8.03585C6.7897 8.03585 6.1084 7.75365 5.60607 7.25132C5.10374 6.74899 4.82153 6.06768 4.82153 5.35728C4.82153 4.64688 5.10374 3.96558 5.60607 3.46325Z\"\n                fill=\"#969696\"\n              />\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0 5.35714V5.55777C0.999008 8.54564 3.97125 10.7143 7.48362 10.7143C10.9967 10.7143 13.9683 8.5456 14.9672 5.55777C15.0109 5.42716 15.0109 5.28712 14.9672 5.15652C13.9683 2.16868 10.9967 0 7.48362 0C3.97125 0 0.999008 2.16864 0 5.15652V5.35714ZM1.43174 5.35714C2.31265 7.69849 4.69099 9.375 7.48362 9.375C10.2769 9.375 12.6546 7.69852 13.5355 5.35714C12.6546 3.01576 10.2769 1.33929 7.48362 1.33929C4.69099 1.33929 2.31265 3.0158 1.43174 5.35714Z\"\n                fill=\"#969696\"\n              />\n            </svg>\n            <svg\n              className=\"password-type fill\"\n              width=\"15\"\n              height=\"14\"\n              viewBox=\"0 0 15 14\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                clipRule=\"evenodd\"\n                d=\"M0.594631 0.205025C0.87244 -0.0683417 1.32286 -0.0683417 1.60066 0.205025L3.76394 2.33372C4.90758 1.72086 6.1921 1.39834 7.50048 1.4C11.0054 1.40021 13.9699 3.66715 14.9673 6.79013C15.011 6.92703 15.0109 7.07384 14.967 7.21068C14.5043 8.65341 13.623 9.92422 12.4407 10.8718L14.4054 12.805C14.6832 13.0784 14.6832 13.5216 14.4054 13.795C14.1276 14.0683 13.6771 14.0683 13.3993 13.795L10.8469 11.2834C10.8467 11.2831 10.8465 11.2829 10.8462 11.2827L8.52525 8.99881C8.51868 8.99281 8.5122 8.98666 8.50581 8.98037L5.48745 6.01027C5.48106 6.00399 5.47482 5.99761 5.46872 5.99114L0.594631 1.19497C0.316823 0.921608 0.316823 0.478392 0.594631 0.205025ZM8.50581 8.98037C8.50569 8.98026 8.50592 8.98049 8.50581 8.98037V8.98037ZM9.95124 8.4221C10.2071 7.99491 10.3453 7.50464 10.3453 7.00035C10.3453 6.2577 10.0455 5.54546 9.51184 5.02033C8.97817 4.49519 8.25436 4.20017 7.49964 4.20017C6.98716 4.20017 6.48892 4.33621 6.0548 4.58795L4.82319 3.37604C5.6589 2.99679 6.57164 2.79876 7.49904 2.8L7.5 2.8C10.2867 2.8 12.659 4.55222 13.5386 6.99961C13.128 8.139 12.3945 9.13639 11.4283 9.87551L9.95124 8.4221ZM8.87421 7.36229C8.90605 7.24523 8.92257 7.12363 8.92257 7.00035C8.92257 6.629 8.77266 6.27286 8.50581 6.01027C8.23896 5.74769 7.87703 5.60017 7.49964 5.60017C7.37436 5.60017 7.25078 5.61643 7.13182 5.64776L8.87421 7.36229ZM1.77445 4.18135C1.97961 4.16747 2.18082 4.24162 2.32624 4.3847L9.33681 11.2825C9.52329 11.466 9.59132 11.7359 9.51359 11.9838C9.43585 12.2318 9.22511 12.4171 8.966 12.4653C8.48251 12.5553 7.99151 12.6004 7.49946 12.6C7.49928 12.6 7.49964 12.6 7.49946 12.6C3.99453 12.5998 1.03013 10.3328 0.0327249 7.20987C-0.0109153 7.07323 -0.0109081 6.9267 0.0327453 6.79007C0.30143 5.94907 0.715275 5.15989 1.25614 4.4571C1.38029 4.29578 1.5693 4.19523 1.77445 4.18135ZM1.93563 5.98017L7.23543 11.1947C4.56378 11.0878 2.31281 9.36977 1.46122 7.00001C1.58826 6.64645 1.74709 6.30517 1.93563 5.98017Z\"\n                fill=\"#969696\"\n              />\n            </svg>\n          </button>\n        )}\n\n        {isSendBtn && (\n          <button className=\"field-btn\" type=\"button\" onClick={sendBtnCallback}>\n            {L.translate('Base.FormControls.item1')}\n          </button>\n        )}\n\n        {isShowMaxButton && (\n          <button\n            type=\"button\"\n            className=\"field-btn field-btn--max\"\n            onClick={setMaxCallback}\n          >\n            {L.translate('Base.FormControls.item5')}\n          </button>\n        )}\n\n        {textCurrency && (\n          <span\n            className={`input-currency ${\n              isShowMaxButton ? 'input-currency--before-max-btn' : ''\n            }`}\n          >\n            {textCurrency}\n          </span>\n        )}\n\n        {textCurrency2 && (\n          <span className=\"input-currency input-currency--type2\">\n            {textCurrency2}\n          </span>\n        )}\n      </div>\n      {errors && touched && (\n        <p className=\"error-text\">\n          <span className=\"error-text__icon\">\n            <svg\n              className=\"fill\"\n              width=\"20\"\n              height=\"16\"\n              viewBox=\"0 0 20 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M10 5.74986V8.5M10 11.4999H10.009M3.79425 15H16.2057C17.5852 15 18.4469 13.5414 17.7572 12.375L11.5514 1.87479C10.8617 0.708402 9.13829 0.708402 8.44856 1.87479L2.24282 12.375C1.55309 13.5414 2.4148 15 3.79425 15Z\"\n                stroke=\"#FD5353\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </span>\n          <span>{errors && touched && errors}</span>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport const Input = props => {\n  return (\n    <FormControl {...props}>\n      <input\n        {...props.field}\n        type={props.type}\n        className={props.className}\n        placeholder={props.placeholder}\n        inputMode={props.inputMode || null}\n        disabled={props.disabled || null}\n        pattern={props.pattern || null}\n        maxLength={props.maxLength || null}\n        ref={props.inputRef || null}\n      />\n    </FormControl>\n  );\n};\n\nexport const InputWithOnChange = props => {\n  return (\n    <FormControl {...props}>\n      <input\n        {...props.field}\n        type={props.type}\n        className={props.className}\n        placeholder={props.placeholder}\n        inputMode={props.inputMode || null}\n        disabled={props.disabled || null}\n        pattern={props.pattern || null}\n        maxLength={props.maxLength || null}\n        ref={props.inputRef || null}\n        onChange={props.onChange || null}\n      />\n    </FormControl>\n  );\n};\n\nexport const TextArea = props => {\n  return (\n    <FormControl {...props}>\n      <textarea\n        {...props.field}\n        className={props.className}\n        placeholder={props.placeholder}\n        rows={props.rows}\n        cols={props.cols}\n        style={props.style}\n      />\n    </FormControl>\n  );\n};\n\nexport const InputError = props => {\n  return <div className=\"input__notification\">{props.children}</div>;\n};\n\nexport const CheckboxError = props => {\n  return <div className=\"checkbox__notification\">{props.children}</div>;\n};\n\nexport const Checkbox = ({ form, field, title, ...props }) => {\n  const errors = form.errors[field.name];\n  const touched = form.touched[field.name];\n\n  return (\n    <div className=\"check-wrap\">\n      <input type=\"checkbox\" className=\"new-check\" id=\"terms\" name=\"agree\" />\n      <label htmlFor=\"terms\">\n        <span className=\"check-icon\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 26 26\"\n            width=\"26\"\n            height=\"26\"\n            fill=\"#fff\"\n          >\n            <path d=\"M 22.566406 4.730469 L 20.773438 3.511719 C 20.277344 3.175781 19.597656 3.304688 19.265625 3.796875 L 10.476563 16.757813 L 6.4375 12.71875 C 6.015625 12.296875 5.328125 12.296875 4.90625 12.71875 L 3.371094 14.253906 C 2.949219 14.675781 2.949219 15.363281 3.371094 15.789063 L 9.582031 22 C 9.929688 22.347656 10.476563 22.613281 10.96875 22.613281 C 11.460938 22.613281 11.957031 22.304688 12.277344 21.839844 L 22.855469 6.234375 C 23.191406 5.742188 23.0625 5.066406 22.566406 4.730469 Z\" />\n          </svg>\n        </span>\n        <span>\n          {L.translate('Base.FormControls.item2')}{' '}\n          <a href=\"https://html.merehead.xyz/new_dafri/sign-up.html#\">\n            {L.translate('Base.FormControls.item3')}\n          </a>\n          .\n        </span>\n      </label>\n    </div>\n  );\n};\n\nexport const InputSwitch = ({\n  labelFor,\n  id,\n  name,\n  checked,\n  onChange,\n  disabled = false,\n}) => {\n  return (\n    <div className=\"onoffswitch \">\n      <label className=\"onoffswitch-label\" htmlFor={labelFor}>\n        <input\n          type=\"checkbox\"\n          className=\"onoffswitch-checkbox  \"\n          id={id}\n          name={name}\n          checked={checked || 0}\n          onChange={onChange}\n          disabled={disabled}\n        />\n        <span className=\"onoffswitch-inner onoffswitch-inner--status-type onoffswitch-inner--type2\" />\n        <span className=\"onoffswitch-switch\" />\n      </label>\n    </div>\n  );\n};\n\nconst DebounceFormControl = ({\n  form,\n  field,\n  textCurrency,\n  isShowMaxButton,\n  setMaxCallback,\n  ...props\n}) => {\n  const errors = form.errors[field.name] || null;\n\n  return (\n    <>\n      <div className={`field-wrap ${errors && 'error'}`}>\n        {props.children}\n\n        {textCurrency && (\n          <span\n            className={`input-currency ${\n              isShowMaxButton ? 'input-currency--before-max-btn' : ''\n            }`}\n          >\n            {textCurrency}\n          </span>\n        )}\n      </div>\n      {errors && (\n        <p className=\"error-text\">\n          <span className=\"error-text__icon\">\n            <svg\n              className=\"fill\"\n              width=\"20\"\n              height=\"16\"\n              viewBox=\"0 0 20 16\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                d=\"M10 5.74986V8.5M10 11.4999H10.009M3.79425 15H16.2057C17.5852 15 18.4469 13.5414 17.7572 12.375L11.5514 1.87479C10.8617 0.708402 9.13829 0.708402 8.44856 1.87479L2.24282 12.375C1.55309 13.5414 2.4148 15 3.79425 15Z\"\n                stroke=\"#FD5353\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          </span>\n          <span>{errors}</span>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport const DebounceFormikInput = props => {\n  const handleChange = e => {\n    const value = e.target.value.replace(/,/g, '.').toString();\n    props.handleAmountChange(e, value, props.setFieldValue);\n  };\n\n  return (\n    <DebounceFormControl {...props}>\n      <DebounceInput\n        type=\"number\"\n        name=\"amount\"\n        value={props.value.replace(/,/g, '.')}\n        className=\"input input--big input--type2 input--with-currency\"\n        placeholder={L.translate('Pages.Users.Withdraw.Fiat.item4')}\n        debounceTimeout={500}\n        onChange={handleChange}\n        inputRef={props.debounceRef}\n      />\n\n      {props.isShowMaxButton && (\n        <button\n          type=\"button\"\n          className=\"field-btn field-btn--max\"\n          onClick={props.setMaxCallback}\n        >\n          {L.translate('Base.FormControls.item6')}\n        </button>\n      )}\n    </DebounceFormControl>\n  );\n};\n\n// export const File = props => {\n//   return (\n//     <FormControl {...props}>\n//       <label\n//         className={[\n//           'field__file',\n//           props.field.value && props.field.value.name && 'text',\n//         ].join(' ')}\n//       >\n//         <input\n//           ref={props.childref}\n//           type={'file'}\n//           className={'field__input'}\n//           {...props}\n//           onChange={event => {\n//             props.form.setFieldValue(\n//               props.field.name,\n//               event.currentTarget.files[0],\n//             );\n//           }}\n//         />\n\n//         <span\n//           value={\n//             props.field.value && props.field.value.name\n//               ? props.field.value.name\n//               : props.placeholder\n//           }\n//           className={'field__file_browser'}\n//         ></span>\n//       </label>\n//     </FormControl>\n//   );\n// };\n\n// export const Radio = props => {\n//   return (\n//     <FormControl {...props}>\n//       {props.radio_controls.map((c, index) => {\n//         return (\n//           <label className={'field__radio'} key={index}>\n//             <input\n//               checked={props.value == c.id}\n//               {...props.field}\n//               type={'radio'}\n//               name={props.field.name}\n//               value={c.id}\n//             />\n\n//             <p className={'p1'}>{c.name}</p>\n//           </label>\n//         );\n//       })}\n//     </FormControl>\n//   );\n// };\n","/* eslint-disable no-debugger */\n/* eslint-disable no-restricted-syntax */\nimport valid from 'card-validator';\n\nexport const validateCardNumber = (num, setErorr, setCardInfo) => {\n  const numberValidation = valid.number(num);\n\n  if (num.trim() === '') {\n    if (!numberValidation.isPotentiallyValid || !numberValidation.isValid) {\n      setErorr({ error: true, errorText: 'Field is required' });\n      setCardInfo(null);\n    }\n  } else {\n    if (!numberValidation.isPotentiallyValid || !numberValidation.isValid) {\n      setErorr({ error: true, errorText: 'Card number is invalid' });\n      setCardInfo(null);\n    }\n\n    if (numberValidation.isValid) {\n      setErorr({ error: false, errorText: '' });\n      setCardInfo(numberValidation.card.type);\n    }\n  }\n};\n\nexport const validateCardMonth = (val, setError, yearInfo) => {\n  const curYear = `${new Date().getFullYear()}`.slice(2);\n  const curMonth = new Date().getMonth() + 1;\n\n  if (!val) {\n    setError('Field is required');\n  } else if (val > 12) {\n    setError('Incorrect month');\n  } else if (curYear === yearInfo?.value && val < curMonth) {\n    setError('Card expiration month is invalid');\n  } else {\n    setError(null);\n  }\n};\n\nexport const validateCardYear = (val, setError) => {\n  const curYear = `${new Date().getFullYear()}`.slice(2);\n\n  if (!val) {\n    setError('Field is required');\n  } else if (val < curYear) {\n    setError('Card expiration year is invalid');\n  } else {\n    setError(null);\n  }\n};\n\nexport const validateCardCVV = (val, setCVVError, type) => {\n  if (!val) {\n    setCVVError('Field is required');\n  } else if (\n    (type === 'mastercard' || type === 'visa' || type === 'unionpay') &&\n    val.length < 3\n  ) {\n    setCVVError('Invalid CVV number');\n  } else if (type === 'american-express' && val.length < 4) {\n    setCVVError('Invalid CVV number');\n  } else if (val.length < 3) {\n    setCVVError('Invalid CVV number');\n  } else {\n    setCVVError(null);\n  }\n};\n\nconst customFieldLevelValidation = (value, validations) => {\n  for (const validation of validations) {\n    const result = validation(value);\n\n    if (result) return result;\n  }\n\n  return undefined;\n};\n\nconst required = (value, textError = 'Field is required') => {\n  return !value ? textError : undefined;\n};\n\nconst maxLength = length => {\n  return value => {\n    return value.length > length ? `Max length is ${length}` : undefined;\n  };\n};\n\nconst minLength = length => {\n  return value => {\n    return value.length < length ? `Min length is ${length}` : undefined;\n  };\n};\n\nconst checkbox = value => {\n  return !value ? '' : undefined;\n};\n\nconst phone = value => {\n  const search = String(value).match(\n    /^\\s*(?:\\+?(\\d{1,3}))?([-. (]*(\\d{3})[-. )]*)?((\\d{3})[-. ]*(\\d{2,4})(?:[-.x ]*(\\d+))?)\\s*$/gm,\n  );\n  return !search ? 'Wrong phone number' : undefined;\n};\n\nconst email = value => {\n  const search = value.match(\n    /^(([^<>()[\\]\\\\.#$%^&*(),;!`[а-яА-ЯёЁ\\]{}?+~=:\\s@\"'|\\/]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-z\\-0-9]+\\.)+[a-z]{2,4}))$/,\n  );\n  return !search ? 'Please enter a correct email address' : undefined;\n};\n\nconst password = value => {\n  const search = value.match(\n    /(?=^.{8,25}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z])(?=.*[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]).*$/,\n  );\n  return !search\n    ? 'Password must be at least 8 characters long and include 1 uppercase letter, 1 number, 1 special symbol'\n    : undefined;\n};\n\nexport const validateConfirmPassword = (value, pass) => {\n  let error = required(value);\n\n  if (pass && value) {\n    if (pass !== value) {\n      error = 'Password does not match';\n    }\n  }\n\n  return error;\n};\n\nconst antiphishingRegular = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).+$/;\nconst validateViaRegex = (value, regex) => regex.test(value);\n\nexport const validateNewPhrase = (value, oldValue) => {\n  let error;\n\n  if (!value.trim()) {\n    error = required(value, 'Please enter your antiphishing phrase');\n  } else if (oldValue && value) {\n    if (oldValue === value) {\n      error = 'Phrases must not match';\n    } else if (value.length <= 8) {\n      error = 'Phrase length must be more than 8 characters';\n    } else if (!validateViaRegex(value, antiphishingRegular)) {\n      error =\n        'Phrase must contain at least 8 characters with numbers and capital letters';\n    }\n  }\n\n  return error;\n};\n\nconst validateSingleAntiphishingPhrase = value => {\n  let error;\n\n  if (!value) {\n    error = required(value, 'Please enter your antiphishing phrase');\n  } else if (value.length <= 8) {\n    error = 'Phrase length must be more than 8 characters';\n  } else if (!validateViaRegex(value, antiphishingRegular)) {\n    error =\n      'Phrase must contain at least 8 characters with numbers and capital letters';\n  }\n\n  return error;\n};\n\nconst totp = (\n  value,\n  errorText = 'Please enter a correct 2FA-Authorization code',\n) => {\n  const search = value.match(/^[0-9]*$/); // add totp\n  return !search ? errorText : undefined;\n};\n\nconst isEmpty = value => {\n  return !value.trim() ? 'Please enter your antiphishing phrase' : undefined;\n};\n\nexport const phoneRegex =\n  /^\\s*(?:\\+?(\\d{1,3}))?([-. (]*(\\d{3})[-. )]*)?((\\d{3})[-. ]*(\\d{2,4})(?:[-.x ]*(\\d+))?)\\s*$/gm;\n\nconst validateImage = file => {\n  let error = null;\n\n  if (!file) {\n    error = 'Choose your selfie';\n  } else if (typeof file === 'string') {\n    error = null;\n  } else {\n    const [type] = file.type.split('/');\n\n    if (type !== 'image') {\n      error = 'The file format should be \".jpg\" or \".png\"';\n    }\n  }\n\n  return error;\n};\n\nconst validateYearFunc = value => {\n  let error = null;\n\n  if (value) {\n    const date = new Date();\n    const month = date.getMonth() + 1;\n    const year = parseInt(date.getFullYear().toString().substr(2, 2), 10);\n\n    if (year > value) error = 'Incorect ';\n  }\n\n  return error;\n};\n\nexport const validatePercentRate = (value, min, max) => {\n  let error = null;\n\n  if (!`${value}`.trim()) {\n    error = required(value, 'Field is required');\n  } else if (!Number.isInteger(value)) {\n    error = 'Rate value must be integer number';\n  } else if (value > max) {\n    error = 'Rate value cannot be more than 100';\n  } else if (min > value) {\n    error = 'Rate value cannot be less than 1';\n  }\n\n  return error;\n};\n\n// CUSTOM FORMIK VALIDATORS\nexport const validate2FA = value =>\n  customFieldLevelValidation(value, [\n    required,\n    minLength(6),\n    maxLength(6),\n    totp,\n  ]);\n\nconst validatePositiveNumber = value => {\n  let error;\n\n  if (value.trim() && typeof +value === 'number' && value < 1) {\n    error = 'Value must be greater than 0';\n  }\n\n  return error;\n};\n\nexport const requiredValue = value =>\n  customFieldLevelValidation(value, [required]);\n\nexport const validateCheckbox = value =>\n  customFieldLevelValidation(value, [checkbox]);\n\nexport const validateUserName = value =>\n  customFieldLevelValidation(value, [required, minLength(1), maxLength(20)]);\n\nexport const validateEmail = value =>\n  customFieldLevelValidation(value, [required, email]);\n\nexport const validatePassword = value =>\n  customFieldLevelValidation(value, [required, password]);\n\nexport const validatePhone = value =>\n  customFieldLevelValidation(value, [required, phone]);\n\nexport const validateEmptyField = value =>\n  customFieldLevelValidation(value, [isEmpty]);\n\nexport const validateAntiPhishing = value =>\n  customFieldLevelValidation(value, [validateSingleAntiphishingPhrase]);\n\nexport const validateImageFile = file =>\n  customFieldLevelValidation(file, [validateImage]);\n\nexport const validateYear = value =>\n  customFieldLevelValidation(value, [required, validateYearFunc]);\n\nexport const requiredPositiveNumber = value =>\n  customFieldLevelValidation(value, [required, validatePositiveNumber]);\n","export const paymentAgentSelector = state => state.paymentAgent.paymentAgent;\nexport const paymentAgentCommissionSelector = state =>\n  state.paymentAgent.paymentAgent.paymentAgentCommission;\nexport const paymentAgentSingleSelector = state =>\n  state.paymentAgent.paymentAgent.singlePaymentAgent;\nexport const paymentAgentWithdrawalListSelector = state =>\n  state.paymentAgent.paymentAgentWithdrawal.withdrawalList;\nexport const paymentAgentTransferListSelector = state =>\n  state.paymentAgent.paymentAgentTransfer.transferList;\nexport const paymentAgentsListSelector = state =>\n  state.paymentAgent.paymentAgent.publicAgentsList;\nexport const paymentAgentsLoadingSelector = state =>\n  state.paymentAgent.isLoading;\nexport const countriesSelector = state =>\n  state.paymentAgent.paymentAgent.countries;\n","import React from 'react';\n\nconst InputError = ({ errorText, position = 'flex-start' }) => {\n  return (\n    <p\n      className=\"error-text\"\n      style={{ display: 'flex', justifyContent: position }}\n    >\n      <span className=\"error-text__icon\">\n        <svg\n          className=\"fill\"\n          width=\"20\"\n          height=\"16\"\n          viewBox=\"0 0 20 16\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 5.74986V8.5M10 11.4999H10.009M3.79425 15H16.2057C17.5852 15 18.4469 13.5414 17.7572 12.375L11.5514 1.87479C10.8617 0.708402 9.13829 0.708402 8.44856 1.87479L2.24282 12.375C1.55309 13.5414 2.4148 15 3.79425 15Z\"\n            stroke=\"#FD5353\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      </span>\n      <span>{errorText}</span>\n    </p>\n  );\n};\n\nexport default InputError;\n","import React from 'react';\n\nconst EmptyImage = ({\n  width = '100%',\n  height = '100%',\n  position = 'center',\n  radius = 40,\n  imageText = 'No image',\n  textSize = 16,\n}) => {\n  return (\n    <div style={{ display: 'flex', justifyContent: position, width: '100%' }}>\n      <p\n        style={{\n          background: 'rgb(214, 214, 214)',\n          width,\n          height,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: `${radius}px`,\n        }}\n      >\n        <span style={{ fontSize: `${textSize}px` }}>No image</span>\n      </p>\n    </div>\n  );\n};\n\nexport default EmptyImage;\n","import React from 'react';\nimport L from 'i18n-react';\n\nconst SuccessUploadImg = () => {\n  return (\n    <div className=\"d-flex profile-photo__status\">\n      <p className=\"status-item status-item--success\">\n        {L.translate(\n          'Pages.Users.PaymentAgent.EditPaymentAgent.SuccessUploadImg.item1',\n        )}\n        <span className=\"d-flex status-item__icon status-item__icon--right\">\n          <svg\n            className=\"fill\"\n            width=\"13\"\n            height=\"10\"\n            viewBox=\"0 0 13 10\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              clipRule=\"evenodd\"\n              d=\"M11.9986 1.07798C12.155 1.23426 12.2428 1.4462 12.2428 1.66718C12.2428 1.88815 12.155 2.10009 11.9986 2.25637L5.32601 8.92332C5.16959 9.07955 4.95748 9.16732 4.73631 9.16732C4.51515 9.16732 4.30303 9.07955 4.14662 8.92332L0.810307 5.58984C0.658373 5.43267 0.574303 5.22216 0.576203 5.00365C0.578104 4.78514 0.665823 4.57612 0.820468 4.42161C0.975113 4.2671 1.18431 4.17945 1.403 4.17755C1.6217 4.17566 1.83238 4.25965 1.98969 4.41146L4.73631 7.15574L10.8192 1.07798C10.9757 0.921751 11.1878 0.833984 11.4089 0.833984C11.6301 0.833984 11.8422 0.921751 11.9986 1.07798Z\"\n              fill=\"#3DD598\"\n            />\n          </svg>\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default SuccessUploadImg;\n","import React from 'react';\nimport L from 'i18n-react';\n\nconst UploadBtn = ({ setBlob }) => {\n  return (\n    <div className=\"upload-btn\">\n      <input\n        type=\"file\"\n        className=\"upload-btn__file\"\n        accept=\"image/png, image/jpeg\"\n        onChange={e => setBlob(e)}\n      />\n\n      <p className=\"d-flex upload-btn__text\">\n        {L.translate(\n          'Pages.Users.PaymentAgent.EditPaymentAgent.UploadBtn.item1',\n        )}\n        <span className=\"d-flex upload-btn__text-icon\">\n          <svg\n            width=\"20\"\n            height=\"20\"\n            viewBox=\"0 0 20 20\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M20 18.75C20 19.4404 19.4404 20 18.75 20H1.25C0.559649 20 0 19.4404 0 18.75C0 18.0596 0.559649 17.5 1.25 17.5H18.75C19.4404 17.5 20 18.0596 20 18.75ZM9.11613 14.7902C9.36024 15.0343 9.68008 15.1563 10 15.1563C10.3198 15.1563 10.6398 15.0342 10.8839 14.7902L15.3127 10.3614C15.8009 9.8732 15.8009 9.08176 15.3127 8.59359C14.8245 8.10543 14.0331 8.10543 13.5449 8.59359L11.25 10.8885V1.25C11.25 0.559648 10.6904 0 10 0C9.30965 0 8.75 0.559648 8.75 1.25V10.8885L6.45508 8.59359C5.96692 8.10543 5.17547 8.10543 4.68731 8.59359C4.19914 9.08176 4.19914 9.8732 4.68731 10.3614L9.11613 14.7902Z\"\n              fill=\"white\"\n            />\n          </svg>\n        </span>\n      </p>\n    </div>\n  );\n};\n\nexport default UploadBtn;\n"],"sourceRoot":""}