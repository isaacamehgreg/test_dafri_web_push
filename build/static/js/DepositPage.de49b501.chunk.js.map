{"version":3,"sources":["components/Base/Modals/Users/Deposit/BankPaymentDetails/index.jsx","components/Pages/Users/Deposit/SupportedCurrency/SupportedCurrencyItem/index.jsx","components/Pages/Users/Deposit/SupportedCurrency/SortButton/index.jsx","components/Pages/Users/Deposit/SupportedCurrency/index.jsx","components/Pages/Users/Deposit/BankPaymentMethod/index.jsx","components/Pages/Users/Deposit/FiatPaymentMethod/index.jsx","components/Pages/Users/Deposit/PaymentMethods/index.jsx","components/Pages/Users/Deposit/TransferCheck/index.jsx","components/Pages/Users/Deposit/InputAction/index.jsx","components/Pages/Users/Deposit/CopyToClipboard/index.jsx","components/Base/Modals/Users/Deposit/ThanksForDeposit/index.jsx","components/Base/Modals/Users/Deposit/Circle/CircleComponent/CardNumber/index.jsx","components/Base/Modals/Users/Deposit/Circle/CircleComponent/CardMonth/CardMonth.jsx","components/Base/Modals/Users/Deposit/Circle/CircleComponent/CardYear/index.jsx","components/Base/Modals/Users/Deposit/Circle/CircleComponent/CardCVV/index.jsx","components/Base/Modals/Users/Deposit/Circle/CircleComponent/index.jsx","components/Base/Modals/Users/Deposit/Circle/index.jsx","components/Base/Modals/Users/Deposit/AgreeAndTerms/index.jsx","components/HOC/SocketOzow.jsx","components/HOC/SocketDafriBank.jsx","components/Pages/Users/Deposit/Fiat/index.jsx","components/Pages/Users/Deposit/DepositAdress/index.jsx","components/Pages/Users/Deposit/QrCode/index.jsx","components/Pages/Users/Deposit/TransferNetwork/index.jsx","components/Pages/Users/Deposit/Crypto/index.jsx","components/Pages/Users/Deposit/DepositHistory/DepositRow/index.jsx","components/Pages/Users/Deposit/DepositHistory/DepositCryptoHistory/index.jsx","components/Pages/Users/Deposit/DepositHistory/DepositFiatHistory/index.jsx","components/Pages/Users/Deposit/DepositHistory/index.jsx","components/Pages/Users/Deposit/index.jsx","components/Base/InputError/index.jsx"],"names":["BankPaymentDetails","bankInfo","country","bank_name","account_hold","branch_code","account_type","account_number","className","onClick","closeModal","src","closeIcon","alt","L","translate","type","SupportedCurrencyItem","id","asset","balance","frozen_balance","total","selected","onSelectItem","networks","network","assetID","name","code","publicAdress","public_address","img_path","style","textTransform","SortButton","sort","order","toggleSort","useState","thisSort","setThisSort","e","target","dataset","width","height","viewBox","fill","xmlns","d","SupportedCurrency","isLoading","title","labels","data","activeEl","setSort","search","setSearch","setWallets","useMemo","sortingColumnTable","setState","Loader","length","EmptyTable","text","filterWallets","filter","currency","toLowerCase","includes","map","title1","title2","title3","title4","placeholder","value","onChange","padding","textAlign","BankPaymentMethod","props","manual_bank","onSelect","FiatPaymentMethod","name_method","selectedMethod","split","join","toUpperCase","PaymentMethods","paymentTypes","filteredBanks","setFilteredBanks","filteredAnotherPaymentMethods","setFilteredAnotherPaymentMethods","dropdown","setDropdown","dropdownRef","useRef","handleOutsideClick","current","contains","classList","getSelectedMethod","result","nameOfSelectedMethod","bankMethodClasses","classNames","active","onSelectInterceptor","item","useEffect","document","body","addEventListener","removeEventListener","banks","method","anotherMethods","ref","method1","arrowDown","bank","TransferCheck","isFiat","checkBoxRef","checked","htmlFor","to","routes","Static","DepositInstructions","path","InputAction","withBank","handleWithBank","copyData","copyMessage","btnText","onCopy","zIndex","window","navigator","clipboard","writeText","notification","timeOut","message","CopyToClipboard","adress","readOnly","ThanksForDeposit","logo","color","CardNumber","monthRef","onValidCardNumber","isValidateField","cardValue","setCardValue","cardInfo","setCardInfo","error","errorText","cardError","setCardError","handleCardChange","replacedValue","trim","replace","validateCardNumber","cardType","focus","select","autoComplete","onBlur","InputError","CardMonth","yearRef","yearInfo","onValidMonth","monthValue","setMonthValue","monthError","setMonthError","handleMonthChange","validateCardMonth","maxLength","CardYear","cvvRef","onValidYear","yearValue","setYearValue","yearError","setYearError","handleYearChange","validateCardYear","CardCVV","onValidCVV","cvvValue","setCVVValue","cvvError","setCVVError","isAmericanExpress","card","handleCVVChange","validateCardCVV","Circle","amount","dispatch","useDispatch","circlePublicKey","useSelector","circlePublicKeySelector","cardMonthRef","React","createRef","cardYearRef","cardCVVRef","initState","setIsValidateField","cardNumber","setCardNumber","cardMonth","setMonthInfo","cardYear","setYearInfo","initialValues","exp_month","exp_year","email","phone_number","city","line1","district","postal_code","idempotency_key","uuidv4","session_id","validateCardFields","handleSubmit","values","a","publicKey","fetchEncryptedData","encryptedCard","types","CREATE_CIRCLE_CARD_START","payload","key_id","keyId","encrypted_data","cardData","cvvData","GET_CIRCLE_PUBLIC_KEY_START","onSubmit","setFieldValue","resetForm","handleChange","component","Input","validate","requiredValue","disabled","validateEmail","validatePhone","CircleModal","token","tokenSelector","userSelector","Auth","Login","AgreeAndTerms","onAgree","openModal","SocketOzow","children","isSocketOpen","socketSelector","SocketDafriBank","fiatLabels","DepositFiat","fiatData","mobileData","isActive","referenceNumber","referenceNumberSelector","assetPayments","paymentMethodsSelector","paymentLink","paymentLinkSelector","agree","toggleAgree","selectedCurrency","setSelectedCurrency","allPaymentTypes","setAllPaymentTypes","selectedType","setSelectedType","selectedAgent","setSelectedAgent","deposit","match","newWindow","open","opener","Object","status","form","querySelector","submit","dafriFormEndabled","setDafriFormEnabled","paymentType","assetId","MAKE_DAFRIBANK_PAYMENT_START","asset_id","payment_type","PaymentAgent","selectedPaymentAgent","handleSelectedPaymentAgent","SEND_BANK_INFO_TO_EMAIL_START","bank_id","manual_bank_id","CREATE_OZOW_REQUEST_START","console","log","undefined","CREATE_BANK_REQUEST_START","handleSelectMethod","errors","validateField","isDisabledBtn","checkDisabled","textCurrency","handleChangeAmount","InputWithOnChange","requiredPositiveNumber","DafriPayForm","formData","onLoadCallback","DepositAdress","QrCode","TransferNetwork","getCryptoData","tab","setTab","tabItem","i","network_id","network_name","TransferNetworkItem","cryptoLabels","DepositCrypto","cryptoData","generatedCoinData","walletSelector","selectedItem","setSelectedItem","GENERATE_COIN_ADRESS_START","walletID","scrollIntoView","block","behavior","address_qr","address","DepositRow","created_at","reference","asset_name","amount_fee","fee","refNumber","dates","Date","date","moment","format","DepositCryptoHistory","refTable","wallet","setData","currentPage","setCurrentPage","hasMoreItems","setHasMoreItems","cryptoHistory","cryptoHistoryLastPage","last_page","CLEAR_ALL_HISTORY_START","GET_CRYPTO_DEPOSIT_HISTORY_START","params","currency_type","current_page","per_page","prev","InfiniteScrollList","handleNext","hasMore","parentRef","DepositFiatHistory","fiatHistory","fiatHistoryLastPage","GET_FIAT_DEPOSIT_HISTORY_START","DepositHistory","tableID","TableHistoryHead","Deposit","activeTab","setActiveTab","walletsList","totalUSD","handleSetTab","num","cryptoWallets","fiatWallets","location","state","GET_PAYMENT_METHODS_START","user","isMobileApp","URLSearchParams","useHistory","get","isMobileToken","mobileAmount","mobileAssetID","mobilePaymentType","fillRule","clipRule","position","display","justifyContent","stroke","strokeWidth","strokeLinecap","strokeLinejoin"],"mappings":"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","file":"static/js/DepositPage.de49b501.chunk.js","sourcesContent":["import React from 'react';\nimport L from 'i18n-react';\nimport { closeModal } from '../../../../Modal';\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\n\nconst BankPaymentDetails = ({ bankInfo }) => {\n  const {\n    country,\n    bank_name,\n    account_hold,\n    branch_code,\n    account_type,\n    account_number,\n  } = bankInfo;\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"Close\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <p className=\"modal-title\">\n          {L.translate('Base.Modals.Users.Deposit.BankPaymentDetails.item1')}\n        </p>\n      </div>\n\n      <div className=\"modal-body\">\n        <div className=\"modal-payment-info\">\n          <div className=\"row\">\n            <div className=\"col-md-6\">\n              <div className=\"modal-detail\">\n                <p className=\"modal-detail__name\">\n                  {L.translate(\n                    'Base.Modals.Users.Deposit.BankPaymentDetails.item2',\n                  )}\n                </p>\n\n                <p className=\"modal-detail__value\">{`${bank_name} ${country}`}</p>\n              </div>\n            </div>\n\n            <div className=\"col-md-6\">\n              <div className=\"modal-detail\">\n                <p className=\"modal-detail__name\">\n                  {L.translate(\n                    'Base.Modals.Users.Deposit.BankPaymentDetails.item3',\n                  )}\n                </p>\n\n                <p className=\"modal-detail__value\">{branch_code || '-'}</p>\n              </div>\n            </div>\n\n            <div className=\"col-md-6\">\n              <div className=\"modal-detail\">\n                <p className=\"modal-detail__name\">\n                  {L.translate(\n                    'Base.Modals.Users.Deposit.BankPaymentDetails.item4',\n                  )}\n                </p>\n                <p className=\"modal-detail__value\">{account_type || '-'}</p>\n              </div>\n            </div>\n\n            <div className=\"col-md-6\">\n              <div className=\"modal-detail\">\n                <p className=\"modal-detail__name\">\n                  {L.translate(\n                    'Base.Modals.Users.Deposit.BankPaymentDetails.item5',\n                  )}\n                </p>\n                <p className=\"modal-detail__value\">{account_hold || '-'}</p>\n              </div>\n            </div>\n\n            <div className=\"col-md-6\">\n              <div className=\"modal-detail\">\n                <p className=\"modal-detail__name\">\n                  {L.translate(\n                    'Base.Modals.Users.Deposit.BankPaymentDetails.item6',\n                  )}\n                </p>\n                <p className=\"modal-detail__value\">{account_number || '-'}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"form-submit \">\n          <button\n            className=\"button button--wider\"\n            type=\"button\"\n            onClick={closeModal}\n          >\n            {L.translate('Base.Modals.Users.Deposit.BankPaymentDetails.item7')}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BankPaymentDetails;\n","import React from 'react';\n\nconst SupportedCurrencyItem = ({\n  id,\n  asset,\n  balance,\n  frozen_balance,\n  total,\n  selected,\n  onSelectItem,\n  networks,\n  network,\n}) => {\n  const onSelect = () =>\n    onSelectItem({\n      id,\n      assetID: asset.id,\n      type: asset.type,\n      name: asset.name,\n      code: asset.code,\n      network,\n      networks,\n      balance,\n      publicAdress: asset?.public_address,\n    });\n\n  return (\n    <div className={`tr ${selected ? 'selected' : ''}`} onClick={onSelect}>\n      <div className=\"td\">\n        <div className=\"coin-card\">\n          <div className=\"coin-card__img\">\n            <img src={asset?.img_path} alt=\"\" />\n          </div>\n\n          <div className=\"coin-card__info\">\n            <p\n              className=\"coin-card__info-name\"\n              style={{ textTransform: 'uppercase' }}\n            >\n              {asset?.code}\n            </p>\n            <p className=\"coin-card__info-text\">{asset?.name}</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"td\">\n        <p className=\"table-value\">{total}</p>\n      </div>\n\n      <div className=\"td\">\n        <p className=\"table-value\">{balance}</p>\n      </div>\n\n      <div className=\"td\">\n        <p className=\"table-value\">{frozen_balance}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SupportedCurrencyItem;\n","import React, { useState } from 'react';\n\nconst SortButton = ({ sort, order, toggleSort }) => {\n  const [thisSort, setThisSort] = useState(sort?.sort || 'asc');\n\n  const thisToggleSort = e => {\n    if (e?.target?.dataset?.id !== 'search') {\n      setThisSort(thisSort === 'asc' ? 'desc' : 'asc');\n      toggleSort({ sort: thisSort === 'asc' ? 'desc' : 'asc', order });\n    }\n  };\n\n  return (\n    <div\n      className=\"td-sort\"\n      onClick={thisToggleSort}\n      data-order={order}\n      data-sort={thisSort}\n    >\n      <button type=\"button\">\n        <svg\n          className=\"fill\"\n          width=\"10\"\n          height=\"7\"\n          viewBox=\"0 0 10 7\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M5 0.857422L0 6.21456H10L5 0.857422Z\" fill=\"#969696\" />\n        </svg>\n      </button>\n\n      <button type=\"button\">\n        <svg\n          className=\"fill\"\n          width=\"10\"\n          height=\"7\"\n          viewBox=\"0 0 10 7\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M5 6.14307L10 0.785924L2.37568e-06 0.785924L5 6.14307Z\"\n            fill=\"#969696\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default SortButton;\n","import React, { useMemo, useState } from 'react';\nimport L from 'i18n-react';\nimport SupportedCurrencyItem from './SupportedCurrencyItem';\nimport SortButton from './SortButton';\nimport Loader from '../../../../Base/Loader';\nimport { sortingColumnTable } from '../../../../../services/helpers';\nimport EmptyTable from '../../../../Base/EmptyTable';\n\nconst SupportedCurrency = ({\n  isLoading,\n  title,\n  labels,\n  data,\n  activeEl,\n  onSelectItem,\n}) => {\n  const [sort, setSort] = useState({ sort: 'desc', order: 'name' });\n  const [search, setSearch] = useState('');\n  const [wallets, setWallets] = useState([]);\n\n  useMemo(\n    () => sortingColumnTable({ sort, data, setState: setWallets }),\n    [sort, data],\n  );\n\n  // Check data\n  if (isLoading) return <Loader />;\n  if (!data || !data.length)\n    return (\n      <EmptyTable\n        text={L.translate('Pages.Users.Deposit.SupportedCurrency.item1')}\n      />\n    );\n\n  const toggleSort = e => {\n    const { order, sort } = e;\n    setSort({ order, sort });\n  };\n\n  const filterWallets = data\n    .filter(currency => {\n      if (search !== '') {\n        return (\n          currency?.asset?.name\n            ?.toLowerCase()\n            .includes(search?.toLowerCase()) ||\n          currency?.asset?.code?.toLowerCase().includes(search?.toLowerCase())\n        );\n      }\n      return true;\n    })\n    .map(currency => (\n      <SupportedCurrencyItem\n        key={currency.asset.id}\n        onSelectItem={onSelectItem}\n        selected={activeEl === currency.asset.id}\n        {...currency}\n      />\n    ));\n\n  const handleSearchValue = e => {\n    setSearch(e.target.value.toLowerCase());\n  };\n\n  const [title1, title2, title3, title4] = labels;\n\n  return (\n    <>\n      <div className=\"transfer-panel\">\n        <p className=\"item-title item-title--bigger\">{title}</p>\n\n        <div className=\"transfer-search\">\n          <div className=\"field-wrap\">\n            <input\n              type=\"text\"\n              className=\"input input--icon-right\"\n              placeholder={L.translate(\n                'Pages.Users.Deposit.SupportedCurrency.item3',\n              )}\n              value={search}\n              onChange={handleSearchValue}\n            />\n\n            <span className=\"field-icon\">\n              <svg\n                className=\"fill\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 20 20\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M8.04938 16.0928C9.83702 16.0928 11.5735 15.4963 12.9838 14.3977L18.3045 19.7191C18.7019 20.103 19.3353 20.092 19.7192 19.6945C20.0936 19.3067 20.0936 18.6919 19.7192 18.3042L14.3985 12.9828C17.1243 9.47344 16.4895 4.41858 12.9807 1.69241C9.47196 -1.03376 4.41791 -0.398932 1.69215 3.11039C-1.03361 6.61971 -0.398872 11.6746 3.10992 14.4007C4.52252 15.4983 6.26058 16.0937 8.04938 16.0928ZM3.77429 3.77179C6.13538 1.4103 9.96347 1.41025 12.3246 3.7717C14.6857 6.13315 14.6858 9.96181 12.3247 12.3233C9.9636 14.6848 6.13551 14.6848 3.77438 12.3234C3.77434 12.3234 3.77434 12.3234 3.77429 12.3233C1.4132 9.97906 1.39929 6.16436 3.74318 3.80291C3.75354 3.79251 3.76389 3.78215 3.77429 3.77179Z\"\n                  fill=\"#969696\"\n                />\n              </svg>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"coins-table-box\">\n        <div className=\"coin-table\">\n          <div className=\"table-header\">\n            <div className=\"tr\">\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">{title1}</div>\n\n                <SortButton toggleSort={toggleSort} sort={sort} order=\"name\" />\n              </div>\n\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">\n                  {title2}\n\n                  <SortButton toggleSort={toggleSort} sort={sort} order=\"id\" />\n                </div>\n              </div>\n\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">\n                  {title3}\n\n                  <SortButton\n                    toggleSort={toggleSort}\n                    sort={sort}\n                    order=\"balance\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">\n                  {title4}\n\n                  <SortButton\n                    toggleSort={toggleSort}\n                    sort={sort}\n                    order=\"frozen_balance\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"table-body\">\n            {filterWallets.length ? (\n              filterWallets\n            ) : (\n              <p style={{ padding: '20px 0', textAlign: 'center' }}>\n                {L.translate('Pages.Users.Deposit.SupportedCurrency.item2')}\n              </p>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SupportedCurrency;\n","import React from 'react';\n\nconst BankPaymentMethod = props => {\n  const {\n    manual_bank: { bank_name, country },\n    img_path,\n    onSelect,\n  } = props;\n\n  return (\n    <div className=\"method-item\" onClick={() => onSelect(props)}>\n      <div className=\"method-item__logo\">\n        <img src={img_path} alt=\"\" />\n      </div>\n\n      <button className=\"method-btn\" type=\"button\">\n        {bank_name} {country}\n      </button>\n    </div>\n  );\n};\n\nexport default BankPaymentMethod;\n","import React from 'react';\n\nconst FiatPaymentMethod = props => {\n  const { img_path, name_method, selectedMethod, onClick } = props;\n\n  return (\n    <div className=\"methods-col\">\n      <div\n        className={`method ${selectedMethod === name_method ? 'selected' : ''}`}\n      >\n        <div className=\"method-item\" onClick={() => onClick(props)}>\n          <div className=\"method-item__logo\">\n            <img src={img_path} alt=\"\" />\n          </div>\n\n          <button className=\"method-btn\" type=\"button\">\n            {name_method.split('_').join(' | ').toUpperCase()}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FiatPaymentMethod;\n","import React, { useEffect, useRef, useState } from 'react';\nimport L from 'i18n-react';\nimport classNames from 'classnames';\nimport BankPaymentMethod from '../BankPaymentMethod';\nimport FiatPaymentMethod from '../FiatPaymentMethod';\n// images\nimport method1 from '../../../../../styles/img/method1.png';\nimport arrowDown from '../../../../../styles/img/arrow-down.svg';\n\nconst PaymentMethods = ({ paymentTypes, onSelect, selectedMethod }) => {\n  // Filtered logic\n  const [filteredBanks, setFilteredBanks] = useState([]);\n  const [filteredAnotherPaymentMethods, setFilteredAnotherPaymentMethods] =\n    useState([]);\n\n  // Dropdown logic\n  const [dropdown, setDropdown] = useState(false);\n  const dropdownRef = useRef(null);\n\n  const handleSetDropdown = () => {\n    if (dropdown) {\n      setDropdown(false);\n    } else {\n      setDropdown(true);\n    }\n  };\n\n  const handleOutsideClick = e => {\n    if (\n      dropdownRef.current &&\n      !dropdownRef.current.contains(e.target) &&\n      dropdownRef.current.classList.contains('bank')\n    ) {\n      setDropdown(false);\n    }\n  };\n\n  // Select bank method logic\n  const getSelectedMethod = () => {\n    let result;\n\n    if (selectedMethod) {\n      const name = selectedMethod?.name_method;\n\n      if (name === null) {\n        result = 'bank';\n      } else if (\n        name === 'ozow' ||\n        name === 'payment agent' ||\n        name === 'visa_mastercard' ||\n        name === 'DafriBank ePay'\n      ) {\n        result = name;\n      } else {\n        result = false;\n      }\n    }\n\n    return result;\n  };\n\n  const nameOfSelectedMethod = getSelectedMethod();\n\n  const bankMethodClasses = classNames('method bank', {\n    active: dropdown,\n    selected: nameOfSelectedMethod === 'bank',\n  });\n\n  // onSelect interceptor\n  const onSelectInterceptor = item => {\n    setDropdown(false);\n    onSelect(item);\n  };\n\n  // Dropdown useEffect\n  useEffect(() => {\n    getSelectedMethod();\n    document.body.addEventListener('click', handleOutsideClick, true);\n\n    return () => {\n      document.body.removeEventListener('click', handleOutsideClick, true);\n    };\n  }, []);\n\n  // Filtered useEffect\n  useEffect(() => {\n    if (paymentTypes) {\n      const banks = paymentTypes?.filter(method => method.name_method === null);\n\n      const anotherMethods = paymentTypes?.filter(\n        method => method.name_method !== null,\n      );\n\n      setFilteredBanks(banks);\n      setFilteredAnotherPaymentMethods(anotherMethods);\n    }\n  }, [paymentTypes]);\n\n  return (\n    <>\n      {paymentTypes && (\n        <div className=\"transfer-block\">\n          <p className=\"item-title item-title--bigger my-balance__title\">\n            {L.translate('Pages.Users.Deposit.PaymentMethods.item1')}\n          </p>\n\n          <div className=\"methods-row\">\n            {filteredBanks && !!filteredBanks.length && (\n              <div className=\"methods-col\">\n                <div\n                  className={bankMethodClasses}\n                  ref={dropdownRef}\n                  onClick={handleSetDropdown}\n                >\n                  <div className=\"method-item\">\n                    <div className=\"method-item__logo\">\n                      <img\n                        src={\n                          selectedMethod?.manual_bank?.bank_name\n                            ? selectedMethod?.img_path\n                            : method1\n                        }\n                        alt=\"\"\n                      />\n                    </div>\n\n                    <button className=\"method-btn\">\n                      {selectedMethod?.manual_bank?.bank_name ||\n                        L.translate('Pages.Users.Deposit.PaymentMethods.item2')}\n                      <span className=\"d-flex method-btn__arrow\">\n                        <img src={arrowDown} alt=\"\" />\n                      </span>\n                    </button>\n                  </div>\n\n                  {dropdown && (\n                    <div className=\"method-drop\">\n                      <div className=\"method-drop__inner\">\n                        {filteredBanks.map(bank => (\n                          <BankPaymentMethod\n                            key={bank.id}\n                            onSelect={onSelectInterceptor}\n                            {...bank}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n\n            {!!filteredAnotherPaymentMethods.length &&\n              filteredAnotherPaymentMethods.map(method => (\n                <FiatPaymentMethod\n                  key={method.id}\n                  onClick={onSelectInterceptor}\n                  selectedMethod={nameOfSelectedMethod}\n                  {...method}\n                />\n              ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PaymentMethods;\n","import React from 'react';\nimport L from 'i18n-react';\nimport { Link } from 'react-router-dom';\nimport routes from '../../../../../routes';\n\nconst TransferCheck = ({ onChange, text, isFiat, checkBoxRef, value }) => {\n  return (\n    <div className=\"transfer-check\" ref={checkBoxRef}>\n      <div className=\"check-wrap\">\n        <input\n          type=\"checkbox\"\n          className=\"new-check new-check--type2\"\n          id=\"transfer\"\n          name=\"transfer\"\n          onChange={onChange}\n          checked={value}\n        />\n\n        <label htmlFor=\"transfer\">\n          <span className=\"check-icon\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 26 26\"\n              width=\"26\"\n              height=\"26\"\n              fill=\"#fff\"\n            >\n              <path d=\"M 22.566406 4.730469 L 20.773438 3.511719 C 20.277344 3.175781 19.597656 3.304688 19.265625 3.796875 L 10.476563 16.757813 L 6.4375 12.71875 C 6.015625 12.296875 5.328125 12.296875 4.90625 12.71875 L 3.371094 14.253906 C 2.949219 14.675781 2.949219 15.363281 3.371094 15.789063 L 9.582031 22 C 9.929688 22.347656 10.476563 22.613281 10.96875 22.613281 C 11.460938 22.613281 11.957031 22.304688 12.277344 21.839844 L 22.855469 6.234375 C 23.191406 5.742188 23.0625 5.066406 22.566406 4.730469 Z\" />\n            </svg>\n          </span>\n\n          <span>\n            {`${text} `}\n\n            {isFiat && (\n              <Link to={routes.Static.DepositInstructions.path}>\n                {L.translate('Pages.Users.Deposit.TransferCheck.item1')}{' '}\n              </Link>\n            )}\n          </span>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default TransferCheck;\n","import React from 'react';\nimport L from 'i18n-react';\nimport notification from '../../../../../services/notification';\n\nconst InputAction = ({\n  withBank,\n  handleWithBank,\n  copyData,\n  copyMessage,\n  btnText,\n  onCopy,\n}) => {\n  const handleCopy = () => {\n    window.navigator.clipboard.writeText(copyData);\n    notification({\n      type: 'info',\n      timeOut: 3500,\n      message: copyMessage,\n    });\n  };\n\n  return (\n    <div\n      className={`input-action ${withBank ? 'input-action--with-bank' : null}`}\n      style={withBank ? { zIndex: '5' } : null}\n    >\n      {withBank && (\n        <button className=\"input-link\" type=\"button\" onClick={handleWithBank}>\n          {L.translate('Pages.Users.Deposit.InputAction.item1')}\n        </button>\n      )}\n\n      <button className=\"copy\" onClick={!onCopy ? handleCopy : onCopy}>\n        {btnText}\n        <span className=\"d-flex copy__icon\">\n          <svg\n            className=\"fill\"\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 16 16\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M11.4285 2.85693H1.71428C0.767509 2.85693 0 3.62444 0 4.57122V14.2855C0 15.2322 0.767509 15.9997 1.71428 15.9997H11.4285C12.3753 15.9997 13.1428 15.2322 13.1428 14.2855V4.57122C13.1428 3.62444 12.3753 2.85693 11.4285 2.85693Z\"\n              fill=\"#D7CFFF\"\n            />\n            <path\n              d=\"M14.2856 1.10692e-09H3.99992C3.05828 -3.3481e-05 2.29288 0.759507 2.28564 1.70112C2.28564 1.70571 2.28564 1.70969 2.28564 1.71428H11.4285C13.0056 1.71616 14.2837 2.99423 14.2856 4.57141V13.7143C14.2902 13.7143 14.2942 13.7143 14.2988 13.7143C15.2404 13.707 15.9999 12.9416 15.9999 12V1.71428C15.9999 0.767509 15.2324 1.10692e-09 14.2856 1.10692e-09Z\"\n              fill=\"#D7CFFF\"\n            />\n          </svg>\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default InputAction;\n","import React, { useState } from 'react';\nimport InputAction from '../InputAction';\n\nconst CopyToClipboard = ({\n  adress,\n  btnText = 'Copy',\n  withBank,\n  copyMessage,\n}) => {\n  const [value, setValue] = useState(adress);\n\n  return (\n    <div className=\"transfer-address\">\n      <div className=\"field-wrap\">\n        <input\n          type=\"text\"\n          className=\"input input--with-copy input--type2 input--big\"\n          value={value}\n          readOnly\n        />\n\n        <InputAction\n          withBank={withBank}\n          copyData={adress}\n          copyMessage={copyMessage}\n          btnText={btnText}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CopyToClipboard;\n","import React from 'react';\nimport L from 'i18n-react';\nimport { closeModal } from '../../../../Modal';\n\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\nimport logo from '../../../../../../styles/img/dark-logo.svg';\n\nconst ThanksForDeposit = () => {\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" type=\"button\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"Close\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <div className=\"modal-logo\">\n          <img src={logo} alt=\"\" />\n        </div>\n      </div>\n\n      <div className=\"modal-body\">\n        <div className=\"modal-text modal-text--type2 modal-text--left\">\n          <p>\n            {L.translate('Base.Modals.Users.Deposit.ThanksForDeposit.item1')}\n          </p>\n        </div>\n\n        <div className=\"modal-note\" style={{ color: '#3dd598' }}>\n          <p>\n            <strong>\n              {L.translate('Base.Modals.Users.Deposit.ThanksForDeposit.item2')}\n            </strong>{' '}\n            {L.translate('Base.Modals.Users.Deposit.ThanksForDeposit.item3')}\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ThanksForDeposit;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport InputError from '../../../../../../InputError';\nimport { validateCardNumber } from '../../../../../../../../services/validators';\n\nconst CardNumber = ({ monthRef, onValidCardNumber, isValidateField }) => {\n  const [cardValue, setCardValue] = useState('');\n  const [cardInfo, setCardInfo] = useState(null);\n  const [cardError, setCardError] = useState({\n    error: false,\n    errorText: '',\n  });\n\n  const handleCardChange = e => {\n    const {\n      target: { value },\n    } = e;\n\n    const replacedValue = value.trim().replace(/[^0-9]/g, '');\n\n    setCardValue(replacedValue);\n    validateCardNumber(replacedValue, setCardError, setCardInfo);\n  };\n\n  useEffect(() => {\n    onValidCardNumber({\n      value: !cardError.error ? cardValue : null,\n      error: cardError,\n      cardType: cardInfo,\n    });\n  }, [cardValue]);\n\n  useEffect(() => {\n    if (!cardError.error && cardValue) {\n      monthRef?.current?.focus();\n      monthRef?.current?.select();\n    }\n  }, [cardError]);\n\n  useEffect(() => {\n    if (isValidateField)\n      validateCardNumber(cardValue, setCardError, setCardInfo);\n  }, [isValidateField]);\n\n  return (\n    <div className=\"modal-field\">\n      <p className=\"field-label\">\n        {L.translate(\n          'Base.Modals.Users.Deposit.Circle.CircleComponent.CardNumber.item1',\n        )}\n      </p>\n\n      <div className={`field-wrap ${cardError.error ? 'error' : ''}`}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          autoComplete=\"cc-number\"\n          placeholder={L.translate(\n            'Base.Modals.Users.Deposit.Circle.CircleComponent.CardNumber.item2',\n          )}\n          value={cardValue}\n          onChange={handleCardChange}\n          onBlur={handleCardChange}\n        />\n      </div>\n\n      {cardError.error && (\n        <InputError\n          errorText={\n            cardError.errorText ||\n            L.translate(\n              'Base.Modals.Users.Deposit.Circle.CircleComponent.CardNumber.item3',\n            )\n          }\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CardNumber;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { validateCardMonth } from '../../../../../../../../services/validators';\nimport InputError from '../../../../../../InputError';\n\nconst CardMonth = ({\n  monthRef,\n  yearRef,\n  yearInfo,\n  onValidMonth,\n  isValidateField,\n}) => {\n  const [monthValue, setMonthValue] = useState('');\n  const [monthError, setMonthError] = useState(null);\n\n  const handleMonthChange = e => {\n    const {\n      target: { value },\n    } = e;\n\n    const replacedValue = value.trim().replace(/[^0-9]/g, '');\n\n    setMonthValue(replacedValue);\n    validateCardMonth(replacedValue, setMonthError, yearInfo);\n    onValidMonth({ value: monthValue, error: monthError });\n  };\n\n  useEffect(() => {\n    if (yearInfo && isValidateField)\n      validateCardMonth(monthValue, setMonthError, yearInfo);\n  }, [yearInfo]);\n\n  useEffect(() => {\n    if (monthValue.length === 2 && !monthError) {\n      yearRef?.current?.focus();\n      yearRef?.current?.select();\n    }\n  }, [monthValue, monthError]);\n\n  useEffect(() => {\n    if (isValidateField) validateCardMonth(monthValue, setMonthError, yearInfo);\n  }, [isValidateField]);\n\n  return (\n    <div className={`modal-field ${monthError ? 'error' : ''}`}>\n      <p className=\"field-label\">\n        {L.translate(\n          'Base.Modals.Users.Deposit.Circle.CircleComponent.CardMonth.item1',\n        )}\n      </p>\n\n      <input\n        type=\"text\"\n        ref={monthRef}\n        className=\"input\"\n        placeholder=\"XX\"\n        maxLength={2}\n        value={monthValue}\n        onChange={handleMonthChange}\n        onBlur={handleMonthChange}\n      />\n\n      {monthError && <InputError errorText={monthError} />}\n    </div>\n  );\n};\n\nexport default CardMonth;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { validateCardYear } from '../../../../../../../../services/validators';\nimport InputError from '../../../../../../InputError';\n\nconst CardYear = ({ yearRef, cvvRef, onValidYear, isValidateField }) => {\n  const [yearValue, setYearValue] = useState('');\n  const [yearError, setYearError] = useState(null);\n\n  const handleYearChange = e => {\n    const {\n      target: { value },\n    } = e;\n\n    const replacedValue = value.trim().replace(/[^0-9]/g, '');\n\n    setYearValue(replacedValue);\n    validateCardYear(replacedValue, setYearError);\n    onValidYear({ value: yearValue, error: yearError });\n  };\n\n  useEffect(() => {\n    if (yearValue.length === 2 && !yearError) {\n      cvvRef?.current?.focus();\n      cvvRef?.current?.select();\n    }\n  }, [yearValue, yearError]);\n\n  useEffect(() => {\n    if (isValidateField) validateCardYear(yearValue, setYearError);\n  }, [isValidateField]);\n\n  return (\n    <div className={`modal-field ${yearError ? 'error' : ''}`}>\n      <p className=\"field-label\">\n        {L.translate(\n          'Base.Modals.Users.Deposit.Circle.CircleComponent.CardYear.item1',\n        )}\n      </p>\n\n      <input\n        type=\"text\"\n        ref={yearRef}\n        className=\"input\"\n        placeholder=\"XX\"\n        maxLength={2}\n        value={yearValue}\n        onChange={handleYearChange}\n        onBlur={handleYearChange}\n      />\n\n      {yearError && <InputError errorText={yearError} />}\n    </div>\n  );\n};\n\nexport default CardYear;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { validateCardCVV } from '../../../../../../../../services/validators';\nimport InputError from '../../../../../../InputError';\n\nconst CardCVV = ({ cvvRef, onValidCVV, cardType, isValidateField }) => {\n  const [cvvValue, setCVVValue] = useState('');\n  const [cvvError, setCVVError] = useState(null);\n\n  const isAmericanExpress = cardType?.card?.type === 'american-express';\n\n  const handleCVVChange = e => {\n    const {\n      target: { value },\n    } = e;\n\n    const replacedValue = value.replace(/[^0-9]/g, '').trim();\n\n    setCVVValue(replacedValue);\n\n    validateCardCVV(replacedValue, setCVVError, cardType?.card?.type);\n  };\n\n  useEffect(() => {\n    onValidCVV({ value: !cvvError ? cvvValue : null, error: cvvError });\n  }, [cvvValue, cvvError]);\n\n  useEffect(() => {\n    if (isValidateField)\n      validateCardCVV(cvvValue, setCVVError, cardType?.card?.type);\n  }, [isValidateField]);\n\n  return (\n    <div className={`modal-field ${cvvError ? 'error' : ''}`}>\n      <p className=\"field-label\">\n        {L.translate(\n          'Base.Modals.Users.Deposit.Circle.CircleComponent.CardCVV.item1',\n        )}\n      </p>\n\n      <input\n        name=\"cvv\"\n        type=\"password\"\n        ref={cvvRef}\n        className=\"input\"\n        autoComplete=\"cc-csc\"\n        placeholder={isAmericanExpress ? '****' : '***'}\n        maxLength={isAmericanExpress ? 4 : 3}\n        value={cvvValue}\n        onChange={handleCVVChange}\n        onBlur={handleCVVChange}\n      />\n\n      {cvvError && <InputError errorText={cvvError} />}\n    </div>\n  );\n};\n\nexport default CardCVV;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchEncryptedData } from '../../../../../../../services/encodeCard';\nimport { closeModal } from '../../../../../Modal';\nimport CardNumber from './CardNumber';\nimport CardMonth from './CardMonth/CardMonth';\nimport CardYear from './CardYear';\nimport CardCVV from './CardCVV';\nimport { Input } from '../../../../../FormControls';\nimport {\n  requiredValue,\n  validateEmail,\n  validatePhone,\n} from '../../../../../../../services/validators';\nimport { circlePublicKeySelector } from '../../../../../../../redux/wallets/selectors';\nimport types from '../../../../../../../redux/types';\nimport closeIcon from '../../../../../../../styles/img/closeIcon.svg';\n\nconst Circle = ({ amount, assetID }) => {\n  const dispatch = useDispatch();\n  const circlePublicKey = useSelector(circlePublicKeySelector);\n\n  // Card refs\n  const cardMonthRef = React.createRef();\n  const cardYearRef = React.createRef();\n  const cardCVVRef = React.createRef();\n\n  const initState = {\n    value: null,\n    error: null,\n  };\n\n  // Is valid card on form submit\n  const [isValidateField, setIsValidateField] = useState(false);\n\n  // Card Fields\n  const [cardNumber, setCardNumber] = useState({\n    value: null,\n    error: null,\n    cardType: null,\n  });\n  const [cardMonth, setMonthInfo] = useState(initState);\n  const [cardYear, setYearInfo] = useState(initState);\n  const [cvvValue, setCVVValue] = useState(initState);\n\n  // Encrypted card number & cvv code\n\n  const initialValues = {\n    amount,\n    exp_month: '',\n    exp_year: '',\n    name: '',\n    email: '',\n    phone_number: '',\n    city: '',\n    country: '',\n    line1: '',\n    district: '',\n    postal_code: '',\n    idempotency_key: uuidv4(),\n    session_id: uuidv4(),\n  };\n\n  const validateCardFields = () => {\n    if (\n      !cardNumber.value &&\n      !cardMonth.value &&\n      !cardYear.value &&\n      !cvvValue.value\n    ) {\n      setIsValidateField(true);\n    } else {\n      setIsValidateField(false);\n    }\n  };\n\n  const handleSubmit = async values => {\n    if (\n      cardMonth.value &&\n      cardYear.value &&\n      cardNumber.value &&\n      cvvValue.value &&\n      circlePublicKey.publicKey\n    ) {\n      const encryptedCard = await fetchEncryptedData(\n        circlePublicKey,\n        cardNumber,\n        cvvValue,\n      );\n\n      dispatch({\n        type: types.CREATE_CIRCLE_CARD_START,\n        payload: {\n          ...values,\n          key_id: circlePublicKey?.keyId,\n          exp_month: +cardMonth.value,\n          exp_year: +cardYear.value + 2000,\n          encrypted_data: encryptedCard,\n        },\n        assetID,\n        cardData: cardNumber,\n        cvvData: cvvValue,\n      });\n    } else {\n      validateCardFields();\n    }\n  };\n\n  useEffect(() => {\n    dispatch({ type: types.GET_CIRCLE_PUBLIC_KEY_START });\n  }, []);\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" type=\"button\" onClick={closeModal}>\n        <img\n          src={closeIcon}\n          alt={L.translate(\n            'Base.Modals.Users.Deposit.Circle.CircleComponent.item1',\n          )}\n        />\n      </button>\n\n      <div className=\"modal-header\">\n        <p className=\"modal-title modal-title--left\">\n          {L.translate(\n            'Base.Modals.Users.Deposit.Circle.CircleComponent.item15',\n          )}\n        </p>\n      </div>\n\n      <Formik initialValues={{ ...initialValues }} onSubmit={handleSubmit}>\n        {({ setFieldValue, resetForm, handleChange, ...formik }) => {\n          return (\n            <Form className=\"modal-body\" autoComplete=\"off\">\n              <div className=\"modal-group\">\n                <p className=\"modal-group__title\">\n                  {L.translate(\n                    'Base.Modals.Users.Deposit.Circle.CircleComponent.item2',\n                  )}\n                </p>\n\n                <div className=\"modal-group__content\">\n                  <div className=\"modal-field\">\n                    <p className=\"field-label\">\n                      {L.translate(\n                        'Base.Modals.Users.Deposit.Circle.CircleComponent.item3',\n                      )}\n                    </p>\n\n                    <Field\n                      name=\"amount\"\n                      type=\"text\"\n                      className=\"input\"\n                      component={Input}\n                      placeholder={L.translate(\n                        'Base.Modals.Users.Deposit.Circle.CircleComponent.item4',\n                      )}\n                      validate={requiredValue}\n                      disabled\n                    />\n                  </div>\n\n                  <CardNumber\n                    monthRef={cardMonthRef}\n                    onValidCardNumber={setCardNumber}\n                    isValidateField={isValidateField}\n                  />\n\n                  <div className=\"row\">\n                    <div className=\"col-md-8\">\n                      <div className=\"row\">\n                        <div className=\"col-6\">\n                          <CardMonth\n                            monthRef={cardMonthRef}\n                            yearRef={cardYearRef}\n                            yearInfo={cardYear}\n                            onValidMonth={setMonthInfo}\n                            isValidateField={isValidateField}\n                          />\n                        </div>\n\n                        <div className=\"col-6\">\n                          <CardYear\n                            yearRef={cardYearRef}\n                            onValidYear={setYearInfo}\n                            cvvRef={cardCVVRef}\n                            isValidateField={isValidateField}\n                          />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"col-md-4\">\n                      <CardCVV\n                        cvvRef={cardCVVRef}\n                        onValidCVV={setCVVValue}\n                        cardType={cardNumber}\n                        isValidateField={isValidateField}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"modal-group\">\n                <p className=\"modal-group__title\">\n                  {L.translate(\n                    'Base.Modals.Users.Deposit.Circle.CircleComponent.item5',\n                  )}\n                </p>\n\n                <div className=\"modal-group__content\">\n                  <div className=\"modal-field\">\n                    <Field\n                      name=\"name\"\n                      type=\"text\"\n                      className=\"input\"\n                      component={Input}\n                      placeholder={L.translate(\n                        'Base.Modals.Users.Deposit.Circle.CircleComponent.item6',\n                      )}\n                      validate={requiredValue}\n                    />\n                  </div>\n\n                  <div className=\"modal-field modal-field--mt\">\n                    <Field\n                      name=\"email\"\n                      type=\"text\"\n                      className=\"input\"\n                      component={Input}\n                      placeholder={L.translate(\n                        'Base.Modals.Users.Deposit.Circle.CircleComponent.item7',\n                      )}\n                      validate={validateEmail}\n                    />\n                  </div>\n\n                  <div className=\"modal-field modal-field--mt\">\n                    <Field\n                      name=\"phone_number\"\n                      type=\"tel\"\n                      className=\"input\"\n                      component={Input}\n                      placeholder={L.translate(\n                        'Base.Modals.Users.Deposit.Circle.CircleComponent.item8',\n                      )}\n                      validate={validatePhone}\n                    />\n                  </div>\n\n                  <div className=\"modal-field modal-field--mt\">\n                    <Field\n                      name=\"line1\"\n                      type=\"text\"\n                      className=\"input\"\n                      component={Input}\n                      placeholder={L.translate(\n                        'Base.Modals.Users.Deposit.Circle.CircleComponent.item9',\n                      )}\n                      validate={requiredValue}\n                    />\n                  </div>\n\n                  <div className=\"modal-field modal-field--mt\">\n                    <Field\n                      name=\"city\"\n                      type=\"text\"\n                      className=\"input\"\n                      component={Input}\n                      placeholder={L.translate(\n                        'Base.Modals.Users.Deposit.Circle.CircleComponent.item10',\n                      )}\n                      validate={requiredValue}\n                    />\n                  </div>\n\n                  <div className=\"modal-field modal-field--mt\">\n                    <Field\n                      name=\"country\"\n                      type=\"text\"\n                      className=\"input\"\n                      component={Input}\n                      placeholder={L.translate(\n                        'Base.Modals.Users.Deposit.Circle.CircleComponent.item11',\n                      )}\n                      maxLength={2}\n                      validate={requiredValue}\n                    />\n                  </div>\n\n                  <div className=\"modal-field modal-field--mt\">\n                    <Field\n                      name=\"district\"\n                      type=\"text\"\n                      className=\"input\"\n                      component={Input}\n                      maxLength={2}\n                      placeholder={L.translate(\n                        'Base.Modals.Users.Deposit.Circle.CircleComponent.item12',\n                      )}\n                      validate={requiredValue}\n                    />\n                  </div>\n\n                  <div className=\"modal-field modal-field--mt\">\n                    <Field\n                      name=\"postal_code\"\n                      type=\"text\"\n                      className=\"input\"\n                      component={Input}\n                      placeholder={L.translate(\n                        'Base.Modals.Users.Deposit.Circle.CircleComponent.item13',\n                      )}\n                      validate={requiredValue}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-submit\">\n                <button\n                  className=\"button\"\n                  type=\"submit\"\n                  onClick={validateCardFields}\n                >\n                  {L.translate(\n                    'Base.Modals.Users.Deposit.Circle.CircleComponent.item14',\n                  )}\n                </button>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Circle;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {\n  tokenSelector,\n  userSelector,\n} from '../../../../../../redux/auth/selectors';\nimport routes from '../../../../../../routes';\nimport Circle from './CircleComponent';\n\nconst CircleModal = ({ amount, assetID }) => {\n  const token = useSelector(tokenSelector);\n  const user = useSelector(userSelector);\n\n  if (!user && !token) return <Redirect to={routes.Auth.Login.path} />;\n\n  return <Circle amount={amount} assetID={assetID} />;\n};\n\nexport default CircleModal;\n","import React from 'react';\nimport L from 'i18n-react';\nimport { closeModal, openModal } from '../../../../Modal';\nimport ThanksForDeposit from '../ThanksForDeposit';\nimport CircleModal from '../Circle';\n\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\nimport logo from '../../../../../../styles/img/dark-logo.svg';\n\nconst AgreeAndTerms = ({ onAgree, method, amount, assetID }) => {\n  const onAgreeInterceptor = () => {\n    onAgree();\n    closeModal();\n    if (method === null) openModal(() => <ThanksForDeposit />);\n    if (method === 'visa_mastercard')\n      openModal(() => <CircleModal amount={amount} assetID={assetID} />);\n  };\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"Close\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <div className=\"modal-logo\">\n          <img src={logo} alt=\"\" />\n        </div>\n      </div>\n\n      <div className=\"modal-body\">\n        <div className=\"modal-text modal-text--type2 modal-text--left\">\n          <p>{L.translate('Base.Modals.Users.Deposit.AgreeAndTerms.item1')}</p>\n\n          <p>{L.translate('Base.Modals.Users.Deposit.AgreeAndTerms.item2')}</p>\n\n          <p>{L.translate('Base.Modals.Users.Deposit.AgreeAndTerms.item3')}</p>\n\n          <p>{L.translate('Base.Modals.Users.Deposit.AgreeAndTerms.item4')}</p>\n\n          <p>{L.translate('Base.Modals.Users.Deposit.AgreeAndTerms.item5')}</p>\n\n          <p>{L.translate('Base.Modals.Users.Deposit.AgreeAndTerms.item6')}</p>\n\n          <p>{L.translate('Base.Modals.Users.Deposit.AgreeAndTerms.item7')}</p>\n        </div>\n\n        <div className=\"form-submit \">\n          <button\n            className=\"button button--full\"\n            type=\"button\"\n            onClick={onAgreeInterceptor}\n          >\n            {L.translate('Base.Modals.Users.Deposit.AgreeAndTerms.item8')}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AgreeAndTerms;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { socketSelector } from '../../redux/sockets/selectors';\n\nconst SocketOzow = ({ children }) => {\n  const dispatch = useDispatch();\n  const isSocketOpen = useSelector(socketSelector);\n\n  useEffect(() => {\n    if (isSocketOpen) {\n      dispatch({ type: 'SOCKET_SEND', payload: [5, `deposit`] });\n    }\n\n    return () => {\n      if (isSocketOpen) {\n        dispatch({ type: 'SOCKET_SEND', payload: [6, `deposit`] });\n      }\n    };\n  }, [isSocketOpen, dispatch]);\n  return <>{children}</>;\n};\n\nexport default SocketOzow;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { socketSelector } from '../../redux/sockets/selectors';\n\nconst SocketDafriBank = ({ children }) => {\n  const dispatch = useDispatch();\n  const isSocketOpen = useSelector(socketSelector);\n\n  useEffect(() => {\n    if (isSocketOpen) {\n      dispatch({ type: 'SOCKET_SEND', payload: [5, `dafri`] });\n    }\n\n    return () => {\n      if (isSocketOpen) {\n        dispatch({ type: 'SOCKET_SEND', payload: [6, `dafri`] });\n      }\n    };\n  }, [isSocketOpen, dispatch]);\n  return <>{children}</>;\n};\n\nexport default SocketDafriBank;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\n// Form\nimport { Formik, Form, Field } from 'formik';\nimport { InputWithOnChange } from '../../../../Base/FormControls';\nimport { requiredPositiveNumber } from '../../../../../services/validators';\n// Modals\nimport { openModal } from '../../../../Base/Modal';\nimport BankPaymentDetails from '../../../../Base/Modals/Users/Deposit/BankPaymentDetails';\n// Other page components\nimport SupportedCurrency from '../SupportedCurrency';\nimport PaymentMethods from '../PaymentMethods';\nimport TransferCheck from '../TransferCheck';\nimport CopyToClipboard from '../CopyToClipboard';\nimport InputAction from '../InputAction';\nimport AgreeAndTerms from '../../../../Base/Modals/Users/Deposit/AgreeAndTerms';\nimport DafriPayForm from '../../DafriPayForm';\nimport { referenceNumberSelector } from '../../../../../redux/auth/selectors';\nimport {\n  paymentLinkSelector,\n  paymentMethodsSelector,\n} from '../../../../../redux/wallets/selectors';\nimport types from '../../../../../redux/types';\nimport notification from '../../../../../services/notification';\nimport Circle from '../../../../Base/Modals/Users/Deposit/Circle/CircleComponent';\nimport PaymentAgent from '../../Withdraw/PaymentAgent';\nimport SocketOzow from '../../../../HOC/SocketOzow';\nimport SocketDafriBank from '../../../../HOC/SocketDafriBank';\n\n// Labels\nconst fiatLabels = [\n  L.translate('Pages.Users.Deposit.Fiat.item6'),\n  L.translate('Pages.Users.Deposit.Fiat.item7'),\n  L.translate('Pages.Users.Deposit.Fiat.item8'),\n  L.translate('Pages.Users.Deposit.Fiat.item9'),\n];\n\nconst DepositFiat = ({ fiatData, mobileData, isActive }) => {\n  const dispatch = useDispatch();\n  const referenceNumber = useSelector(referenceNumberSelector);\n  const assetPayments = useSelector(paymentMethodsSelector);\n  const paymentLink = useSelector(paymentLinkSelector);\n\n  const [agree, toggleAgree] = useState(false);\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [allPaymentTypes, setAllPaymentTypes] = useState(null);\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedAgent, setSelectedAgent] = useState(null);\n\n  // Agree logic\n  const handleToggleAgree = () => toggleAgree(!agree);\n\n  // Select currency logic\n  const handleCurrencySelect = currency => {\n    setSelectedCurrency(currency);\n    setSelectedType(null);\n  };\n\n  // Select payment method\n  const handleSelectPaymentType = item => {\n    setSelectedType(item);\n  };\n\n  // Form logic\n  const initialValues = {\n    amount: '',\n  };\n\n  const handleChangeAmount = (e, setFieldValue, validateField) => {\n    setFieldValue('amount', e.target.value.replace(/[^\\d]/gi, ''));\n    validateField('amount');\n  };\n\n  const handleSelectMethod = (values, resetForm) => {\n    switch (selectedType?.name_method?.toLowerCase()) {\n      case 'ozow':\n        dispatch({\n          type: types.CREATE_OZOW_REQUEST_START,\n          payload: values.amount,\n        });\n        break;\n\n      case 'dafribank epay':\n        dispatch({\n          type: types.MAKE_DAFRIBANK_PAYMENT_START,\n          payload: {\n            amount: values.amount,\n            asset_id: selectedCurrency.assetID,\n            payment_type: 'deposit',\n          },\n        });\n        break;\n\n      case 'visa_mastercard':\n        break;\n\n      case 'payment agent':\n        console.log('payment agent');\n        break;\n\n      case null:\n      case undefined:\n        dispatch({\n          type: types.CREATE_BANK_REQUEST_START,\n          payload: {\n            amount: values.amount,\n            asset_id: selectedCurrency.assetID,\n            bank_id: selectedType.manual_bank_id,\n          },\n        });\n        break;\n\n      default:\n        return notification({\n          type: 'error',\n          timeOut: 5000,\n          message: L.translate('Pages.Users.Deposit.Fiat.item12'),\n        });\n    }\n\n    resetForm();\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    openModal(() => (\n      <AgreeAndTerms\n        onAgree={() => handleSelectMethod(values, resetForm)}\n        method={selectedType?.name_method}\n        amount={values.amount}\n        assetID={selectedCurrency?.assetID}\n      />\n    ));\n  };\n\n  const sendBankInfoToEmail = () => {\n    dispatch({\n      type: types.SEND_BANK_INFO_TO_EMAIL_START,\n      payload: { bank_id: selectedType.manual_bank_id },\n      message: L.translate('Pages.Users.Deposit.Fiat.item11'),\n    });\n  };\n\n  useEffect(() => {\n    if (selectedCurrency && assetPayments && selectedCurrency?.assetID) {\n      const { deposit } = assetPayments[selectedCurrency?.assetID];\n      setAllPaymentTypes(deposit);\n    }\n  }, [selectedCurrency, assetPayments]);\n\n  useEffect(() => {\n    if (\n      paymentLink &&\n      typeof paymentLink === 'string' &&\n      paymentLink.match('https')\n    ) {\n      const newWindow = window.open(\n        paymentLink,\n        '_blank',\n        'noopener, noreferrer',\n      );\n      if (newWindow) newWindow.opener = null;\n    }\n\n    if (\n      paymentLink &&\n      paymentLink instanceof Object &&\n      paymentLink?.status &&\n      agree\n    ) {\n      notification({\n        type: 'success',\n        timeOut: 5000,\n        message: L.translate('Pages.Users.Deposit.Fiat.item13'),\n      });\n    }\n\n    if (\n      paymentLink &&\n      selectedType?.name_method === 'DafriBank ePay' &&\n      agree\n    ) {\n      const form = document.querySelector('#dafriform');\n      if (form) form.submit();\n    }\n  }, [paymentLink]);\n\n  // Dafribank check form mobile\n  const [dafriFormEndabled, setDafriFormEnabled] = useState(false);\n  useEffect(() => {\n    if (mobileData && paymentLink && dafriFormEndabled) {\n      const form = document.querySelector('#dafriform');\n      form.submit();\n    }\n  }, [dafriFormEndabled, paymentLink]);\n\n  useEffect(() => {\n    if (mobileData) {\n      const { amount, paymentType, assetId } = mobileData;\n\n      switch (paymentType) {\n        case 'circle':\n          openModal(() => <Circle amount={amount} assetID={assetId} />);\n          break;\n\n        case 'dafribank':\n          dispatch({\n            type: types.MAKE_DAFRIBANK_PAYMENT_START,\n            payload: {\n              amount,\n              asset_id: assetId,\n              payment_type: 'deposit',\n            },\n          });\n          break;\n\n        default:\n          return true;\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    setSelectedType(null);\n    setSelectedCurrency(null);\n  }, [isActive]);\n\n  return (\n    <>\n      {selectedType?.name_method === 'ozow' && <SocketOzow />}\n      {selectedType?.name_method === 'DafriBank ePay' && <SocketDafriBank />}\n\n      <SupportedCurrency\n        labels={fiatLabels}\n        data={fiatData}\n        title={L.translate('Pages.Users.Deposit.Fiat.item1')}\n        activeEl={selectedCurrency?.assetID}\n        onSelectItem={handleCurrencySelect}\n      />\n\n      <div className=\"transfer-block\">\n        <p className=\"item-title item-title--bigger my-balance__title\">\n          {L.translate('Pages.Users.Deposit.Fiat.item2')}\n        </p>\n\n        <CopyToClipboard\n          copyMessage={L.translate('Pages.Users.Deposit.Fiat.item3')}\n          adress={referenceNumber}\n        />\n      </div>\n\n      <PaymentMethods\n        paymentTypes={allPaymentTypes}\n        onSelect={handleSelectPaymentType}\n        selectedMethod={selectedType}\n      />\n\n      {selectedType?.name_method === 'payment agent' && (\n        <PaymentAgent\n          selectedPaymentAgent={selectedAgent}\n          handleSelectedPaymentAgent={setSelectedAgent}\n          type=\"deposit\"\n        />\n      )}\n\n      {selectedType?.name_method !== 'payment agent' && (\n        <TransferCheck\n          text={L.translate('Pages.Users.Deposit.Fiat.item10')}\n          onChange={handleToggleAgree}\n          checked={agree}\n          isFiat\n        />\n      )}\n\n      {agree && selectedType && (\n        <>\n          {!(selectedType?.name_method !== null) && (\n            <div className=\"transfer-block transfer-block--less-mt\">\n              <div className=\"selected-method\">\n                <div className=\"method method--bank-and-copy\">\n                  <div className=\"method-item \">\n                    <div className=\"method-item__logo\">\n                      <img src={selectedType?.img_path} alt=\"\" />\n                    </div>\n\n                    <div className=\"method-btn\">\n                      {selectedType?.manual_bank?.bank_name?.toUpperCase()}\n                    </div>\n                  </div>\n\n                  <InputAction\n                    withBank\n                    btnText=\"Send\"\n                    copyMessage={L.translate('Pages.Users.Deposit.Fiat.item11')}\n                    onCopy={sendBankInfoToEmail}\n                    handleWithBank={() =>\n                      openModal(() => (\n                        <BankPaymentDetails\n                          bankInfo={selectedType?.manual_bank}\n                        />\n                      ))\n                    }\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          {selectedType?.name_method !== 'payment agent' && (\n            <>\n              <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n                {({\n                  resetForm,\n                  values,\n                  handleChange,\n                  setFieldValue,\n                  errors,\n                  validateField,\n                  ...formik\n                }) => {\n                  const checkDisabled = () => {\n                    let disabled = true;\n\n                    if (values.amount > 0) {\n                      disabled = false;\n                    } else if (errors.amount) {\n                      disabled = true;\n                    }\n\n                    return disabled;\n                  };\n\n                  const isDisabledBtn = checkDisabled();\n\n                  return (\n                    <Form className=\"transfer-option\">\n                      <div className=\"transfer-amount\">\n                        <div className=\"transfer-amount__field\">\n                          <div className=\"field-wrap\">\n                            <Field\n                              type=\"text\"\n                              name=\"amount\"\n                              className=\"input input--big input--type2 input--with-currency\"\n                              placeholder={L.translate(\n                                'Pages.Users.Deposit.Fiat.item4',\n                              )}\n                              textCurrency={selectedCurrency?.code?.toUpperCase()}\n                              onChange={e =>\n                                handleChangeAmount(\n                                  e,\n                                  setFieldValue,\n                                  validateField,\n                                )\n                              }\n                              component={InputWithOnChange}\n                              validate={requiredPositiveNumber}\n                            />\n                          </div>\n                        </div>\n\n                        <div className=\"transfer-amount__btn\">\n                          <button\n                            type=\"submit\"\n                            className=\"button button--big\"\n                            disabled={isDisabledBtn ? 'disabled' : null}\n                          >\n                            {L.translate('Pages.Users.Deposit.Fiat.item5')}\n                          </button>\n                        </div>\n                      </div>\n                    </Form>\n                  );\n                }}\n              </Formik>\n            </>\n          )}\n        </>\n      )}\n\n      {paymentLink && (\n        <DafriPayForm\n          type=\"deposit\"\n          target={!mobileData}\n          formData={paymentLink}\n          onLoadCallback={setDafriFormEnabled}\n        />\n      )}\n    </>\n  );\n};\n\nexport default DepositFiat;\n","import React from 'react';\nimport L from 'i18n-react';\nimport CopyToClipboard from '../CopyToClipboard';\n\nconst DepositAdress = ({ adress, copyMessage }) => {\n  return (\n    <div className=\"transfer-address-block\">\n      <p className=\"item-title item-title--bigger\">\n        {L.translate('Pages.Users.Deposit.DepositAdress.item1')}\n      </p>\n\n      <CopyToClipboard adress={adress} copyMessage={copyMessage} />\n    </div>\n  );\n};\n\nexport default DepositAdress;\n","import React from 'react';\nimport L from 'i18n-react';\n\nconst QrCode = ({ data }) => {\n  return (\n    <div className=\"transfer-qr\">\n      <div className=\"transfer-qr__text\">\n        <p>{L.translate('Pages.Users.Deposit.QrCode.item1')}</p>\n\n        <p>{L.translate('Pages.Users.Deposit.QrCode.item2')}</p>\n      </div>\n\n      <div className=\"transfer-qr__item\">\n        <img src={data} alt=\"\" />\n      </div>\n    </div>\n  );\n};\n\nexport default QrCode;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport TransferNetworkItem from './TransferNetworkItem';\n\nconst TransferNetwork = ({ networks, getCryptoData }) => {\n  const [tab, setTab] = useState(null);\n\n  const handleTab = network => {\n    getCryptoData(network?.network_id);\n    setTab(network);\n  };\n\n  useEffect(() => {\n    if (networks && networks?.length) setTab(networks[0]);\n  }, [networks]);\n\n  return (\n    <div className=\"transfer-network\">\n      <p className=\"block-title\">\n        {L.translate('Pages.Users.Deposit.TransferNetwork.item1')}\n      </p>\n\n      <div className=\"tab tab--type2\">\n        {networks?.length &&\n          networks?.map((tabItem, i) => {\n            return (\n              <button\n                key={i}\n                className={`tab__item ${\n                  tab?.network_id === tabItem?.network_id\n                    ? 'tab__item--active'\n                    : ''\n                }`}\n                type=\"button\"\n                onClick={() => handleTab(tabItem)}\n              >\n                {tabItem?.network_name?.toUpperCase()}\n              </button>\n            );\n          })}\n      </div>\n\n      {tab && (\n        <TransferNetworkItem code={tab?.network_name} name={tab?.network_id} />\n      )}\n    </div>\n  );\n};\n\nexport default TransferNetwork;\n","import React, { useEffect, useRef, useState } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { walletSelector } from '../../../../../redux/wallets/selectors';\nimport types from '../../../../../redux/types';\nimport DepositAdress from '../DepositAdress';\nimport QrCode from '../QrCode';\nimport TransferCheck from '../TransferCheck';\nimport SupportedCurrency from '../SupportedCurrency';\nimport TransferNetwork from '../TransferNetwork';\n\nconst cryptoLabels = [\n  L.translate('Pages.Users.Deposit.Crypto.item4'),\n  L.translate('Pages.Users.Deposit.Crypto.item5'),\n  L.translate('Pages.Users.Deposit.Crypto.item6'),\n  L.translate('Pages.Users.Deposit.Crypto.item7'),\n];\n\nconst DepositCrypto = ({ isLoading, cryptoData }) => {\n  const dispatch = useDispatch();\n  const wallet = useSelector(walletSelector);\n  const { generatedCoinData } = wallet;\n\n  const [agree, toggleAgree] = useState(false);\n  const [selectedItem, setSelectedItem] = useState(null);\n\n  const checkBoxRef = useRef();\n\n  const startScroll = () =>\n    checkBoxRef.current.scrollIntoView({ block: 'center', behavior: 'smooth' });\n\n  const getCryptoData = id => {\n    if (selectedItem) {\n      dispatch({\n        type: types.GENERATE_COIN_ADRESS_START,\n        payload: {\n          walletID: selectedItem?.id,\n          network: !id ? selectedItem?.networks[0]?.network_id : id,\n        },\n      });\n      if (!id) {\n        startScroll();\n      }\n    }\n  };\n\n  const handleSelect = item => setSelectedItem(item);\n  const handleToggleAgree = () => toggleAgree(!agree);\n\n  useEffect(() => {\n    getCryptoData();\n  }, [selectedItem]);\n\n  return (\n    <>\n      <SupportedCurrency\n        isLoading={isLoading}\n        title={L.translate('Pages.Users.Deposit.Crypto.item1')}\n        labels={cryptoLabels}\n        data={cryptoData}\n        activeEl={selectedItem?.assetID}\n        onSelectItem={handleSelect}\n      />\n\n      <TransferCheck\n        text={L.translate('Pages.Users.Deposit.Crypto.item2')}\n        onChange={handleToggleAgree}\n        checkBoxRef={checkBoxRef}\n      />\n\n      {agree ? (\n        <div className=\"transfer-option\">\n          {selectedItem?.networks?.length && (\n            <TransferNetwork {...selectedItem} getCryptoData={getCryptoData} />\n          )}\n\n          {generatedCoinData ? (\n            <>\n              <QrCode data={generatedCoinData?.address_qr} />\n              <DepositAdress\n                adress={generatedCoinData?.address}\n                copyMessage={L.translate('Pages.Users.Deposit.Crypto.item3')}\n              />\n            </>\n          ) : null}\n        </div>\n      ) : null}\n    </>\n  );\n};\n\nexport default DepositCrypto;\n","import React from 'react';\nimport L from 'i18n-react';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { referenceNumberSelector } from '../../../../../../redux/auth/selectors';\n\nconst DepositRow = ({\n  created_at,\n  amount,\n  reference,\n  asset,\n  asset_name,\n  status,\n  amount_fee,\n  type,\n  fee,\n}) => {\n  const refNumber = useSelector(referenceNumberSelector);\n  const dates = new Date(created_at * 1000);\n  const date = moment(dates).format('YYYY/MM/DD HH:mm:ss');\n\n  return (\n    <div className={`tr ${type && 'grid-add-column'}`}>\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.Deposit.DepositHistory.DepositRow.item1')}\n        </div>\n        <p className=\"table-value\">{!type ? refNumber : reference}</p>\n      </div>\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.Deposit.DepositHistory.DepositRow.item2')}\n        </div>\n        <p className=\"table-value\">{date}</p>\n      </div>\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.Deposit.DepositHistory.DepositRow.item3')}\n        </div>\n        <p className=\"table-value\">\n          {amount} {asset?.code?.toUpperCase()}\n        </p>\n      </div>\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.Deposit.DepositHistory.DepositRow.item4')}\n        </div>\n        <p className=\"table-status table-status--success\">\n          {!type ? status : type}\n        </p>\n      </div>\n      {type && (\n        <div className=\"td\">\n          <p className=\"table-status table-status--success\">{status}</p>\n        </div>\n      )}\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate('Pages.Users.Deposit.DepositHistory.DepositRow.item5')}\n        </div>\n        <p className=\"table-value\">\n          {amount_fee} {fee}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DepositRow;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { walletSelector } from '../../../../../../redux/wallets/selectors';\nimport InfiniteScrollList from '../../../../../Base/InfiniteScrollList';\nimport DepositRow from '../DepositRow';\nimport types from '../../../../../../redux/types';\nimport EmptyTable from '../../../../../Base/EmptyTable';\n\nconst DepositCryptoHistory = ({ refTable }) => {\n  const dispatch = useDispatch();\n  const wallet = useSelector(walletSelector);\n\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n\n  const { cryptoHistory } = wallet;\n  const cryptoHistoryLastPage = cryptoHistory?.data?.last_page;\n\n  useEffect(() => {\n    return () => {\n      dispatch({\n        type: types.CLEAR_ALL_HISTORY_START,\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: types.GET_CRYPTO_DEPOSIT_HISTORY_START,\n      payload: {\n        params: {\n          currency_type: 'crypto',\n          current_page: currentPage,\n          per_page: 15,\n        },\n      },\n    });\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (cryptoHistory && cryptoHistory?.data?.data?.deposit?.length) {\n      setData(prev => [...prev, ...cryptoHistory?.data?.data?.deposit]);\n    }\n  }, [cryptoHistory]);\n\n  const handleNextData = () => {\n    if (cryptoHistoryLastPage) {\n      if (currentPage === cryptoHistoryLastPage) {\n        setHasMoreItems(false);\n        return;\n      }\n\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  return (\n    <div className=\"table-body\">\n      <InfiniteScrollList\n        data={data}\n        handleNext={handleNextData}\n        hasMore={hasMoreItems}\n        parentRef={refTable}\n      >\n        {data && data?.length ? (\n          data.map(item => <DepositRow key={uuidv4()} {...item} />)\n        ) : (\n          <EmptyTable\n            text={L.translate(\n              'Pages.Users.Deposit.DepositHistory.DepositCryptoHistory.item1',\n            )}\n          />\n        )}\n      </InfiniteScrollList>\n    </div>\n  );\n};\n\nexport default DepositCryptoHistory;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { walletSelector } from '../../../../../../redux/wallets/selectors';\nimport InfiniteScrollList from '../../../../../Base/InfiniteScrollList';\nimport DepositRow from '../DepositRow';\nimport types from '../../../../../../redux/types';\nimport EmptyTable from '../../../../../Base/EmptyTable';\n\nconst DepositFiatHistory = ({ refTable }) => {\n  const dispatch = useDispatch();\n  const wallet = useSelector(walletSelector);\n\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n\n  const { fiatHistory } = wallet;\n  const fiatHistoryLastPage = fiatHistory?.data?.last_page;\n\n  useEffect(() => {\n    return () => {\n      dispatch({\n        type: types.CLEAR_ALL_HISTORY_START,\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: types.GET_FIAT_DEPOSIT_HISTORY_START,\n      payload: {\n        params: {\n          type: 'deposit',\n          currency_type: 'fiat',\n          current_page: currentPage,\n          per_page: 15,\n        },\n      },\n    });\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (fiatHistory && fiatHistory?.data?.data?.length) {\n      setData(prev => [...prev, ...fiatHistory?.data?.data]);\n    }\n  }, [fiatHistory]);\n\n  const handleNextData = () => {\n    if (fiatHistoryLastPage) {\n      if (currentPage === fiatHistoryLastPage) {\n        setHasMoreItems(false);\n        return;\n      }\n\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  return (\n    <div className=\"table-body\">\n      <InfiniteScrollList\n        data={data}\n        handleNext={handleNextData}\n        hasMore={hasMoreItems}\n        parentRef={refTable}\n      >\n        {data && data?.length ? (\n          data.map(item => <DepositRow key={uuidv4()} {...item} />)\n        ) : (\n          <EmptyTable\n            text={L.translate(\n              'Pages.Users.Deposit.DepositHistory.DepositFiatHistory.item1',\n            )}\n          />\n        )}\n      </InfiniteScrollList>\n    </div>\n  );\n};\n\nexport default DepositFiatHistory;\n","import React, { useRef } from 'react';\nimport L from 'i18n-react';\nimport DepositCryptoHistory from './DepositCryptoHistory';\nimport DepositFiatHistory from './DepositFiatHistory';\nimport TableHistoryHead from '../../TableHistoryHead';\n\nconst DepositHistory = ({ isActive }) => {\n  const tableID = isActive\n    ? 'deposit-fiat-history-component-table-box'\n    : 'deposit-crypto-history-component-table-box';\n\n  return (\n    <div className=\"transfer-box\">\n      <div className=\"transfer-box__content\">\n        <div className=\"transfer-history\">\n          <p className=\"item-title item-title--bigger\">\n            {L.translate('Pages.Users.Deposit.DepositHistory.item1')}\n          </p>\n\n          <div className=\"table-box\" id={tableID}>\n            <div className=\"table table--transfer-history\">\n              <TableHistoryHead refTable={tableID} />\n\n              {!isActive ? (\n                <DepositFiatHistory refTable={tableID} />\n              ) : (\n                <DepositCryptoHistory refTable={tableID} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DepositHistory;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport routes from '../../../../routes';\nimport DepositFiat from './Fiat';\nimport DepositCrypto from './Crypto';\nimport DepositHistory from './DepositHistory';\nimport { walletSelector } from '../../../../redux/wallets/selectors';\nimport types from '../../../../redux/types';\nimport { tokenSelector, userSelector } from '../../../../redux/auth/selectors';\n\nconst Deposit = () => {\n  const dispatch = useDispatch();\n  const wallet = useSelector(walletSelector);\n\n  const [activeTab, setActiveTab] = useState(0);\n\n  const { isLoading, walletsList, totalUSD } = wallet;\n  const handleSetTab = num => setActiveTab(num);\n\n  const cryptoWallets = walletsList.filter(item => item.asset.type !== 'fiat');\n  const fiatWallets = walletsList.filter(item => item.asset.type === 'fiat');\n\n  useEffect(() => {\n    if (window.location?.state && window.location?.state?.type !== 'fiat') {\n      setActiveTab(1);\n    }\n  }, [window.location?.state]);\n\n  useEffect(() => {\n    dispatch({ type: types.GET_PAYMENT_METHODS_START });\n  }, []);\n\n  // Mobile detecting\n  const token = useSelector(tokenSelector);\n  const user = useSelector(userSelector);\n\n  const isMobileApp = new URLSearchParams(useHistory().location.search).get(\n    'app',\n  );\n  const isMobileToken = new URLSearchParams(useHistory().location.search).get(\n    'access_token',\n  );\n  const mobileAmount = new URLSearchParams(useHistory().location.search).get(\n    'amount',\n  );\n  const mobileAssetID = new URLSearchParams(useHistory().location.search).get(\n    'asset_id',\n  );\n  const mobilePaymentType = new URLSearchParams(\n    useHistory().location.search,\n  ).get('payment_type');\n\n  if (!token && !user) {\n    return <Redirect to={routes.Auth.Login.path} />;\n  }\n\n  const isMobileAppBoolean = !!(\n    isMobileApp &&\n    isMobileToken &&\n    mobileAmount &&\n    mobileAssetID &&\n    mobilePaymentType\n  );\n\n  const mobileData = isMobileAppBoolean\n    ? {\n        amount: mobileAmount,\n        paymentType: mobilePaymentType,\n        assetId: mobileAssetID,\n      }\n    : null;\n\n  return (\n    <section className=\"transfer-section\">\n      <div className=\"custom-container\">\n        <p className=\"section-title section-title--center\">\n          {L.translate('Pages.Users.Deposit.item1')}\n        </p>\n\n        <div className=\"transfer-box\">\n          <div className=\"transfer-box__content\">\n            <div className=\"transfer-top\">\n              <div className=\"my-balance\">\n                <p className=\"item-title item-title--bigger my-balance__title\">\n                  {L.translate('Pages.Users.Deposit.item2')}\n                </p>\n\n                <p className=\"my-balance__value\">${totalUSD}</p>\n              </div>\n\n              <div className=\"transfer-hint\">\n                <span className=\"transfer-hint__icon\">\n                  <svg\n                    className=\"fill\"\n                    width=\"14\"\n                    height=\"14\"\n                    viewBox=\"0 0 14 14\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      clipRule=\"evenodd\"\n                      d=\"M13.6668 7.00016C13.6668 8.76827 12.9644 10.464 11.7142 11.7142C10.464 12.9644 8.76827 13.6668 7.00016 13.6668C5.23205 13.6668 3.53636 12.9644 2.28612 11.7142C1.03588 10.464 0.333496 8.76827 0.333496 7.00016C0.333496 5.23205 1.03588 3.53636 2.28612 2.28612C3.53636 1.03588 5.23205 0.333496 7.00016 0.333496C8.76827 0.333496 10.464 1.03588 11.7142 2.28612C12.9644 3.53636 13.6668 5.23205 13.6668 7.00016ZM7.00016 4.50016C6.85374 4.50002 6.70987 4.53846 6.58304 4.6116C6.4562 4.68475 6.35087 4.79003 6.27766 4.91683C6.2248 5.01506 6.15276 5.10168 6.0658 5.17155C5.97884 5.24142 5.87874 5.29311 5.77143 5.32358C5.66412 5.35404 5.55178 5.36266 5.44108 5.3489C5.33038 5.33515 5.22357 5.29931 5.12698 5.24351C5.03039 5.1877 4.94599 5.11308 4.87877 5.02405C4.81156 4.93503 4.7629 4.83341 4.73569 4.72523C4.70847 4.61705 4.70325 4.50451 4.72034 4.39428C4.73743 4.28404 4.77647 4.17836 4.83516 4.0835C5.11034 3.60692 5.53509 3.23446 6.04352 3.02388C6.55195 2.8133 7.11565 2.77636 7.64722 2.91879C8.17878 3.06123 8.64849 3.37507 8.98351 3.81166C9.31853 4.24825 9.50014 4.78318 9.50016 5.3335C9.50031 5.85068 9.34011 6.35518 9.04163 6.77754C8.74314 7.19989 8.32106 7.51932 7.8335 7.69183V7.8335C7.8335 8.05451 7.7457 8.26647 7.58942 8.42275C7.43314 8.57903 7.22118 8.66683 7.00016 8.66683C6.77915 8.66683 6.56719 8.57903 6.41091 8.42275C6.25463 8.26647 6.16683 8.05451 6.16683 7.8335V7.00016C6.16683 6.77915 6.25463 6.56719 6.41091 6.41091C6.56719 6.25463 6.77915 6.16683 7.00016 6.16683C7.22118 6.16683 7.43314 6.07903 7.58942 5.92275C7.7457 5.76647 7.8335 5.55451 7.8335 5.3335C7.8335 5.11248 7.7457 4.90052 7.58942 4.74424C7.43314 4.58796 7.22118 4.50016 7.00016 4.50016ZM7.00016 11.1668C7.22118 11.1668 7.43314 11.079 7.58942 10.9228C7.7457 10.7665 7.8335 10.5545 7.8335 10.3335C7.8335 10.1125 7.7457 9.90052 7.58942 9.74424C7.43314 9.58796 7.22118 9.50016 7.00016 9.50016C6.77915 9.50016 6.56719 9.58796 6.41091 9.74424C6.25463 9.90052 6.16683 10.1125 6.16683 10.3335C6.16683 10.5545 6.25463 10.7665 6.41091 10.9228C6.56719 11.079 6.77915 11.1668 7.00016 11.1668Z\"\n                      fill=\"#FD5353\"\n                    />\n                  </svg>\n                </span>\n\n                <Link\n                  to={routes.Static.DepositInstructions.path}\n                  style={{ color: 'black' }}\n                >\n                  {L.translate('Pages.Users.Deposit.item3')}\n                </Link>\n              </div>\n            </div>\n\n            {!mobileData && (\n              <div className=\"switcher\">\n                <button\n                  className={`switcher__item ${!activeTab ? 'active' : ''}`}\n                  onClick={() => handleSetTab(0)}\n                >\n                  {L.translate('Pages.Users.Deposit.item4')}\n                </button>\n\n                <button\n                  className={`switcher__item ${activeTab ? 'active' : ''}`}\n                  onClick={() => handleSetTab(1)}\n                >\n                  {L.translate('Pages.Users.Deposit.item5')}\n                </button>\n              </div>\n            )}\n\n            {!activeTab ? (\n              <>\n                <DepositFiat\n                  isActive={activeTab}\n                  fiatData={fiatWallets}\n                  mobileData={mobileData}\n                />\n              </>\n            ) : (\n              <>\n                <DepositCrypto\n                  isActive={activeTab}\n                  isLoading={isLoading}\n                  cryptoData={cryptoWallets}\n                />\n              </>\n            )}\n          </div>\n        </div>\n\n        <DepositHistory isActive={activeTab} />\n      </div>\n    </section>\n  );\n};\n\nexport default Deposit;\n","import React from 'react';\n\nconst InputError = ({ errorText, position = 'flex-start' }) => {\n  return (\n    <p\n      className=\"error-text\"\n      style={{ display: 'flex', justifyContent: position }}\n    >\n      <span className=\"error-text__icon\">\n        <svg\n          className=\"fill\"\n          width=\"20\"\n          height=\"16\"\n          viewBox=\"0 0 20 16\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M10 5.74986V8.5M10 11.4999H10.009M3.79425 15H16.2057C17.5852 15 18.4469 13.5414 17.7572 12.375L11.5514 1.87479C10.8617 0.708402 9.13829 0.708402 8.44856 1.87479L2.24282 12.375C1.55309 13.5414 2.4148 15 3.79425 15Z\"\n            stroke=\"#FD5353\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      </span>\n      <span>{errorText}</span>\n    </p>\n  );\n};\n\nexport default InputError;\n"],"sourceRoot":""}