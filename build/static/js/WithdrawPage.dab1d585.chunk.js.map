{"version":3,"sources":["components/Pages/Users/Withdraw/WithdrawHistory/WithdrawRow/index.jsx","components/Pages/Users/Withdraw/WithdrawHistory/HistoryCrypto/index.jsx","components/Pages/Users/Withdraw/WithdrawHistory/HistoryFiat/index.jsx","components/Pages/Users/Withdraw/WithdrawHistory/index.jsx","components/Base/Modals/Users/Withdraw/DafriBank/index.jsx","components/Pages/Users/Withdraw/TransferCheck/index.jsx","components/Pages/Users/Withdraw/InputAction/index.jsx","components/Pages/Users/Withdraw/CopyToClipboard/index.jsx","components/Pages/Users/Withdraw/TransferLimit/index.jsx","components/Base/Modals/Users/Withdraw/SecurityChecked/index.jsx","components/Base/Modals/Users/Withdraw/BankDetails/index.jsx","components/Pages/Users/Withdraw/FiatPaymentMethod/index.jsx","components/Pages/Users/Withdraw/PaymentMethods/index.jsx","components/Pages/Users/Withdraw/Fiat/index.jsx","components/Pages/Users/Withdraw/TransferNetwork/index.jsx","components/Pages/Users/Withdraw/DropDownAddresses/index.jsx","components/Pages/Users/Withdraw/Crypto/index.jsx","components/Pages/Users/Withdraw/index.jsx","redux/users/settings/selectors.js","components/Pages/Users/Withdraw/SupportedCurrency/SortButton/index.jsx","components/Pages/Users/Withdraw/SupportedCurrency/SupportedCurrencyItem/index.jsx","components/Pages/Users/Withdraw/SupportedCurrency/index.jsx"],"names":["WithdrawRow","created_at","amount","status","fee","asset_code","asset_name","dates","Date","date","moment","format","referenceNumber","useSelector","referenceNumberSelector","className","L","translate","toUpperCase","HistoryCrypto","refTable","dispatch","useDispatch","wallet","walletSelector","useState","data","setData","currentPage","setCurrentPage","hasMoreItems","setHasMoreItems","cryptoWithdrawHistory","cryptoWithdrawHistoryLastPage","last_page","useEffect","type","types","CLEAR_ALL_HISTORY_START","GET_CRYPTO_WITHDRAW_HISTORY_START","payload","params","currency_type","current_page","per_page","length","prev","InfiniteScrollList","handleNext","hasMore","parentRef","map","item","uuidv4","EmptyTable","text","HistoryFiat","fiatWithdrawHistory","fiatWithdrawHistoryLastPage","GET_FIAT_WITHDRAW_HISTORY_START","style","textAlign","padding","WithdrawHistory","isActive","tableID","id","TableHistoryHead","DafriBankModalWithdraw","formData","onClick","closeModal","src","closeIcon","alt","onSubmit","values","MAKE_DAFRIBANK_PAYMENT_START","initialValues","account_or_email","remark","setFieldValue","errors","validateField","name","placeholder","component","Input","validate","validateEmail","rows","width","TextArea","requiredValue","TransferCheck","onChange","isFiat","checkBoxRef","checked","ref","htmlFor","xmlns","viewBox","height","fill","d","to","routes","Static","WithdrawalInstructions","path","InputAction","withBank","handleWithBank","copyData","copyMessage","zIndex","window","navigator","clipboard","writeText","notification","timeOut","message","CopyToClipboard","adress","defaultValue","readOnly","TransferLimit","toFixed","Profile","Verification","SecurityChecked","resetWithdrawFields","assetCode","walletId","debounceInputRef","settings","settingsSelector","user","userSelector","google2fa","google2fa_enabled","email","hideEmail","phoneNumber","phone","phoneConfirmed","sms_enabled","withdrawAmountInUsd","GET_WITHDRAW_AMOUNT_IN_USD_START","wallet_id","getSMSCode","operation","asset_id","GET_SMS_CODE_START","getEmailCode","GET_EMAIL_CODE_START","POST_FIAT_BANKS_WITHDRAW_START","POST_PAYMENT_AGENT_FIAT_BANKS_WITHDRAW_START","POST_CRYPTO_WITHDRAW_START","sms_code","email_code","totp","isSendBtn","sendBtnCallback","validate2FA","BankDetails","openModal","bank_name","holder_name","account_number","branch_code","routing_number","account_type","FiatPaymentMethod","props","img_path","name_method","selectedMethod","role","method1","PaymentMethods","paymentTypes","onSelect","getSelectedMethod","result","nameOfSelectedMethod","onSelectInterceptor","method","fiatLabels","WithdrawalFiat","fiatData","location","mobileData","withdrawal24","withdrawal24Selector","paymentAgentCommission","paymentAgentCommissionSelector","paymentLink","paymentLinkSelector","assetPayments","paymentMethodsSelector","selectedCurrency","setSelectedCurrency","allPaymentTypes","setAllPaymentTypes","selectedType","setSelectedType","selectedAgent","setSelectedAgent","paymentAgentUserId","user_id","agree","toggleAgree","formValue","setFormValue","currentAssetFee","setCurrentAssetFee","agentFee","setAgentFee","totalAmount","setTotalAmount","handleToggleAgree","clearPrevSelected","resetSelectedCur","useRef","handleAmountChange","e","value","handleChange","CALCULATE_PAYMENT_AGENT_COMMISSION_START","assetID","target","setTimeout","commission_rate","withdraw","withdrawal","state","Object","form","document","querySelector","submit","fee_payment_agent_percent","paymentAgentFee","getTotalAmount","paymentType","assetId","DafriBank","payment_type","dafriFormEndabled","setDafriFormEnabled","SupportedCurrency","labels","title","activeEl","onSelectItem","currency","PaymentAgent","selectedPaymentAgent","handleSelectedPaymentAgent","user_data","sumsub","resetForm","textCurrency","code","DebounceFormikInput","InputWithOnChange","isShowMaxButton","setMaxCallback","handleSetField","balance","handleSetMaxSum","requiredPositiveNumber","debounceRef","replace","handleChangeAmount","disabled","DafriPayForm","onLoadCallback","TransferNetwork","networks","setNetworkId","tab","setTab","tabItem","i","network_id","network","network_name","TransferNetworkItem","DropDownAddresses","address","index","handleSelectAddressItem","addressesStyles","addressFirstItemStyle","addressLastItemStyle","addressItemStyle","checkedStyle","cryptoLabels","arrowButtonStyle","position","right","top","bottom","addressListStyle","left","filter","borderRadius","borderTopRightRadius","borderTopLeftRadius","borderBottomRightRadius","borderBottomLeftRadius","WithdrawCrypto","isLoading","cryptoData","whitelistAddresses","whitelistAddressesSelector","settingsData","selectedItem","setSelectedItem","dropdown","setDropdown","itemAddresesList","setItemAddresesList","isValid","setIsValid","networkId","dropdownRef","withdrawalWhiteListEnabled","withdrawal_white_list_enabled","showArrowIcon","showAddressesList","handleOutsideClick","current","contains","body","addEventListener","removeEventListener","handleSelect","formRef","scrollIntoView","block","behavior","startScroll","currentAddresses","find","addresses","handleSetDropdown","setValue","currentTarget","dataset","innerRef","debounceTimeout","CHECK_USER_VALID_ADDRESS_START","handChangeleWalletAddress","autoComplete","arrowDownIcon","idx","arr","Withdraw","useLocation","walletsList","totalUSD","activeTab","setActiveTab","handleSetTab","num","cryptoWallets","asset","fiatWallets","GET_PAYMENT_METHODS_START","token","tokenSelector","isMobileApp","URLSearchParams","useHistory","search","get","isMobileToken","mobileAmount","mobileAssetID","mobilePaymentType","Auth","Login","SortButton","sort","order","toggleSort","thisSort","setThisSort","SupportedCurrencyItem","frozen_balance","total","selected","publicAdress","public_address","textTransform","showZeroBalances","isShowZeroBalances","setIsShowZeroBalances","setSort","setSearch","setWallets","useMemo","sortingColumnTable","setState","Loader","filterWallets","toLowerCase","includes","title1","title2","title3","title4"],"mappings":"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","file":"static/js/WithdrawPage.dab1d585.chunk.js","sourcesContent":["import React from 'react';\nimport L from 'i18n-react';\nimport moment from 'moment';\nimport { useSelector } from 'react-redux';\nimport { referenceNumberSelector } from '../../../../../../redux/auth/selectors';\n\nconst WithdrawRow = ({\n  created_at,\n  amount,\n  status,\n  fee,\n  asset_code,\n  asset_name,\n}) => {\n  const dates = new Date(created_at * 1000);\n  const date = moment(dates).format('YYYY/MM/DD HH:mm:ss');\n  const referenceNumber = useSelector(referenceNumberSelector);\n\n  return (\n    <div className=\"tr\">\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate(\n            'Pages.Users.Withdraw.WithdrawHistory.WithdrawRow.item1',\n          )}\n        </div>\n        <p className=\"table-value\">{referenceNumber || '-'}</p>\n      </div>\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate(\n            'Pages.Users.Withdraw.WithdrawHistory.WithdrawRow.item2',\n          )}\n        </div>\n        <p className=\"table-value\">{date}</p>\n      </div>\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate(\n            'Pages.Users.Withdraw.WithdrawHistory.WithdrawRow.item3',\n          )}\n        </div>\n        <p className=\"table-value\">\n          {amount}{' '}\n          {asset_name ? asset_name?.toUpperCase() : asset_code?.toUpperCase()}\n        </p>\n      </div>\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate(\n            'Pages.Users.Withdraw.WithdrawHistory.WithdrawRow.item4',\n          )}\n        </div>\n        <p className=\"table-status table-status--success\">{status}</p>\n      </div>\n\n      <div className=\"td\">\n        <div className=\"td-hidden-name\">\n          {L.translate(\n            'Pages.Users.Withdraw.WithdrawHistory.WithdrawRow.item5',\n          )}\n        </div>\n        <p className=\"table-value\">{fee || '0'}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default WithdrawRow;\n","import React, { useState, useEffect } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport types from '../../../../../../redux/types';\nimport { walletSelector } from '../../../../../../redux/wallets/selectors';\nimport InfiniteScrollList from '../../../../../Base/InfiniteScrollList';\nimport WithdrawRow from '../WithdrawRow';\nimport EmptyTable from '../../../../../Base/EmptyTable';\n\nconst HistoryCrypto = ({ refTable }) => {\n  const dispatch = useDispatch();\n  const wallet = useSelector(walletSelector);\n\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n\n  const { cryptoWithdrawHistory } = wallet;\n  const cryptoWithdrawHistoryLastPage = cryptoWithdrawHistory?.data?.last_page;\n\n  useEffect(() => {\n    return () => {\n      dispatch({\n        type: types.CLEAR_ALL_HISTORY_START,\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: types.GET_CRYPTO_WITHDRAW_HISTORY_START,\n      payload: {\n        params: {\n          currency_type: 'crypto',\n          current_page: currentPage,\n          per_page: 15,\n        },\n      },\n    });\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (cryptoWithdrawHistory && cryptoWithdrawHistory?.data?.data?.length) {\n      setData(prev => [...prev, ...cryptoWithdrawHistory?.data?.data]);\n    }\n  }, [cryptoWithdrawHistory]);\n\n  const handleNextData = () => {\n    if (cryptoWithdrawHistoryLastPage) {\n      if (currentPage === cryptoWithdrawHistoryLastPage) {\n        setHasMoreItems(false);\n        return;\n      }\n\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  return (\n    <div className=\"table-body\">\n      <InfiniteScrollList\n        data={data}\n        handleNext={handleNextData}\n        hasMore={hasMoreItems}\n        parentRef={refTable}\n      >\n        {data && data?.length ? (\n          data.map(item => <WithdrawRow key={uuidv4()} {...item} />)\n        ) : (\n          <EmptyTable\n            text={L.translate(\n              'Pages.Users.Withdraw.WithdrawHistory.HistoryCrypto.item1',\n            )}\n          />\n        )}\n      </InfiniteScrollList>\n    </div>\n  );\n};\n\nexport default HistoryCrypto;\n","import React, { useState, useEffect } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport types from '../../../../../../redux/types';\nimport { walletSelector } from '../../../../../../redux/wallets/selectors';\nimport InfiniteScrollList from '../../../../../Base/InfiniteScrollList';\nimport WithdrawRow from '../WithdrawRow';\n\nconst HistoryFiat = ({ refTable }) => {\n  const dispatch = useDispatch();\n  const wallet = useSelector(walletSelector);\n\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n\n  const { fiatWithdrawHistory } = wallet;\n  const fiatWithdrawHistoryLastPage = fiatWithdrawHistory?.data?.last_page;\n\n  useEffect(() => {\n    return () => {\n      dispatch({\n        type: types.CLEAR_ALL_HISTORY_START,\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch({\n      type: types.GET_FIAT_WITHDRAW_HISTORY_START,\n      payload: {\n        params: {\n          currency_type: 'fiat',\n          current_page: currentPage,\n          per_page: 15,\n        },\n      },\n    });\n  }, [currentPage]);\n\n  useEffect(() => {\n    if (fiatWithdrawHistory && fiatWithdrawHistory?.data?.data?.length) {\n      setData(prev => [...prev, ...fiatWithdrawHistory?.data?.data]);\n    }\n  }, [fiatWithdrawHistory]);\n\n  const handleNextData = () => {\n    if (fiatWithdrawHistoryLastPage) {\n      if (currentPage === fiatWithdrawHistoryLastPage) {\n        setHasMoreItems(false);\n        return;\n      }\n\n      setCurrentPage(currentPage + 1);\n    }\n  };\n\n  return (\n    <div className=\"table-body\">\n      <InfiniteScrollList\n        data={data}\n        handleNext={handleNextData}\n        hasMore={hasMoreItems}\n        parentRef={refTable}\n      >\n        {data && data?.length ? (\n          data.map(item => <WithdrawRow key={uuidv4()} {...item} />)\n        ) : (\n          <p style={{ textAlign: 'center', padding: '15px 0' }}>\n            {L.translate(\n              'Pages.Users.Withdraw.WithdrawHistory.HistoryFiat.item1',\n            )}\n          </p>\n        )}\n      </InfiniteScrollList>\n    </div>\n  );\n};\n\nexport default HistoryFiat;\n","import React, { useRef } from 'react';\nimport L from 'i18n-react';\nimport HistoryCrypto from './HistoryCrypto';\nimport HistoryFiat from './HistoryFiat';\nimport TableHistoryHead from '../../TableHistoryHead';\n\nconst WithdrawHistory = ({ isActive }) => {\n  const tableID = isActive\n    ? 'withdrawal-fiat-history-component-table-box'\n    : 'withdrawal-crypto-history-component-table-box';\n\n  return (\n    <div className=\"transfer-box\">\n      <div className=\"transfer-box__content\">\n        <div className=\"transfer-history\">\n          <p className=\"item-title item-title--bigger\">\n            {L.translate('Pages.Users.Withdraw.WithdrawHistory.item1')}\n          </p>\n\n          <div className=\"table-box\" id={tableID}>\n            <div className=\"table table--transfer-history\">\n              <TableHistoryHead />\n\n              {!isActive ? (\n                <HistoryFiat refTable={tableID} />\n              ) : (\n                <HistoryCrypto refTable={tableID} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WithdrawHistory;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form, Field } from 'formik';\nimport { Input, TextArea } from '../../../../FormControls';\nimport { closeModal } from '../../../../Modal';\nimport {\n  requiredValue,\n  validateEmail,\n} from '../../../../../../services/validators';\nimport types from '../../../../../../redux/types';\n\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\n\nconst DafriBankModalWithdraw = ({ formData }) => {\n  const dispatch = useDispatch();\n\n  const initValue = {\n    account_or_email: '',\n    remark: '',\n  };\n\n  const handleSubmit = values => {\n    dispatch({\n      type: types.MAKE_DAFRIBANK_PAYMENT_START,\n      payload: {\n        ...values,\n        ...formData,\n      },\n    });\n\n    closeModal();\n  };\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" type=\"button\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <p className=\"modal-title\">Fill information</p>\n      </div>\n\n      <Formik onSubmit={handleSubmit} initialValues={initValue}>\n        {({ setFieldValue, values, errors, validateField, ...formik }) => (\n          <Form className=\"modal-body\">\n            <div className=\"modal-field\">\n              <p className=\"field-label\">Enter your DafriBank account E-mail</p>\n              <Field\n                type=\"text\"\n                name=\"account_or_email\"\n                className=\"input\"\n                placeholder=\"E-mail\"\n                component={Input}\n                validate={validateEmail}\n              />\n            </div>\n\n            <div className=\"modal-field\">\n              <p className=\"field-label\">Your comment</p>\n\n              <Field\n                type=\"text\"\n                name=\"remark\"\n                className=\"area-field area-field--type2 area-field--bigger\"\n                rows=\"5\"\n                style={{ width: '100%' }}\n                placeholder=\"Comment\"\n                component={TextArea}\n                validate={requiredValue}\n              />\n            </div>\n\n            <div className=\"form-submit \">\n              <button className=\"button button--wider\" type=\"submit\">\n                Submit\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default DafriBankModalWithdraw;\n","import React from 'react';\nimport L from 'i18n-react';\nimport { Link } from 'react-router-dom';\nimport routes from '../../../../../routes';\n\nconst TransferCheck = ({ onChange, text, isFiat, checkBoxRef, checked }) => {\n  return (\n    <div className=\"transfer-check\" ref={checkBoxRef}>\n      <div className=\"check-wrap\">\n        <input\n          type=\"checkbox\"\n          className=\"new-check new-check--type2\"\n          id=\"transfer\"\n          name=\"transfer\"\n          onChange={onChange}\n          checked={checked}\n        />\n\n        <label htmlFor=\"transfer\">\n          <span className=\"check-icon\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 26 26\"\n              width=\"26\"\n              height=\"26\"\n              fill=\"#fff\"\n            >\n              <path d=\"M 22.566406 4.730469 L 20.773438 3.511719 C 20.277344 3.175781 19.597656 3.304688 19.265625 3.796875 L 10.476563 16.757813 L 6.4375 12.71875 C 6.015625 12.296875 5.328125 12.296875 4.90625 12.71875 L 3.371094 14.253906 C 2.949219 14.675781 2.949219 15.363281 3.371094 15.789063 L 9.582031 22 C 9.929688 22.347656 10.476563 22.613281 10.96875 22.613281 C 11.460938 22.613281 11.957031 22.304688 12.277344 21.839844 L 22.855469 6.234375 C 23.191406 5.742188 23.0625 5.066406 22.566406 4.730469 Z\" />\n            </svg>\n          </span>\n\n          <span>\n            {`${text} `}\n\n            {isFiat && (\n              <Link to={routes.Static.WithdrawalInstructions.path}>\n                {L.translate('Pages.Users.Withdraw.TransferCheck.item1')}{' '}\n              </Link>\n            )}\n          </span>\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default TransferCheck;\n","import React from 'react';\nimport L from 'i18n-react';\nimport notification from '../../../../../services/notification';\n\nconst InputAction = ({ withBank, handleWithBank, copyData, copyMessage }) => {\n  const handleCopy = () => {\n    window.navigator.clipboard.writeText(copyData);\n    notification({\n      type: 'info',\n      timeOut: 3500,\n      message: copyMessage,\n    });\n  };\n\n  return (\n    <div\n      className={`input-action ${withBank ? 'input-action--with-bank' : null}`}\n      style={withBank ? { zIndex: '5' } : null}\n    >\n      {withBank && (\n        <button className=\"input-link\" type=\"button\" onClick={handleWithBank}>\n          {L.translate('Pages.Users.Withdraw.InputAction.item1')}\n        </button>\n      )}\n\n      <button className=\"copy\" onClick={handleCopy}>\n        {L.translate('Pages.Users.Withdraw.InputAction.item2')}\n        <span className=\"d-flex copy__icon\">\n          <svg\n            className=\"fill\"\n            width=\"16\"\n            height=\"16\"\n            viewBox=\"0 0 16 16\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              d=\"M11.4285 2.85693H1.71428C0.767509 2.85693 0 3.62444 0 4.57122V14.2855C0 15.2322 0.767509 15.9997 1.71428 15.9997H11.4285C12.3753 15.9997 13.1428 15.2322 13.1428 14.2855V4.57122C13.1428 3.62444 12.3753 2.85693 11.4285 2.85693Z\"\n              fill=\"#D7CFFF\"\n            />\n            <path\n              d=\"M14.2856 1.10692e-09H3.99992C3.05828 -3.3481e-05 2.29288 0.759507 2.28564 1.70112C2.28564 1.70571 2.28564 1.70969 2.28564 1.71428H11.4285C13.0056 1.71616 14.2837 2.99423 14.2856 4.57141V13.7143C14.2902 13.7143 14.2942 13.7143 14.2988 13.7143C15.2404 13.707 15.9999 12.9416 15.9999 12V1.71428C15.9999 0.767509 15.2324 1.10692e-09 14.2856 1.10692e-09Z\"\n              fill=\"#D7CFFF\"\n            />\n          </svg>\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default InputAction;\n","import React from 'react';\nimport InputAction from '../InputAction';\n\nconst CopyToClipboard = ({ adress, withBank, copyMessage }) => {\n  return (\n    <div className=\"transfer-address\">\n      <div className=\"field-wrap\">\n        <input\n          type=\"text\"\n          className=\"input input--with-copy input--type2 input--big\"\n          defaultValue={adress}\n          readOnly\n        />\n\n        <InputAction\n          withBank={withBank}\n          copyData={adress}\n          copyMessage={copyMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CopyToClipboard;\n","import React from 'react';\nimport L from 'i18n-react';\nimport { Link } from 'react-router-dom';\nimport routes from '../../../../../routes';\n\nconst TransferLimit = ({ amount = '0' }) => {\n  return (\n    <div className=\"transfer-limit-block\">\n      <p className=\"transfer-limit\">\n        {L.translate('Pages.Users.Withdraw.TransferLimit.item1')}{' '}\n        <span className=\"green\">{amount.toFixed(1)} USD</span> /{' '}\n        <span className=\"red\">50 000 USD</span>\n      </p>\n      <div className=\"transfer-submit\">\n        <Link\n          className=\"button button--big  button--big--round button--wide-width\"\n          to={routes.Profile.Verification.path}\n        >\n          {L.translate('Pages.Users.Withdraw.TransferLimit.item2')}\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default TransferLimit;\n","import React, { useEffect } from 'react';\nimport L from 'i18n-react';\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { closeModal } from '../../../../Modal';\nimport { Input } from '../../../../FormControls';\nimport { validate2FA } from '../../../../../../services/validators';\nimport {\n  settingsSelector,\n  userSelector,\n} from '../../../../../../redux/users/settings/selectors';\nimport { hideEmail } from '../../../../../../services/helpers';\nimport types from '../../../../../../redux/types';\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\nimport { walletSelector } from '../../../../../../redux/wallets/selectors';\n\nconst SecurityChecked = ({\n  type,\n  data,\n  resetWithdrawFields,\n  assetCode = 'btc',\n  walletId,\n  debounceInputRef,\n}) => {\n  const dispatch = useDispatch();\n  const settings = useSelector(settingsSelector);\n  const wallet = useSelector(walletSelector);\n  const user = useSelector(userSelector);\n  const google2fa = settings?.google2fa_enabled;\n  const email = hideEmail(settings?.email);\n  const phoneNumber = user?.data?.phone;\n  const phoneConfirmed = user?.sms_enabled;\n  const { withdrawAmountInUsd } = wallet;\n\n  const initValue = {\n    sms_code: '',\n    email_code: '',\n    totp: '',\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: types.GET_WITHDRAW_AMOUNT_IN_USD_START,\n      payload: {\n        params: {\n          amount: data?.amount,\n          wallet_id: data?.wallet_id || walletId,\n        },\n      },\n    });\n  }, []);\n\n  const getSMSCode = () => {\n    const payload = {\n      phone: `${phoneNumber}`,\n      type: 'sms',\n      operation: 'withdrawal',\n      amount: data?.amount,\n      wallet_id: type === 'crypto' ? data?.wallet_id : data?.asset_id,\n    };\n\n    dispatch({ type: types.GET_SMS_CODE_START, payload });\n  };\n\n  const getEmailCode = () =>\n    dispatch({\n      type: types.GET_EMAIL_CODE_START,\n      payload: {\n        operation: '',\n        amount: '',\n        wallet_id: '',\n        type: 'email',\n      },\n    });\n\n  const handleSubmit = values => {\n    switch (type) {\n      case 'bank-fiat':\n        dispatch({\n          type: types.POST_FIAT_BANKS_WITHDRAW_START,\n          payload: { ...values, ...data },\n          resetWithdrawFields,\n        });\n        break;\n\n      case 'payment-agent-bank-fiat':\n        dispatch({\n          type: types.POST_PAYMENT_AGENT_FIAT_BANKS_WITHDRAW_START,\n          payload: { ...values, ...data },\n          resetWithdrawFields,\n          debounceInputRef,\n        });\n        break;\n\n      case 'crypto':\n        dispatch({\n          type: types.POST_CRYPTO_WITHDRAW_START,\n          payload: { ...values, ...data },\n          assetCode,\n          resetWithdrawFields,\n        });\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"Close\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <p className=\"modal-title\">\n          {L.translate('Base.Modals.Users.Withdraw.SecurityChecked.item1')}\n        </p>\n      </div>\n\n      <Formik onSubmit={handleSubmit} initialValues={initValue}>\n        {({ setFieldValue, values, errors, validateField, ...formik }) => (\n          <Form className=\"modal-body\">\n            {phoneConfirmed && +withdrawAmountInUsd > 5000 ? (\n              <div className=\"modal-field\">\n                <p className=\"field-label\">\n                  {L.translate(\n                    'Base.Modals.Users.Withdraw.SecurityChecked.item2',\n                  )}\n                </p>\n\n                <Field\n                  type=\"text\"\n                  name=\"sms_code\"\n                  className=\"input input--with-btn\"\n                  placeholder={L.translate(\n                    'Base.Modals.Users.Withdraw.SecurityChecked.item3',\n                  )}\n                  isSendBtn=\"true\"\n                  sendBtnCallback={getSMSCode}\n                  component={Input}\n                  validate={validate2FA}\n                />\n\n                <p className=\"field-hint field-hint--type2\">\n                  {L.translate(\n                    'Base.Modals.Users.Withdraw.SecurityChecked.item4',\n                  )}\n                </p>\n              </div>\n            ) : null}\n\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate(\n                  'Base.Modals.Users.Withdraw.SecurityChecked.item5',\n                )}\n              </p>\n\n              <Field\n                type=\"text\"\n                name=\"email_code\"\n                className=\"input input--with-btn\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.Withdraw.SecurityChecked.item6',\n                )}\n                component={Input}\n                isSendBtn=\"true\"\n                sendBtnCallback={getEmailCode}\n                validate={validate2FA}\n              />\n\n              <p className=\"field-hint \">\n                {L.translate(\n                  'Base.Modals.Users.Withdraw.SecurityChecked.item7',\n                )}{' '}\n                {email}.\n              </p>\n            </div>\n\n            {!!google2fa && (\n              <div className=\"modal-field\">\n                <p className=\"field-label\">\n                  {L.translate(\n                    'Base.Modals.Users.Withdraw.SecurityChecked.item8',\n                  )}\n                </p>\n\n                <Field\n                  type=\"text\"\n                  name=\"totp\"\n                  className=\"input\"\n                  placeholder={L.translate(\n                    'Base.Modals.Users.Withdraw.SecurityChecked.item9',\n                  )}\n                  component={Input}\n                  validate={validate2FA}\n                />\n\n                <p className=\"field-hint\">\n                  {L.translate(\n                    'Base.Modals.Users.Withdraw.SecurityChecked.item10',\n                  )}\n                </p>\n              </div>\n            )}\n\n            <div className=\"form-submit \">\n              <button className=\"button button--wider\" type=\"submit\">\n                {L.translate(\n                  'Base.Modals.Users.Withdraw.SecurityChecked.item11',\n                )}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default SecurityChecked;\n","import React, { useEffect, useRef } from 'react';\nimport L from 'i18n-react';\nimport { Formik, Form, Field } from 'formik';\nimport { requiredValue } from '../../../../../../services/validators';\nimport { Input } from '../../../../FormControls';\nimport { closeModal, openModal } from '../../../../Modal';\nimport SecurityChecked from '../SecurityChecked';\nimport closeIcon from '../../../../../../styles/img/closeIcon.svg';\n\nconst BankDetails = ({\n  data,\n  resetWithdrawFields,\n  type,\n  walletId,\n  debounceInputRef,\n}) => {\n  const initValue = {\n    bank_name: '',\n    holder_name: '',\n    account_number: '',\n    branch_code: '',\n    routing_number: '',\n    account_type: '',\n  };\n\n  const handleSubmit = values => {\n    openModal(() => (\n      <SecurityChecked\n        type={type}\n        data={{ ...values, ...data }}\n        resetWithdrawFields={resetWithdrawFields}\n        walletId={walletId}\n        debounceInputRef={debounceInputRef}\n      />\n    ));\n  };\n\n  return (\n    <div className=\"modal modal--medium\">\n      <button className=\"close-modal\" type=\"button\" onClick={closeModal}>\n        <img src={closeIcon} alt=\"\" />\n      </button>\n\n      <div className=\"modal-header\">\n        <p className=\"modal-title\">\n          {L.translate('Base.Modals.Users.Withdraw.BankDetails.item1')}\n        </p>\n      </div>\n\n      <Formik onSubmit={handleSubmit} initialValues={initValue}>\n        {({ setFieldValue, values, errors, validateField, ...formik }) => (\n          <Form className=\"modal-body\">\n            <div className=\"modal-field\">\n              <p className=\"field-label\">Enter Bank Name</p>\n              <Field\n                type=\"text\"\n                name=\"bank_name\"\n                className=\"input\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.Withdraw.BankDetails.item2',\n                )}\n                component={Input}\n                validate={requiredValue}\n              />\n            </div>\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate('Base.Modals.Users.Withdraw.BankDetails.item3')}\n              </p>\n              <Field\n                type=\"text\"\n                name=\"holder_name\"\n                className=\"input\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.Withdraw.BankDetails.item4',\n                )}\n                component={Input}\n                validate={requiredValue}\n              />\n            </div>\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate('Base.Modals.Users.Withdraw.BankDetails.item5')}\n              </p>\n              <Field\n                type=\"text\"\n                name=\"account_number\"\n                className=\"input\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.Withdraw.BankDetails.item6',\n                )}\n                component={Input}\n                validate={requiredValue}\n              />\n            </div>\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate('Base.Modals.Users.Withdraw.BankDetails.item7')}\n              </p>\n              <Field\n                type=\"text\"\n                name=\"branch_code\"\n                className=\"input\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.Withdraw.BankDetails.item8',\n                )}\n                component={Input}\n                validate={requiredValue}\n              />\n            </div>\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate('Base.Modals.Users.Withdraw.BankDetails.item9')}\n              </p>\n              <Field\n                type=\"text\"\n                name=\"routing_number\"\n                className=\"input\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.Withdraw.BankDetails.item10',\n                )}\n                component={Input}\n                validate={requiredValue}\n              />\n            </div>\n            <div className=\"modal-field\">\n              <p className=\"field-label\">\n                {L.translate('Base.Modals.Users.Withdraw.BankDetails.item11')}\n              </p>\n              <Field\n                type=\"text\"\n                name=\"account_type\"\n                className=\"input\"\n                placeholder={L.translate(\n                  'Base.Modals.Users.Withdraw.BankDetails.item12',\n                )}\n                component={Input}\n                validate={requiredValue}\n              />\n            </div>\n            <div className=\"form-submit \">\n              <button className=\"button button--wider\" type=\"submit\">\n                {L.translate('Base.Modals.Users.Withdraw.BankDetails.item13')}\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default BankDetails;\n","import React from 'react';\n\nimport method1 from '../../../../../styles/img/method1.png';\n\nconst FiatPaymentMethod = props => {\n  const { img_path, name_method, selectedMethod, onClick } = props;\n\n  return (\n    <div className=\"methods-col\">\n      <div\n        className={`method ${selectedMethod === name_method ? 'selected' : ''}`}\n      >\n        <div\n          className=\"method-item\"\n          onClick={() => onClick(props)}\n          role=\"presentation\"\n        >\n          <div className=\"method-item__logo\">\n            <img\n              src={name_method === 'manual withdrawal' ? method1 : img_path}\n              alt=\"\"\n            />\n          </div>\n\n          <button className=\"method-btn\" type=\"button\">\n            {name_method.toUpperCase()}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FiatPaymentMethod;\n","import React, { useEffect } from 'react';\nimport L from 'i18n-react';\nimport FiatPaymentMethod from '../FiatPaymentMethod';\n\nconst PaymentMethods = ({ paymentTypes, onSelect, selectedMethod }) => {\n  // Select bank method logic\n  const getSelectedMethod = () => {\n    let result;\n\n    if (selectedMethod) {\n      const name = selectedMethod?.name_method;\n\n      if (name) {\n        result = name;\n      } else {\n        result = false;\n      }\n    }\n\n    return result;\n  };\n\n  const nameOfSelectedMethod = getSelectedMethod();\n\n  // onSelect interceptor\n  const onSelectInterceptor = item => {\n    onSelect(item);\n  };\n\n  // Fropdown useEffect\n  useEffect(() => {\n    getSelectedMethod();\n  }, []);\n\n  return (\n    <>\n      {paymentTypes && (\n        <div className=\"transfer-block\">\n          <p className=\"item-title item-title--bigger my-balance__title\">\n            {L.translate('Pages.Users.Withdraw.PaymentMethods.item1')}\n          </p>\n\n          <div className=\"methods-row\">\n            {!!paymentTypes.length &&\n              paymentTypes.map(method => (\n                <FiatPaymentMethod\n                  key={method.id}\n                  onClick={onSelectInterceptor}\n                  selectedMethod={nameOfSelectedMethod}\n                  {...method}\n                />\n              ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default PaymentMethods;\n","import React, { useEffect, useRef, useState } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\n// Form\nimport { Formik, Form, Field } from 'formik';\nimport {\n  DebounceFormikInput,\n  InputWithOnChange,\n} from '../../../../Base/FormControls';\nimport { requiredPositiveNumber } from '../../../../../services/validators';\n// Modals\nimport { openModal } from '../../../../Base/Modal';\nimport DafriBankModalWithdraw from '../../../../Base/Modals/Users/Withdraw/DafriBank';\n// Other page components\nimport SupportedCurrency from '../SupportedCurrency';\nimport TransferCheck from '../TransferCheck';\nimport CopyToClipboard from '../CopyToClipboard';\nimport {\n  referenceNumberSelector,\n  userSelector,\n  withdrawal24Selector,\n} from '../../../../../redux/auth/selectors';\nimport {\n  paymentLinkSelector,\n  paymentMethodsSelector,\n} from '../../../../../redux/wallets/selectors';\nimport TransferLimit from '../TransferLimit';\n\n// Images\nimport BankDetails from '../../../../Base/Modals/Users/Withdraw/BankDetails';\nimport PaymentMethods from '../PaymentMethods';\nimport PaymentAgent from '../PaymentAgent';\nimport { paymentAgentCommissionSelector } from '../../../../../redux/paymentAgent/selectors';\nimport types from '../../../../../redux/types';\nimport DafriPayForm from '../../DafriPayForm';\n\nconst fiatLabels = ['Fiat', 'Total', 'Available', 'Locked'];\n\nconst WithdrawalFiat = ({ fiatData, location, mobileData }) => {\n  const dispatch = useDispatch();\n\n  const referenceNumber = useSelector(referenceNumberSelector);\n  const user = useSelector(userSelector);\n  const withdrawal24 = useSelector(withdrawal24Selector);\n  const paymentAgentCommission = useSelector(paymentAgentCommissionSelector);\n  const paymentLink = useSelector(paymentLinkSelector);\n  const assetPayments = useSelector(paymentMethodsSelector);\n\n  const [selectedCurrency, setSelectedCurrency] = useState(null);\n  const [allPaymentTypes, setAllPaymentTypes] = useState(null);\n  const [selectedType, setSelectedType] = useState(null);\n\n  const [selectedAgent, setSelectedAgent] = useState(null);\n  const paymentAgentUserId = selectedAgent?.user_id;\n\n  const [agree, toggleAgree] = useState(false);\n\n  const [formValue, setFormValue] = useState(0);\n  const [currentAssetFee, setCurrentAssetFee] = useState(0);\n  const [agentFee, setAgentFee] = useState(0);\n  const [totalAmount, setTotalAmount] = useState(0);\n\n  // Agree logic\n  const handleToggleAgree = () => toggleAgree(!agree);\n\n  // Select currency logic\n  const clearPrevSelected = (resetSelectedCur = false) => {\n    if (agree) handleToggleAgree();\n    if (resetSelectedCur) setSelectedCurrency(null);\n    setAllPaymentTypes(null);\n    setSelectedType(null);\n    setFormValue(0);\n  };\n\n  const handleCurrencySelect = currency => {\n    setSelectedCurrency(currency);\n    clearPrevSelected();\n  };\n\n  // Select payment method\n  const handleSelectPaymentType = item => {\n    setSelectedType(item);\n  };\n\n  // Form logic\n  const debounceInputRef = useRef();\n\n  const initialValues = {\n    amount: '',\n  };\n\n  const handleSubmit = values => {\n    switch (selectedType?.name_method) {\n      case 'manual withdrawal':\n        openModal(() => (\n          <BankDetails\n            data={{\n              ...values,\n              asset_id: selectedCurrency?.assetID,\n            }}\n            resetWithdrawFields={clearPrevSelected}\n            type=\"bank-fiat\"\n            walletId={selectedCurrency?.id}\n          />\n        ));\n        break;\n\n      case 'payment agent':\n        openModal(() => (\n          <BankDetails\n            data={{\n              ...values,\n              asset_id: selectedCurrency?.assetID,\n              user_id: paymentAgentUserId,\n            }}\n            resetWithdrawFields={clearPrevSelected}\n            type=\"payment-agent-bank-fiat\"\n            walletId={selectedCurrency?.id}\n            debounceInputRef={debounceInputRef}\n          />\n        ));\n        break;\n\n      case 'DafriBank ePay':\n        openModal(() => (\n          <DafriBankModalWithdraw\n            formData={{\n              amount: values.amount,\n              asset_id: selectedCurrency?.assetID,\n              payment_type: 'withdraw',\n            }}\n          />\n        ));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleAmountChange = (e, value, handleChange) => {\n    if (value > 0) {\n      dispatch({\n        type: types.CALCULATE_PAYMENT_AGENT_COMMISSION_START,\n        payload: {\n          amount: +value,\n          asset_id: selectedCurrency?.assetID,\n          id: paymentAgentUserId,\n          type: 'withdraw_fee',\n        },\n      });\n    }\n\n    setFormValue(value);\n    handleChange(e.target.name, value);\n  };\n\n  const getTotalAmount = (amount, fee, paymentAgentFee = 0) => {\n    return amount > 0 ? amount - (amount * (fee + paymentAgentFee)) / 100 : 0;\n  };\n\n  const handleChangeAmount = (e, setFieldValue, validateField) => {\n    setFieldValue(e.target.name, e.target.value.replace(/,/g, '.'));\n    validateField(e.target.name);\n  };\n\n  const handleSetMaxSum = (e, handleSetField, validateField) => {\n    handleSetField('amount', selectedCurrency.balance);\n    setFormValue(selectedCurrency.balance);\n\n    if (selectedType.name_method === 'payment agent') {\n      setTimeout(() => {\n        handleAmountChange(e, selectedCurrency.balance, handleSetField);\n      }, 0);\n    }\n\n    validateField('amount');\n  };\n\n  useEffect(() => {\n    if (!agree) {\n      setTimeout(() => {\n        setAgentFee(0);\n        setTotalAmount(0);\n      }, 0);\n    }\n  }, [agree]);\n\n  useEffect(() => {\n    if (selectedType) setCurrentAssetFee(selectedType.fee);\n\n    if (\n      selectedType &&\n      selectedAgent &&\n      selectedType.name_method === 'payment agent'\n    ) {\n      // setAgentFee(\n      //   formValue ? formValue * (selectedAgent.commission_rate / 100) : 0,\n      // );\n      setAgentFee(formValue ? selectedAgent.commission_rate : 0);\n\n      if (formValue) {\n        dispatch({\n          type: types.CALCULATE_PAYMENT_AGENT_COMMISSION_START,\n          payload: {\n            amount: formValue,\n            asset_id: selectedCurrency?.assetID,\n            id: paymentAgentUserId,\n            type: 'withdraw_fee',\n          },\n        });\n      }\n    } else {\n      setAgentFee(0);\n    }\n  }, [selectedType, selectedAgent]);\n\n  useEffect(() => {\n    if (selectedCurrency && assetPayments && selectedCurrency?.assetID) {\n      const withdraw = assetPayments[selectedCurrency?.assetID]?.withdrawal;\n      setAllPaymentTypes(withdraw);\n    }\n  }, [selectedCurrency, assetPayments]);\n\n  useEffect(() => {\n    if (location?.state && location?.state?.item) {\n      setSelectedCurrency(location?.state?.item);\n    }\n  }, [location?.state]);\n\n  useEffect(() => {\n    if (\n      paymentLink &&\n      paymentLink instanceof Object &&\n      selectedType?.name_method === 'DafriBank ePay'\n    ) {\n      const form = document.querySelector('#dafriform');\n      if (form) form.submit();\n    }\n  }, [paymentLink]);\n\n  useEffect(() => {\n    if (paymentAgentCommission) {\n      setAgentFee(paymentAgentCommission?.withdraw?.fee_payment_agent_percent);\n    } else {\n      setAgentFee(0);\n    }\n  }, [paymentAgentCommission]);\n\n  useEffect(() => {\n    setTotalAmount(getTotalAmount(formValue, currentAssetFee, agentFee));\n  }, [selectedType, agentFee, formValue, currentAssetFee, selectedAgent]);\n\n  useEffect(() => {\n    if (mobileData) {\n      const { amount, paymentType, assetId } = mobileData;\n\n      switch (paymentType) {\n        case 'dafribank':\n          openModal(() => (\n            <DafriBankModalWithdraw\n              formData={{\n                amount,\n                asset_id: assetId,\n                payment_type: 'withdraw',\n              }}\n            />\n          ));\n          break;\n\n        default:\n          return true;\n      }\n    }\n  }, []);\n\n  // Dafribank check form mobile\n  const [dafriFormEndabled, setDafriFormEnabled] = useState(false);\n\n  useEffect(() => {\n    if (mobileData && paymentLink && dafriFormEndabled) {\n      const form = document.querySelector('#dafriform');\n      form.submit();\n    }\n  }, [dafriFormEndabled, paymentLink]);\n\n  return (\n    <>\n      <SupportedCurrency\n        labels={fiatLabels}\n        data={fiatData}\n        title={L.translate('Pages.Users.Withdraw.Fiat.item1')}\n        activeEl={selectedCurrency?.assetID}\n        onSelectItem={handleCurrencySelect}\n      />\n\n      <div className=\"transfer-block\">\n        <p className=\"item-title item-title--bigger my-balance__title\">\n          {L.translate('Pages.Users.Withdraw.Fiat.item2')}\n        </p>\n\n        <CopyToClipboard\n          adress={referenceNumber}\n          copyMessage={L.translate('Pages.Users.Withdraw.Fiat.item3')}\n        />\n\n        <PaymentMethods\n          paymentTypes={allPaymentTypes}\n          onSelect={handleSelectPaymentType}\n          selectedMethod={selectedType}\n        />\n\n        {selectedType?.name_method === 'payment agent' && (\n          <PaymentAgent\n            selectedPaymentAgent={selectedAgent}\n            handleSelectedPaymentAgent={setSelectedAgent}\n            type=\"withdrawal\"\n          />\n        )}\n      </div>\n\n      <TransferCheck\n        text=\"I understand the\"\n        onChange={handleToggleAgree}\n        checked={agree}\n        isFiat\n      />\n\n      {agree && selectedCurrency && selectedType && (\n        <>\n          {!user?.user_data?.sumsub && <TransferLimit amount={withdrawal24} />}\n\n          <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n            {({\n              resetForm,\n              values,\n              setFieldValue,\n              validateField,\n              ...formik\n            }) => (\n              <Form className=\"transfer-form\">\n                <div className=\"transfer-form__field\">\n                  <Field\n                    type=\"text\"\n                    name=\"amount\"\n                    className=\"input input--big input--type2 input--with-currency\"\n                    placeholder={L.translate('Pages.Users.Withdraw.Fiat.item4')}\n                    textCurrency={selectedCurrency?.code?.toUpperCase()}\n                    component={\n                      selectedType?.name_method === 'payment agent'\n                        ? DebounceFormikInput\n                        : InputWithOnChange\n                    }\n                    isShowMaxButton\n                    setMaxCallback={e =>\n                      handleSetMaxSum(e, setFieldValue, validateField)\n                    }\n                    validate={requiredPositiveNumber}\n                    handleAmountChange={handleAmountChange}\n                    setFieldValue={setFieldValue}\n                    debounceRef={debounceInputRef}\n                    value={values.amount}\n                    onChange={e => {\n                      handleChangeAmount(e, setFieldValue, validateField);\n                      setFormValue(e.target.value);\n                    }}\n                  />\n                </div>\n                <div className=\"transfer-details\">\n                  <button\n                    className=\"button button--big  button--big--round button--wide-width\"\n                    type=\"submit\"\n                    disabled={\n                      !values.amount || !(values.amount > 0) ? 'disabled' : null\n                    }\n                  >\n                    {selectedType?.name_method === 'DafriBank ePay'\n                      ? 'Submit withdraw'\n                      : L.translate('Pages.Users.Withdraw.Fiat.item5')}\n                  </button>\n\n                  <div className=\"transfer-details__total\">\n                    <div className=\"transfer-detail\">\n                      <p className=\"transfer-detail__name\">\n                        {L.translate('Pages.Users.Withdraw.Fiat.item6')}\n                      </p>\n                      <p className=\"transfer-detail__value\">\n                        {currentAssetFee || 0} %\n                      </p>\n                    </div>\n\n                    {selectedType?.name_method === 'payment agent' && (\n                      <div className=\"transfer-detail\">\n                        <p className=\"transfer-detail__name\">\n                          Payment Agent Commission\n                        </p>\n                        <p className=\"transfer-detail__value\">{agentFee} %</p>\n                      </div>\n                    )}\n\n                    <div className=\"transfer-detail\">\n                      <p className=\"transfer-detail__name\">\n                        {L.translate('Pages.Users.Withdraw.Fiat.item7')}\n                      </p>\n                      <p className=\"transfer-detail__value\">{totalAmount}</p>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </>\n      )}\n\n      {paymentLink && (\n        <DafriPayForm\n          type=\"withdraw\"\n          target={!mobileData}\n          formData={paymentLink}\n          onLoadCallback={setDafriFormEnabled}\n        />\n      )}\n    </>\n  );\n};\n\nexport default WithdrawalFiat;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport TransferNetworkItem from '../../Deposit/TransferNetwork/TransferNetworkItem';\n\nconst TransferNetwork = ({ networks, setNetworkId }) => {\n  const [tab, setTab] = useState(null);\n\n  const handleTab = network => {\n    setNetworkId(network?.network_id);\n    setTab(network);\n  };\n\n  useEffect(() => {\n    if (networks && networks?.length) setTab(networks[0]);\n  }, [networks]);\n\n  return (\n    <div className=\"transfer-network\">\n      <p className=\"block-title\">\n        {L.translate('Pages.Users.Withdraw.TransferNetwork.item1')}\n      </p>\n\n      <div className=\"tab tab--type2\">\n        {networks?.length &&\n          networks?.map((tabItem, i) => {\n            return (\n              <button\n                key={i}\n                className={`tab__item ${\n                  tab?.network_id === tabItem?.network_id\n                    ? 'tab__item--active'\n                    : ''\n                }`}\n                type=\"button\"\n                onClick={() => handleTab(tabItem)}\n              >\n                {tabItem?.network_name?.toUpperCase()}\n              </button>\n            );\n          })}\n      </div>\n\n      {tab && (\n        <TransferNetworkItem code={tab?.network_name} name={tab?.network_id} />\n      )}\n    </div>\n  );\n};\n\nexport default TransferNetwork;\n","import React from 'react';\n\nconst DropDownAddresses = ({\n  data,\n  address,\n  index,\n  setFieldValue,\n  handleSelectAddressItem,\n  addressesStyles,\n}) => {\n  const checkedStyle = () => {\n    switch (true) {\n      case index === 0 && data?.length !== 1:\n        return addressesStyles.addressFirstItemStyle;\n      case index === data?.length - 1 && data?.length !== 1:\n        return addressesStyles.addressLastItemStyle;\n      case data?.length === 1:\n        return null;\n\n      default:\n        return addressesStyles.addressItemStyle;\n    }\n  };\n\n  return (\n    <div className=\"method-item\" style={checkedStyle()}>\n      <button\n        className=\"method-btn\"\n        type=\"button\"\n        data-address={address?.address}\n        onClick={e => handleSelectAddressItem(e, setFieldValue)}\n      >\n        {address?.address}\n      </button>\n    </div>\n  );\n};\n\nexport default DropDownAddresses;\n","import React, { useEffect, useRef, useState } from 'react';\nimport L from 'i18n-react';\nimport { Formik, Form, Field } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { DebounceInput } from 'react-debounce-input';\nimport SupportedCurrency from '../SupportedCurrency';\nimport TransferNetwork from '../TransferNetwork';\nimport { Input } from '../../../../Base/FormControls';\nimport { openModal } from '../../../../Base/Modal';\nimport SecurityChecked from '../../../../Base/Modals/Users/Withdraw/SecurityChecked';\nimport { requiredValue } from '../../../../../services/validators';\nimport types from '../../../../../redux/types';\nimport { whitelistAddressesSelector } from '../../../../../redux/wallets/selectors';\n\nimport arrowDownIcon from '../../../../../styles/img/arrow-down.svg';\nimport DropDownAddresses from '../DropDownAddresses';\nimport { settingsSelector } from '../../../../../redux/users/settings/selectors';\n\nconst cryptoLabels = ['Coin', 'Total', 'Available', 'Locked'];\n\nconst addressesStyles = {\n  arrowButtonStyle: {\n    position: 'absolute',\n    right: '30px',\n    top: 0,\n    bottom: 0,\n  },\n  addressListStyle: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    filter: 'drop-shadow(0 8px 20px rgba(133, 132, 136, .3))',\n  },\n  addressItemStyle: {\n    borderRadius: '0',\n  },\n  addressFirstItemStyle: {\n    borderTopRightRadius: '40px',\n    borderTopLeftRadius: '40px',\n    borderBottomRightRadius: '0',\n    borderBottomLeftRadius: '0',\n  },\n  addressLastItemStyle: {\n    borderTopRightRadius: '0',\n    borderTopLeftRadius: '0',\n    borderBottomRightRadius: '40px',\n    borderBottomLeftRadius: '40px',\n  },\n};\n\nconst WithdrawCrypto = ({ isLoading, cryptoData, location }) => {\n  const dispatch = useDispatch();\n  const whitelistAddresses = useSelector(whitelistAddressesSelector);\n  const settingsData = useSelector(settingsSelector);\n\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [dropdown, setDropdown] = useState(false);\n  const [itemAddresesList, setItemAddresesList] = useState([]);\n  const [isValid, setIsValid] = useState(true);\n  const [networkId, setNetworkId] = useState(null);\n\n  const checkBoxRef = useRef();\n  const dropdownRef = useRef(null);\n\n  const initialValues = {\n    address: '',\n    amount: '',\n  };\n\n  const withdrawalWhiteListEnabled =\n    !!settingsData.data?.withdrawal_white_list_enabled;\n\n  const showArrowIcon =\n    withdrawalWhiteListEnabled &&\n    itemAddresesList?.length &&\n    itemAddresesList?.length >= 1 &&\n    itemAddresesList[0]?.address;\n\n  const showAddressesList =\n    withdrawalWhiteListEnabled &&\n    itemAddresesList?.length &&\n    itemAddresesList?.length >= 1;\n\n  const handleOutsideClick = e => {\n    if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n      setDropdown(false);\n    }\n  };\n\n  useEffect(() => {\n    document.body.addEventListener('click', handleOutsideClick);\n\n    return () => {\n      document.body.removeEventListener('click', handleOutsideClick);\n\n      setSelectedItem(null);\n    };\n  }, []);\n\n  const startScroll = () =>\n    checkBoxRef?.current?.scrollIntoView({\n      block: 'center',\n      behavior: 'smooth',\n    });\n\n  const handleSelect = item => {\n    setSelectedItem(item);\n    setNetworkId(item?.networks[0]?.network_id);\n    setIsValid(true);\n  };\n\n  const formRef = useRef(null);\n\n  useEffect(() => {\n    if (selectedItem && selectedItem?.type !== 'fiat') startScroll();\n\n    if (formRef.current) {\n      formRef.current.resetForm();\n    }\n  }, [selectedItem]);\n\n  useEffect(() => {\n    if (location?.state && location?.state?.item) {\n      setSelectedItem(location?.state?.item);\n    }\n  }, [location?.state]);\n\n  useEffect(() => {\n    if (whitelistAddresses?.data?.length) {\n      const currentAddresses = whitelistAddresses?.data?.find(\n        address => address?.asset_code === selectedItem?.code,\n      );\n\n      setItemAddresesList(currentAddresses?.addresses);\n    }\n  }, [whitelistAddresses, selectedItem]);\n\n  const onSubmit = (values, { resetForm }) => {\n    openModal(() => (\n      <SecurityChecked\n        type=\"crypto\"\n        data={{\n          ...values,\n          wallet_id: selectedItem?.id,\n          // network: selectedItem?.network,\n          network: networkId,\n        }}\n        resetWithdrawFields={resetForm}\n        assetCode={selectedItem?.code}\n      />\n    ));\n  };\n\n  const handleSetDropdown = () => setDropdown(!dropdown);\n\n  const handleSelectAddressItem = (e, setValue) => {\n    setValue('address', e.currentTarget.dataset.address);\n    setDropdown(false);\n  };\n\n  const handleSetMaxSum = setFieldValue => {\n    setFieldValue('amount', selectedItem.balance);\n  };\n\n  const handChangeleWalletAddress = ({ target }, setFieldValue) => {\n    const value = target?.value;\n\n    setFieldValue('address', value);\n\n    if (!value) {\n      return;\n    }\n    dispatch({\n      type: types.CHECK_USER_VALID_ADDRESS_START,\n      payload: {\n        asset_code: selectedItem?.code,\n        address: target.value,\n        network: networkId,\n      },\n      setIsValid,\n    });\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n      innerRef={formRef}\n    >\n      {({ setFieldValue, resetForm, values, ...formik }) => (\n        <>\n          <SupportedCurrency\n            isLoading={isLoading}\n            title={L.translate('Pages.Users.Withdraw.Crypto.item1')}\n            labels={cryptoLabels}\n            data={cryptoData}\n            activeEl={selectedItem?.assetID}\n            onSelectItem={handleSelect}\n            setFieldValue={setFieldValue}\n          />\n          {selectedItem ? (\n            <>\n              <div className=\"transfer-option\" ref={checkBoxRef}>\n                {selectedItem?.networks?.length && (\n                  <TransferNetwork\n                    {...selectedItem}\n                    setNetworkId={setNetworkId}\n                  />\n                )}\n              </div>\n              <Form className=\"transfer-form\">\n                <div className=\"transfer-form__field\">\n                  <div\n                    className={`method ${dropdown && 'active'}`}\n                    ref={dropdownRef}\n                  >\n                    <div className=\"field-wrap\">\n                      <DebounceInput\n                        type=\"text\"\n                        className=\"input input--big input--type2\"\n                        placeholder={L.translate(\n                          'Pages.Users.Withdraw.Crypto.item2',\n                        )}\n                        name=\"address\"\n                        value={values.address}\n                        debounceTimeout={500}\n                        onChange={e =>\n                          handChangeleWalletAddress(e, setFieldValue)\n                        }\n                        autoComplete=\"off\"\n                        disabled={showArrowIcon}\n                        readOnly={showArrowIcon}\n                      />\n                      {showArrowIcon && (\n                        <button\n                          className=\"copy\"\n                          type=\"button\"\n                          style={addressesStyles.arrowButtonStyle}\n                          onClick={handleSetDropdown}\n                        >\n                          <span className=\"d-flex copy__icon\">\n                            <img src={arrowDownIcon} alt=\"\" />\n                          </span>\n                        </button>\n                      )}\n                    </div>\n                    {dropdown ? (\n                      <div style={addressesStyles.addressListStyle}>\n                        {showAddressesList\n                          ? itemAddresesList?.map((address, idx, arr) => (\n                              <DropDownAddresses\n                                key={uuidv4()}\n                                data={arr}\n                                address={address}\n                                index={idx}\n                                setFieldValue={setFieldValue}\n                                handleSelectAddressItem={\n                                  handleSelectAddressItem\n                                }\n                                addressesStyles={addressesStyles}\n                              />\n                            ))\n                          : null}\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n                <div className=\"transfer-form-row\">\n                  <div className=\"transfer-form__field\">\n                    <div className=\"field-wrap\">\n                      <Field\n                        type=\"number\"\n                        placeholder={L.translate(\n                          'Pages.Users.Withdraw.Crypto.item3',\n                        )}\n                        className=\"input input--big input--type2 input--with-currency\"\n                        name=\"amount\"\n                        textCurrency={selectedItem?.code?.toUpperCase()}\n                        component={Input}\n                        validate={requiredValue}\n                        isShowMaxButton\n                        setMaxCallback={() => handleSetMaxSum(setFieldValue)}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"transfer-form-row__btn\">\n                    <button\n                      className=\"button button--big  button--big--round button--full\"\n                      type=\"submit\"\n                      disabled={\n                        !isValid || !values.amount || !values.address\n                          ? 'disabled'\n                          : null\n                      }\n                    >\n                      {L.translate('Pages.Users.Withdraw.Crypto.item4')}\n                    </button>\n                  </div>\n                </div>\n              </Form>\n            </>\n          ) : null}\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default WithdrawCrypto;\n","import React, { useEffect, useState } from 'react';\nimport L from 'i18n-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect, useHistory, useLocation } from 'react-router-dom';\nimport WithdrawHistory from './WithdrawHistory';\nimport WithdrawalFiat from './Fiat';\nimport WithdrawCrypto from './Crypto';\nimport { walletSelector } from '../../../../redux/wallets/selectors';\nimport types from '../../../../redux/types';\nimport { tokenSelector, userSelector } from '../../../../redux/auth/selectors';\nimport routes from '../../../../routes';\n\nconst Withdraw = ({ name = L.translate('Pages.Users.Withdraw.item5') }) => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const wallet = useSelector(walletSelector);\n\n  const { isLoading, walletsList, totalUSD } = wallet;\n\n  const [activeTab, setActiveTab] = useState(0);\n  const handleSetTab = num => setActiveTab(num);\n\n  const cryptoWallets = walletsList.filter(item => item.asset.type !== 'fiat');\n  const fiatWallets = walletsList.filter(item => item.asset.type === 'fiat');\n\n  useEffect(() => {\n    if (location?.state && location?.state?.type !== 'fiat') {\n      setActiveTab(1);\n    }\n  }, [location?.state]);\n\n  useEffect(() => {\n    dispatch({ type: types.GET_PAYMENT_METHODS_START });\n  }, []);\n\n  // Mobile detecting\n  const token = useSelector(tokenSelector);\n  const user = useSelector(userSelector);\n\n  const isMobileApp = new URLSearchParams(useHistory().location.search).get(\n    'app',\n  );\n  const isMobileToken = new URLSearchParams(useHistory().location.search).get(\n    'access_token',\n  );\n  const mobileAmount = new URLSearchParams(useHistory().location.search).get(\n    'amount',\n  );\n  const mobileAssetID = new URLSearchParams(useHistory().location.search).get(\n    'asset_id',\n  );\n  const mobilePaymentType = new URLSearchParams(\n    useHistory().location.search,\n  ).get('payment_type');\n\n  if (!token && !user) {\n    return <Redirect to={routes.Auth.Login.path} />;\n  }\n\n  const isMobileAppBoolean = !!(\n    isMobileApp &&\n    isMobileToken &&\n    mobileAmount &&\n    mobileAssetID &&\n    mobilePaymentType\n  );\n\n  const mobileData = isMobileAppBoolean\n    ? {\n        amount: mobileAmount,\n        paymentType: mobilePaymentType,\n        assetId: mobileAssetID,\n      }\n    : null;\n\n  return (\n    <section className=\"transfer-section\">\n      <div className=\"custom-container\">\n        <p className=\"section-title section-title--center\">{name}</p>\n\n        <div className=\"transfer-box\">\n          <div className=\"transfer-box__content\">\n            <div className=\"transfer-top\">\n              <div className=\"my-balance\">\n                <p className=\"item-title item-title--bigger my-balance__title\">\n                  {L.translate('Pages.Users.Withdraw.item2')}\n                </p>\n\n                <p className=\"my-balance__value\">${totalUSD}</p>\n              </div>\n            </div>\n\n            <div className=\"switcher\">\n              <button\n                className={`switcher__item ${!activeTab ? 'active' : ''}`}\n                onClick={() => handleSetTab(0)}\n              >\n                {L.translate('Pages.Users.Withdraw.item3')}\n              </button>\n\n              <button\n                className={`switcher__item ${activeTab ? 'active' : ''}`}\n                onClick={() => handleSetTab(1)}\n              >\n                {L.translate('Pages.Users.Withdraw.item4')}\n              </button>\n            </div>\n\n            {!activeTab ? (\n              <>\n                <WithdrawalFiat\n                  fiatData={fiatWallets}\n                  location={location}\n                  mobileData={mobileData}\n                />\n              </>\n            ) : (\n              <>\n                <WithdrawCrypto\n                  isActive={activeTab}\n                  isLoading={isLoading}\n                  cryptoData={cryptoWallets}\n                  location={location}\n                />\n              </>\n            )}\n          </div>\n        </div>\n\n        <WithdrawHistory isActive={activeTab} />\n      </div>\n    </section>\n  );\n};\n\nexport default Withdraw;\n","export const settingsSelector = state => state.settings;\nexport const userSelector = state => state.user;\n","import React, { useState } from 'react';\n\nconst SortButton = ({ sort, order, toggleSort }) => {\n  const [thisSort, setThisSort] = useState(sort?.sort || 'asc');\n\n  const thisToggleSort = e => {\n    if (e?.target?.dataset?.id !== 'search') {\n      setThisSort(thisSort === 'asc' ? 'desc' : 'asc');\n      toggleSort({ sort: thisSort === 'asc' ? 'desc' : 'asc', order });\n    }\n  };\n\n  return (\n    <div\n      className=\"td-sort\"\n      onClick={thisToggleSort}\n      data-order={order}\n      data-sort={thisSort}\n    >\n      <button type=\"button\">\n        <svg\n          className=\"fill\"\n          width=\"10\"\n          height=\"7\"\n          viewBox=\"0 0 10 7\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M5 0.857422L0 6.21456H10L5 0.857422Z\" fill=\"#969696\" />\n        </svg>\n      </button>\n\n      <button type=\"button\">\n        <svg\n          className=\"fill\"\n          width=\"10\"\n          height=\"7\"\n          viewBox=\"0 0 10 7\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M5 6.14307L10 0.785924L2.37568e-06 0.785924L5 6.14307Z\"\n            fill=\"#969696\"\n          />\n        </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default SortButton;\n","import React from 'react';\n\nconst SupportedCurrencyItem = ({\n  id,\n  asset,\n  balance,\n  frozen_balance,\n  total,\n  selected,\n  onSelectItem,\n  setFieldValue,\n  network,\n  networks,\n}) => {\n  const onSelect = () => {\n    onSelectItem({\n      id,\n      assetID: asset.id,\n      type: asset.type,\n      name: asset.name,\n      code: asset.code,\n      network,\n      networks,\n      balance,\n      publicAdress: asset?.public_address,\n    });\n\n    if (asset.type !== 'fiat') {\n      setFieldValue('address', '');\n    }\n  };\n\n  return (\n    <div className={`tr ${selected ? 'selected' : ''}`} onClick={onSelect}>\n      <div className=\"td\">\n        <div className=\"coin-card\">\n          <div className=\"coin-card__img\">\n            <img src={asset?.img_path} alt=\"\" />\n          </div>\n\n          <div className=\"coin-card__info\">\n            <p\n              className=\"coin-card__info-name\"\n              style={{ textTransform: 'uppercase' }}\n            >\n              {asset?.code}\n            </p>\n            <p className=\"coin-card__info-text\">{asset?.name}</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"td\">\n        <p className=\"table-value\">{total}</p>\n      </div>\n\n      <div className=\"td\">\n        <p className=\"table-value\">{balance}</p>\n      </div>\n\n      <div className=\"td\">\n        <p className=\"table-value\">{frozen_balance}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default SupportedCurrencyItem;\n","import React, { useMemo, useState } from 'react';\nimport L from 'i18n-react';\nimport SupportedCurrencyItem from './SupportedCurrencyItem';\nimport SortButton from './SortButton';\nimport Loader from '../../../../Base/Loader';\nimport { sortingColumnTable } from '../../../../../services/helpers';\nimport EmptyTable from '../../../../Base/EmptyTable';\n\nconst SupportedCurrency = ({\n  isLoading,\n  title,\n  labels,\n  data,\n  activeEl,\n  onSelectItem,\n  setFieldValue,\n  showZeroBalances = false,\n  isShowZeroBalances,\n  setIsShowZeroBalances,\n}) => {\n  const [sort, setSort] = useState({ sort: 'desc', order: 'name' });\n  const [search, setSearch] = useState('');\n  const [wallets, setWallets] = useState([]);\n\n  useMemo(\n    () => sortingColumnTable({ sort, data, setState: setWallets }),\n    [sort, data],\n  );\n\n  // Check data\n  if (isLoading) return <Loader />;\n  if (!data || !data.length)\n    return <p>{L.translate('Pages.Users.Withdraw.SupportedCurrency.item1')}</p>;\n\n  const toggleSort = e => {\n    const { order, sort } = e;\n    setSort({ order, sort });\n  };\n\n  const filterWallets = data\n    .filter(currency => {\n      if (search !== '') {\n        return (\n          currency?.asset?.name\n            ?.toLowerCase()\n            .includes(search?.toLowerCase()) ||\n          currency?.asset?.code?.toLowerCase().includes(search?.toLowerCase())\n        );\n      }\n      return true;\n    })\n    .map(currency => (\n      <SupportedCurrencyItem\n        key={currency.asset.id}\n        onSelectItem={onSelectItem}\n        setFieldValue={setFieldValue}\n        selected={activeEl === currency.asset.id}\n        {...currency}\n      />\n    ));\n\n  const handleSearchValue = e => {\n    setSearch(e.target.value.toLowerCase());\n  };\n\n  const [title1, title2, title3, title4] = labels;\n\n  return (\n    <>\n      <div className=\"transfer-panel\">\n        <p className=\"item-title item-title--bigger\">{title}</p>\n\n        <div className=\"transfer-search\">\n          <div className=\"field-wrap\">\n            <input\n              type=\"text\"\n              className=\"input input--icon-right\"\n              placeholder={L.translate(\n                'Pages.Users.Withdraw.SupportedCurrency.item2',\n              )}\n              value={search}\n              onChange={handleSearchValue}\n            />\n\n            <span className=\"field-icon\">\n              <svg\n                className=\"fill\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 20 20\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M8.04938 16.0928C9.83702 16.0928 11.5735 15.4963 12.9838 14.3977L18.3045 19.7191C18.7019 20.103 19.3353 20.092 19.7192 19.6945C20.0936 19.3067 20.0936 18.6919 19.7192 18.3042L14.3985 12.9828C17.1243 9.47344 16.4895 4.41858 12.9807 1.69241C9.47196 -1.03376 4.41791 -0.398932 1.69215 3.11039C-1.03361 6.61971 -0.398872 11.6746 3.10992 14.4007C4.52252 15.4983 6.26058 16.0937 8.04938 16.0928ZM3.77429 3.77179C6.13538 1.4103 9.96347 1.41025 12.3246 3.7717C14.6857 6.13315 14.6858 9.96181 12.3247 12.3233C9.9636 14.6848 6.13551 14.6848 3.77438 12.3234C3.77434 12.3234 3.77434 12.3234 3.77429 12.3233C1.4132 9.97906 1.39929 6.16436 3.74318 3.80291C3.75354 3.79251 3.76389 3.78215 3.77429 3.77179Z\"\n                  fill=\"#969696\"\n                />\n              </svg>\n            </span>\n          </div>\n        </div>\n      </div>\n\n      {showZeroBalances && (\n        <div className=\"transfer-panel transfer-panel--small-mt transfer-panel--end\">\n          <button\n            className=\"button button--link-type\"\n            onClick={setIsShowZeroBalances}\n          >\n            {isShowZeroBalances\n              ? L.translate('Pages.Users.Withdraw.SupportedCurrency.item4')\n              : L.translate(\n                  'Pages.Users.Withdraw.SupportedCurrency.item5',\n                )}{' '}\n            {L.translate('Pages.Users.Withdraw.SupportedCurrency.item6')}\n          </button>\n        </div>\n      )}\n\n      <div className=\"coins-table-box\">\n        <div className=\"coin-table\">\n          <div className=\"table-header\">\n            <div className=\"tr\">\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">{title1}</div>\n\n                <SortButton toggleSort={toggleSort} sort={sort} order=\"name\" />\n              </div>\n\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">\n                  {title2}\n\n                  <SortButton toggleSort={toggleSort} sort={sort} order=\"id\" />\n                </div>\n              </div>\n\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">\n                  {title3}\n\n                  <SortButton\n                    toggleSort={toggleSort}\n                    sort={sort}\n                    order=\"balance\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"td\">\n                <div className=\"td-name td-name--type2\">\n                  {title4}\n\n                  <SortButton\n                    toggleSort={toggleSort}\n                    sort={sort}\n                    order=\"frozen_balance\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"table-body\">\n            {filterWallets.length ? (\n              filterWallets\n            ) : (\n              <EmptyTable\n                text={L.translate(\n                  'Pages.Users.Withdraw.SupportedCurrency.item3',\n                )}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default SupportedCurrency;\n"],"sourceRoot":""}